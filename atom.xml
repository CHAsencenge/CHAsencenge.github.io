<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>解字</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-07T03:43:05.363Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CHAsencenge</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>天赋党</title>
    <link href="http://yoursite.com/2019/12/04/%E5%A4%A9%E8%B5%8B%E5%85%9A/"/>
    <id>http://yoursite.com/2019/12/04/天赋党/</id>
    <published>2019-12-04T12:09:43.000Z</published>
    <updated>2020-07-07T03:43:05.363Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>本地代码提交至git</title>
    <link href="http://yoursite.com/2019/11/20/%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%87%B3git/"/>
    <id>http://yoursite.com/2019/11/20/本地代码提交至git/</id>
    <published>2019-11-20T15:02:36.000Z</published>
    <updated>2020-07-07T04:03:43.915Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">本地更新如何提交至GitHub</blockquote><a id="more"></a><h3 id="for-first-use"><a href="#for-first-use" class="headerlink" title="for first use"></a>for first use</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init   ***init .git***  </span><br><span class="line">git status   ***check files to be added to the local repository***  </span><br><span class="line">git add xxx  ***add files to repo***   </span><br><span class="line">git commit -m &quot;commit description&quot;  ***commit to repo***   </span><br><span class="line">git remote add origin git@github.com:mobinets/hyblora.git  ***link local repo to github***    </span><br><span class="line">git pull --rebase origin master  ***pull = fetch + merge***  </span><br><span class="line">git push -u origin master  ***upload***</span><br></pre></td></tr></table></figure><h3 id="not-first-use-repo"><a href="#not-first-use-repo" class="headerlink" title="not first use repo"></a>not first use repo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add xxx  </span><br><span class="line">git commit -m &quot;commit discription&quot;  </span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;本地更新如何提交至GitHub
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>双十一有一说一</title>
    <link href="http://yoursite.com/2019/11/11/%E5%8F%8C%E5%8D%81%E4%B8%80%E6%9C%89%E4%B8%80%E8%AF%B4%E4%B8%80/"/>
    <id>http://yoursite.com/2019/11/11/双十一有一说一/</id>
    <published>2019-11-11T04:16:55.000Z</published>
    <updated>2020-07-07T03:54:05.545Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>ParticalFilter(粒子滤波算法)</title>
    <link href="http://yoursite.com/2019/09/23/ParticalFilter(%E7%B2%92%E5%AD%90%E6%BB%A4%E6%B3%A2%E7%AE%97%E6%B3%95)/"/>
    <id>http://yoursite.com/2019/09/23/ParticalFilter(粒子滤波算法)/</id>
    <published>2019-09-23T05:36:58.000Z</published>
    <updated>2020-07-07T04:04:58.469Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">粒子滤波算法</blockquote><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> scipy <span class="keyword">as</span> scipy</span><br><span class="line"><span class="keyword">from</span> numpy.random <span class="keyword">import</span> uniform</span><br><span class="line"><span class="keyword">import</span> scipy.stats</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">np.set_printoptions(threshold=<span class="number">3</span>)</span><br><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawLines</span><span class="params">(img, points, r, g, b)</span>:</span></span><br><span class="line">    cv2.polylines(img, [np.int32(points)], isClosed=<span class="literal">False</span>, color=(r, g, b))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawCross</span><span class="params">(img, center, r, g, b)</span>:</span></span><br><span class="line">    d = <span class="number">5</span></span><br><span class="line">    t = <span class="number">2</span></span><br><span class="line">    LINE_AA = cv2.LINE_AA <span class="keyword">if</span> cv2.__version__[<span class="number">0</span>] == <span class="string">'3'</span> <span class="keyword">else</span> cv2.CV_AA</span><br><span class="line">    color = (r, g, b)</span><br><span class="line">    ctrx = center[<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    ctry = center[<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">    cv2.line(img, (ctrx - d, ctry - d), (ctrx + d, ctry + d), color, t, LINE_AA)</span><br><span class="line">    cv2.line(img, (ctrx + d, ctry - d), (ctrx - d, ctry + d), color, t, LINE_AA)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mouseCallback</span><span class="params">(event, x, y, flags,null)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> center</span><br><span class="line">    <span class="keyword">global</span> trajectory</span><br><span class="line">    <span class="keyword">global</span> previous_x</span><br><span class="line">    <span class="keyword">global</span> previous_y</span><br><span class="line">    <span class="keyword">global</span> zs</span><br><span class="line">    </span><br><span class="line">    center=np.array([[x,y]])</span><br><span class="line">    trajectory=np.vstack((trajectory,np.array([x,y])))</span><br><span class="line">    <span class="comment">#noise=sensorSigma * np.random.randn(1,2) + sensorMu</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> previous_x &gt;<span class="number">0</span>:</span><br><span class="line">        heading=np.arctan2(np.array([y-previous_y]), np.array([previous_x-x ]))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> heading&gt;<span class="number">0</span>:</span><br><span class="line">            heading=-(heading-np.pi)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            heading=-(np.pi+heading)</span><br><span class="line">            </span><br><span class="line">        distance=np.linalg.norm(np.array([[previous_x,previous_y]])-np.array([[x,y]]) ,axis=<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        std=np.array([<span class="number">2</span>,<span class="number">4</span>])</span><br><span class="line">        u=np.array([heading,distance])</span><br><span class="line">        predict(particles, u, std, dt=<span class="number">1.</span>)</span><br><span class="line">        zs = (np.linalg.norm(landmarks - center, axis=<span class="number">1</span>) + (np.random.randn(NL) * sensor_std_err))</span><br><span class="line">        update(particles, weights, z=zs, R=<span class="number">50</span>, landmarks=landmarks)</span><br><span class="line">        </span><br><span class="line">        indexes = systematic_resample(weights)</span><br><span class="line">        resample_from_index(particles, weights, indexes)</span><br><span class="line"></span><br><span class="line">    previous_x=x</span><br><span class="line">    previous_y=y</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WIDTH=<span class="number">800</span></span><br><span class="line">HEIGHT=<span class="number">600</span></span><br><span class="line">WINDOW_NAME=<span class="string">"Particle Filter"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sensorMu=0</span></span><br><span class="line"><span class="comment">#sensorSigma=3</span></span><br><span class="line"></span><br><span class="line">sensor_std_err=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_uniform_particles</span><span class="params">(x_range, y_range, N)</span>:</span></span><br><span class="line">    particles = np.empty((N, <span class="number">2</span>))</span><br><span class="line">    particles[:, <span class="number">0</span>] = uniform(x_range[<span class="number">0</span>], x_range[<span class="number">1</span>], size=N)</span><br><span class="line">    particles[:, <span class="number">1</span>] = uniform(y_range[<span class="number">0</span>], y_range[<span class="number">1</span>], size=N)</span><br><span class="line">    <span class="keyword">return</span> particles</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(particles, u, std, dt=<span class="number">1.</span>)</span>:</span></span><br><span class="line">    N = len(particles)</span><br><span class="line">    dist = (u[<span class="number">1</span>] * dt) + (np.random.randn(N) * std[<span class="number">1</span>])</span><br><span class="line">    particles[:, <span class="number">0</span>] += np.cos(u[<span class="number">0</span>]) * dist</span><br><span class="line">    particles[:, <span class="number">1</span>] += np.sin(u[<span class="number">0</span>]) * dist</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(particles, weights, z, R, landmarks)</span>:</span></span><br><span class="line">    weights.fill(<span class="number">1.</span>)</span><br><span class="line">    <span class="keyword">for</span> i, landmark <span class="keyword">in</span> enumerate(landmarks):</span><br><span class="line">       </span><br><span class="line">        distance=np.power((particles[:,<span class="number">0</span>] - landmark[<span class="number">0</span>])**<span class="number">2</span> +(particles[:,<span class="number">1</span>] - landmark[<span class="number">1</span>])**<span class="number">2</span>,<span class="number">0.5</span>)</span><br><span class="line">        weights *= scipy.stats.norm(distance, R).pdf(z[i])</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    weights += <span class="number">1.e-300</span> <span class="comment"># avoid round-off to zero</span></span><br><span class="line">    weights /= sum(weights)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">neff</span><span class="params">(weights)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.</span> / np.sum(np.square(weights))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">systematic_resample</span><span class="params">(weights)</span>:</span></span><br><span class="line">    N = len(weights)</span><br><span class="line">    positions = (np.arange(N) + np.random.random()) / N</span><br><span class="line"></span><br><span class="line">    indexes = np.zeros(N, <span class="string">'i'</span>)</span><br><span class="line">    cumulative_sum = np.cumsum(weights)</span><br><span class="line">    i, j = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; N <span class="keyword">and</span> j&lt;N:</span><br><span class="line">        <span class="keyword">if</span> positions[i] &lt; cumulative_sum[j]:</span><br><span class="line">            indexes[i] = j</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> indexes</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate</span><span class="params">(particles, weights)</span>:</span></span><br><span class="line">    pos = particles[:, <span class="number">0</span>:<span class="number">1</span>]</span><br><span class="line">    mean = np.average(pos, weights=weights, axis=<span class="number">0</span>)</span><br><span class="line">    var = np.average((pos - mean)**<span class="number">2</span>, weights=weights, axis=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> mean, var</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resample_from_index</span><span class="params">(particles, weights, indexes)</span>:</span></span><br><span class="line">    particles[:] = particles[indexes]</span><br><span class="line">    weights[:] = weights[indexes]</span><br><span class="line">    weights /= np.sum(weights)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">x_range=np.array([<span class="number">0</span>,<span class="number">800</span>])</span><br><span class="line">y_range=np.array([<span class="number">0</span>,<span class="number">600</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#Number of partciles</span></span><br><span class="line">N=<span class="number">400</span></span><br><span class="line"></span><br><span class="line">landmarks=np.array([ [<span class="number">144</span>,<span class="number">73</span>], [<span class="number">410</span>,<span class="number">13</span>], [<span class="number">336</span>,<span class="number">175</span>], [<span class="number">718</span>,<span class="number">159</span>], [<span class="number">178</span>,<span class="number">484</span>], [<span class="number">665</span>,<span class="number">464</span>]  ])</span><br><span class="line">NL = len(landmarks)</span><br><span class="line">particles=create_uniform_particles(x_range, y_range, N)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">weights = np.array([<span class="number">1.0</span>]*N)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a black image, a window and bind the function to window</span></span><br><span class="line">img = np.zeros((HEIGHT,WIDTH,<span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.namedWindow(WINDOW_NAME)</span><br><span class="line">cv2.setMouseCallback(WINDOW_NAME,mouseCallback)</span><br><span class="line"></span><br><span class="line">center=np.array([[<span class="number">-10</span>,<span class="number">-10</span>]])</span><br><span class="line"></span><br><span class="line">trajectory=np.zeros(shape=(<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line">robot_pos=np.zeros(shape=(<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line">previous_x=<span class="number">-1</span></span><br><span class="line">previous_y=<span class="number">-1</span></span><br><span class="line">DELAY_MSEC=<span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    cv2.imshow(WINDOW_NAME,img)</span><br><span class="line">    img = np.zeros((HEIGHT,WIDTH,<span class="number">3</span>), np.uint8)</span><br><span class="line">    drawLines(img, trajectory,   <span class="number">0</span>,   <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">    drawCross(img, center, r=<span class="number">255</span>, g=<span class="number">0</span>, b=<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#landmarks</span></span><br><span class="line">    <span class="keyword">for</span> landmark <span class="keyword">in</span> landmarks:</span><br><span class="line">        cv2.circle(img,tuple(landmark),<span class="number">10</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">-1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#draw_particles:</span></span><br><span class="line">    <span class="keyword">for</span> particle <span class="keyword">in</span> particles:</span><br><span class="line">        cv2.circle(img,tuple((int(particle[<span class="number">0</span>]),int(particle[<span class="number">1</span>]))),<span class="number">1</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> cv2.waitKey(DELAY_MSEC) &amp; <span class="number">0xFF</span> == <span class="number">27</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    cv2.circle(img,(<span class="number">10</span>,<span class="number">10</span>),<span class="number">10</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">-1</span>)</span><br><span class="line">    cv2.circle(img,(<span class="number">10</span>,<span class="number">30</span>),<span class="number">3</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">-1</span>)</span><br><span class="line">    cv2.putText(img,<span class="string">"Landmarks"</span>,(<span class="number">30</span>,<span class="number">20</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    cv2.putText(img,<span class="string">"Particles"</span>,(<span class="number">30</span>,<span class="number">40</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">    cv2.putText(img,<span class="string">"Robot Trajectory(Ground truth)"</span>,(<span class="number">30</span>,<span class="number">60</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    drawLines(img, np.array([[<span class="number">10</span>,<span class="number">55</span>],[<span class="number">25</span>,<span class="number">55</span>]]), <span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="如何安装依赖并运行"><a href="#如何安装依赖并运行" class="headerlink" title="如何安装依赖并运行"></a>如何安装依赖并运行</h2><p>打开anaconda prompt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda create -n Filters python=3</span><br><span class="line">conda activate Filters</span><br><span class="line">conda install -c menpo opencv3</span><br><span class="line">conda install numpy scipy matplotlib sympy</span><br></pre></td></tr></table></figure><p>cd python_code<br>python partical.py<br>python partical_v2.py</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;粒子滤波算法&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hexo发布</title>
    <link href="http://yoursite.com/2019/09/14/Hexo%E5%8F%91%E5%B8%83/"/>
    <id>http://yoursite.com/2019/09/14/Hexo发布/</id>
    <published>2019-09-14T15:52:50.000Z</published>
    <updated>2020-07-07T03:44:57.112Z</updated>
    
    <content type="html"><![CDATA[<p>hexo文件夹中，git bash here</p><p>hexo new ‘’</p><p>hexo clean</p><p>hexo g</p><p>hexo d</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hexo文件夹中，git bash here&lt;/p&gt;
&lt;p&gt;hexo new ‘’&lt;/p&gt;
&lt;p&gt;hexo clean&lt;/p&gt;
&lt;p&gt;hexo g&lt;/p&gt;
&lt;p&gt;hexo d&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>矛盾论</title>
    <link href="http://yoursite.com/2019/09/13/%E7%9F%9B%E7%9B%BE%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/09/13/矛盾论/</id>
    <published>2019-09-13T07:24:37.000Z</published>
    <updated>2020-07-07T03:52:34.178Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>Python---yield关键字</title>
    <link href="http://yoursite.com/2019/07/25/Python%E7%9A%84yield%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://yoursite.com/2019/07/25/Python的yield关键字/</id>
    <published>2019-07-25T06:59:22.000Z</published>
    <updated>2020-07-07T03:59:33.769Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">python中yield关键字的用法</blockquote><a id="more"></a><h2 id="迭代-iteration-与可迭代-iterable"><a href="#迭代-iteration-与可迭代-iterable" class="headerlink" title="迭代(iteration)与可迭代(iterable)"></a>迭代(iteration)与可迭代(iterable)</h2><p>使用<strong>容器</strong>时逐个获取元素的过程为<strong>迭代</strong>。</p><h2 id="哪些类型是可迭代的"><a href="#哪些类型是可迭代的" class="headerlink" title="哪些类型是可迭代的"></a>哪些类型是可迭代的</h2><ul><li>python中的顺序类型： <code>list</code>, <code>tuple</code>(元组，列表可修改元组不可修改，列表用中括号元组用小括号), <code>string</code>.</li><li><code>dict</code>, <code>set</code>, <code>file</code>.</li><li>某类对象提供了 <code>__iter__()</code> 或者 <code>__getitem__()</code> 方法.</li></ul><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><p>对迭代器不断调用<code>next()</code>方法，可依次获取下一个元素，迭代器<code>__iter__()</code>方法返回迭代器自身，因此迭代器也是可迭代的。</p><h2 id="迭代器协议-iterator-protocol"><a href="#迭代器协议-iterator-protocol" class="headerlink" title="迭代器协议(iterator protocol)"></a>迭代器协议(iterator protocol)</h2><p>一个容器提供<code>__iter__()</code>方法，该方法能返回一个能逐个访问容器内所有元素的迭代器，则该容器实现了迭代器协议。</p><h3 id="python处理for循环的过程"><a href="#python处理for循环的过程" class="headerlink" title="python处理for循环的过程"></a>python处理for循环的过程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> something:</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><p>处理for循环首先调用内建函数<code>iter(something)</code>,内建函数调用<code>something.__iter__()</code>,返回something对应的迭代器，然后for循环会调用内建函数<code>next()</code>，作用在迭代器上获取迭代器的下一个元素，并赋值给x</p><h2 id="生成器函数-generaor-function-和生成器-generator"><a href="#生成器函数-generaor-function-和生成器-generator" class="headerlink" title="生成器函数(generaor function)和生成器(generator)"></a>生成器函数(generaor function)和生成器(generator)</h2><p>如果一个函数包含 yield 表达式，那么它是一个生成器函数；调用它会返回一个特殊的迭代器，称为生成器。</p><p>生成器函数被调用后，其函数体内的代码并不会立即执行，而是返回一个生成器（generator-iterator）。当返回的生成器调用成员方法时，相应的生成器函数中的代码才会执行。</p><h2 id="“下一个yield表达式”"><a href="#“下一个yield表达式”" class="headerlink" title="“下一个yield表达式”"></a>“下一个yield表达式”</h2><p>调用 generator.next() 时，生成器函数会从当前位置开始执行到下一个 yield 表达式。这里的「下一个」指的是执行逻辑的下一个。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f123</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> f123(): <span class="comment"># 1, 2, and 3, will be printed</span></span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f13</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">False</span>:</span><br><span class="line">        <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> f13(): <span class="comment"># 1 and 3, will be printed</span></span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><h3 id="使用-send-方法与生成器函数通信"><a href="#使用-send-方法与生成器函数通信" class="headerlink" title="使用 send() 方法与生成器函数通信"></a>使用 send() 方法与生成器函数通信</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        y = (<span class="keyword">yield</span> x)</span><br><span class="line">        x += y</span><br><span class="line"></span><br><span class="line">geniter = func()</span><br><span class="line">geniter.next()  <span class="comment"># 1</span></span><br><span class="line">geniter.send(<span class="number">3</span>) <span class="comment"># 4</span></span><br><span class="line">geniter.send(<span class="number">10</span>)<span class="comment"># 14</span></span><br></pre></td></tr></table></figure><p>生成器函数 func 用 yield 表达式，将处理好的 x 发送给生成器的调用者；与此同时，生成器的调用者通过 send 函数，将外部信息作为生成器函数内部的 yield 表达式的值，保存在 y 当中，并参与后续的处理。</p><h2 id="yield的好处"><a href="#yield的好处" class="headerlink" title="yield的好处"></a>yield的好处</h2><p>顺序访问容器内的前五个元素：</p><ul><li>way1:获取所有元素然后取前五</li><li>way2:逐个迭代，至第五个元素</li></ul><p>假设对于一个func(),返回值为列表，调用者对其返回值只有逐个迭代：</p><ul><li>若等函数生成所有元素可能需要很长时间</li><li>使用yield把func()变成一个生成器函数，每次产生一个元素，可以节省开销</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;python中yield关键字的用法
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>又梦</title>
    <link href="http://yoursite.com/2019/07/19/%E5%8F%88%E6%A2%A6/"/>
    <id>http://yoursite.com/2019/07/19/又梦/</id>
    <published>2019-07-19T02:55:49.000Z</published>
    <updated>2020-07-07T03:55:17.783Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>非极客</title>
    <link href="http://yoursite.com/2019/07/19/%E9%9D%9E%E6%9E%81%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/07/19/非极客/</id>
    <published>2019-07-19T02:26:12.000Z</published>
    <updated>2020-07-07T03:50:53.874Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX18uHcGoNDLJ3F1pvlxbB1WuthRFoHx05OdrNdRVV89FYjG0zTvcH0PK6FEKs8cGwcJVj5yXQVNBz+pz9E2+52n2OR2ZRbcSbs1Z7vwfIDRR1n2wej4bXtvuvN9nhzkowcsQzhWZcPwMOaOCL337takEO4HeQDJ6HXBapask3bxk/svS02xMBwbpzW4tVZmfRuOEuljn2vdkpio0fW84RNDAcrd+zLtwts612IWIjLF6ViHnwl2WCioukBLtlPzHY8Es/8lVlNUm6vnyMCtZpp4hjqBJf8HZU9TDxKar5Vbk5FInmMiGI6kPGHXCSY00LkjruZH9voC67fPCpgwvRTgW7YeJOOt8Qeem1/vsQ8edy1bSFoc5q1ezBtmhl+Pjbm3QlBH8JWmlekU37HvmidYjAXCHCTLymX/N1mnMksOSUnlVZ2t+vsSa19AikzNGhF4xibRS5ezPfBILWIOfN6vLg6a9ponIz/VuTS2yJDVRmOE+v+3fniEIhqymoiUh4YfY1snc8I+XxsLDJV2yhcUr0R/b5Epn1b/mOfqg2MeFgiE4W02bTbDWAVQeRjlOpSexpEV65BVWZ+oV7FJQV4pf1eEHGuBBxUkjajltNEnIXLsiRqhdBcMgdFj9Z602VnZEcqpT02WMUXwF/V1Qb9H/OW2t0y46356IH9SblNKN+BZtDjEgHdnv8RH1gVAo4U3ttu1NRhRChS0eb7fnrCgOr8PFT2qbA2zX7EM4wGnWTylEyAB32X3c1KKIOFe8oWZS/Dz6DX0ix9mM7g1BpCL5dmgY3nFC6Mu9b+r0IxTcB9PKQVRbZ/my9gavwVA1fFOuS/ahGPGKX1dHThICpawOy5al8BmcJjisxc15R3PxsAJb2MA2lc/AWG0iXLHI24pBBpLpZ4sWHFnJegFAcJL7rlLybPmjnrveVqGWmDnvI3nt0G4ApPDpMQl84FS80pe4OUBgdhe4c+wpCQp2u4HU84uZk7VDng+A/3HhNMwgg9A/QTawDFsydTZZ3+AJ6/JonSC5XPeqsdvmIJZff9Dg5O4hW/AsrcAMbGoudZz7UlDN9gcBrZaqKHdGn91EaGmAHvvUVotpvXJZATZ/0bcmM4FW7BImzlEioZlAOm7EQpE18jPTKraxUpOTFHkvDXANwAuS/N7i5OVkHoeRwmOEs6/D+5yYp+l748EKzC36J28pFto7t6luGnbl5T8hnAWeAsNLd2snrZgyxTyidKOvA+xdh8LN2AQJnWzTV32B8q5Km1OE8FEeesYomJZuiEhvxZIJ+binxP+zQg62J1oJ1qhnu1tfpnWjLGVUWkx2D46arg+02sLeTuvDeL0/QbTOQ7br/jU1Ifwu53lk+d1OaLAFoiWeMpggculwX4Qwu50GZnR9OOZ7f2AY4CdGYORlnF2of0ijxIamAoP25wPk+20GC51L9dYwxwgykJYcLHcGCOABGLtsHJCdwDpQRthXhUFiZ9CwwT29FzVOT4KAVIFXHSjvRy5amADQeFIczH9jsySUKOQkIN7pqW1Werg7quCgePJuSgImOK+b0Q6G43NK/F74STTIKgyfmicHB0sc0IMso1cQldqVf19cYsP5X2vSKNldbOK35HiGcOevJG59a1sL/f0LsE7O78o98k239MTbpWmyvyz4u5ZtrcjlwCGIEMbch3U/0TxS7zRqqDfJY78jO8QMTYapHxM6TstI1Q4PEbJ+J9zkD7ijUn2cfI/uPsBipzJZis24/HFU2f52TNUHrcrPMGC4Ga1QyarQL4/XIRpfqjZn4/X2OFprzHDSWmXvcYogQtFZuKBL480jcg/V6QN1ztHtOOO2tS3vAgH0Yx+i/rn3vgkzLp2oDiRCphuh3kl9J7UweQNeyOOSXEet7Okze+fuuT5SKUb7u/qyallhvT/D5OvG6eDrAOew5u5R+CQcCcAnZ/AeWALICzQxkcTtAMqW0pOumDQof9m/XkjxnIvNXjjMn+x0ihTfgjptjeS6VGZ7euOuKbtyslAVrXsYFV3/Diq4XhYOw64aVXLU7S94w7InC0n4srEK9V2IGhIRnLHubgoLeqieHyRyZuDb9zuXZm34Od20WZTiSxapbbrIA2sZ4pzu/EIa2cSAhFo9OJebWr34lLDn7d2EgEF9aQnkgaShXDSq3xFucdCNSWcbhrRpjPJCKnc/cMN6WFRNa0Z0WtRunJYd3anibjEW0v0qfJM6gdw3uPnj4l0A0JrMDZzpyMAjQy/5kMf72Ccjto/vF4usnvk0g3OHfM/w2s16cXfko/GW8yziNYD8rLNt+Aaok0pyh8w1zqrhcNBiEFgMhUT5HcRj3exhjCiBqDQ8NUAcyTz1oTmW4dlgiCZxuAjr6PF909X4PcXiltxqKUTsm43hmn6sKKNwDvusbNGarmZbG+3+CU/0BLe5NRCzwR4QF732DSyZkDdTDtgawOvMEbNVEnTnlQDUx0r89ZYl6+xV49u3JzopO09Ar01p/VqCCbX/kYDX/FKBTTRmoSsTdDe8/A/MqaycWF8wMa9t2nPiKn5E6um9ZxI7cU0AqfCNdHjVuo8AgOAbxYVdvp8Im4fOg3NIfL+JaYEjcwjewcYp5oBvLBi2qkW61yVjAAKhCNdwAvhTsEtaS/LdaXKQC3m6rsnFW4+2UCltT0ZNq+iGuXtYoMPUK9YoRH7+IUMseHBVWbbRd6qnEooQbd7m/e30igkwFLgbhGJHz9a3cy6YOdTJcF+YNdC/WccatzqH/iNhPQkbiAIxgZjXspxstXc3k2InZJ1RE0/cHp8KiwtatlPqC5n/GH/wIfmmDDN0OyXwN5DPWI0epaYMdeC2u+8DxIq9SqS7eLm/ankQlioUJIJqMWRb/WuKbdJmw9U4R9OFj4za7mWFhw0/pdKQP9OcWGjY4iV84cNxPro1j6TV83QfgbnRZp/PEsL++mcLiLl+XWaYmO/rlXpF2Yvas25ov+S4r9Ta3kpKAyTfs4JGEI0P5xHryIOcjgdUAd5w9vGJm927g8fOCmzUpN+OlkpHFuZ+01dXUe0XAmKXM8V93V0gQgwXkOcyUAh76QPAIAj7lqV4DlkvbEUGCCQcfuYMu0lKwxyURJlLZcXqflmZ8S+o7CkBOA846r6igMw6Z3+mDwT81/2lxhXIQEK47Sx8d/eD90m3Wrp33If032sG4w//u2CC2TZVhA9y5dUKxJYhMfHlwzYNj5eNRKanv7m9zfAcd+jcUSj0Mj5e84fGIXmYs0CmKDaaE2gn1hFWuQRZsTkkg3u+OdXwGdVl491qBdK1+WCPWzYcKkG92nY1aPfHg1BvL3/foKjRPC0S1PSDUlv3qxRAmz3x7frGdrJxPl/BI795yMDjLH0uKhO1YGXZ+nwHdzhXH64EH4bm/a/LSUIq2dHvdUNmpIkEmv4w9cTsXUAN+thUFde9pD9KIKHuxxzdLr4tUguvpqnaMS+yFEp87+moju0qEqT02ZBCycJCOgZO2dOuLuIM2k+m+V2OMdZzBpoCvp3TtU6cIKOQZ7sBmWP1sh2YTmsLEc93dBFZyXC+IdRPLZnCHyJ1XAA3dfnsGSIlMHgNGK9td8I4vYjNHFJNmo6KHCAdNeIjkV4AUR3pmxAHyi/xz0YSB93vZNv/g4HAoPsbyJb85eVyr1YmLcjqFR6sxH3cBDz0DsvKUtN36+T8gvkXcATVAiMX4VQ0/6GfvSZfBRlEM1fpfWZTlBH9hoGqbBOdbzj8E7lNdCl0Q6Kx1V1i1LRFXQWMD3fDPQD4fy7goZcAZaXjc2eiqGkWnrjdpuNYJiFsczDsNhu1L7LFFnl/PXVZT79aKP3vu1TShCRXWcHXRXUUMVDAC+3mObVtMNBi97MPbJ0YprNsCCuAundNcBwNwEDxA4FRJK+E/WRvTczwSNalByP3/6ksRVJrjGwTvKN+2rasezDJpFDliXjvXRMnKEscEvWw+jds+gvF1Pg3IIndc9B764r3IAh1V65Yv+y7peTp5Nn5hsl4zG6OPoigpt93nmpMosn48vF9Pa8LR5mfAdxPW2U4t+C9wupWkSLdmkhmIwG4tzJ0/ZiU8cs7LU/q7vKhUphEEyL+bHnBAhGYeb4Dg8kDVxQK2kPByzXaXZW2GRxvVzTJRayz1729R0C2a+TEEjCw9c2bSPwT5at1bk/wFh9ucF/JNhLWmdhWQeB+CW6zF0kYYF/uInILhGgt5lJh/5Pfd9CpD9GbprR750u5bEb/KvRt4THxr+CTmBy7C6EpFGflDqA1PT6/uXiUfPsk60vO4fT6mTR3ydKYAkisNw58BxSkyTUgD4Dj2Jf1CGoDY/GBOCUiotDpxh3tyzn8Ks2o4xMhhqILhRwOx8Y0Yv0PUdoa3lACgTn1QqFhsLPe42+WgURN+3AizPrMUE83awNHeQvXRSyMO58Vx/mwmlL1dNLfC7L+v/FZoB65QwOcx47eZcsrpIU1lTGTcplUcYGYaUjqrdVFhnBf+9BashSAhm4YnGSVxXvNv9BvjVNqM2Lb7/MyFU6avWBcnQPaTOjIBriMpDmBg1ZTfAJj1M2VQzBfmf0V27gKYtmVm6fJ9v0bGBU2++qfJYi3/DvMIOBjhbkCig+sQaiQYrYKQELwO3b9UxTKUIcmqcGdoZnioY+F/1y5ZTT8O1dZwMLB5NADyVtJlcMyD44sxgjWashV2mwMMyy/l4wkQHxlylPn5e4tHcMCz1VBRV1XGPHvurmuEmccXWF7ffbr748HBtawZ749nbxCu/jk/+U70KxoNhqifqedfd1aL6hdyVVayo2x23kgSDz3Z2RLSdj0wnFXYpV0MPmhMTeQUTL82N3yiItWbYpdYtYmeI66M+pWTgRCEKXysvTQ+8IyQ1OPIVkMJQ==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>Gradle相关知识(转载自Bonker)</title>
    <link href="http://yoursite.com/2019/07/18/Gradle%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86(%E8%BD%AC%E8%BD%BD%E8%87%AABonker)/"/>
    <id>http://yoursite.com/2019/07/18/Gradle相关知识(转载自Bonker)/</id>
    <published>2019-07-18T08:38:29.000Z</published>
    <updated>2020-07-07T04:04:41.779Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">关于Android开发中的Gradle</blockquote><a id="more"></a><p>(转载自Bonker）原文链接：<a href="https://www.cnblogs.com/Bonker/p/5619458.html" target="_blank" rel="noopener">https://www.cnblogs.com/Bonker/p/5619458.html</a></p><h2 id="什么是Gradle"><a href="#什么是Gradle" class="headerlink" title="什么是Gradle"></a>什么是Gradle</h2><p>简单的说，Gradle是一个构建工具，它是用来帮助我们构建app的，构建包括编译、打包等过程。我们可以为Gradle指定构建规则，然后它就会根据我们的“命令”自动为我们构建app。Android Studio中默认就使用Gradle来完成应用的构建。有些同学可能会有疑问：”我用AS不记得给Gradle指定过什么构建规则呀，最后不还是能搞出来个apk。“ 实际上，app的构建过程是大同小异的，有一些过程是”通用“的，也就是每个app的构建都要经历一些公共步骤。因此，在我们在创建工程时，Android Studio自动帮我们生成了一些通用构建规则，很多时候我们甚至完全不用修改这些规则就能完成我们app的构建。</p><p>有些时候，我们会有一些个性化的构建需求，比如我们引入了第三方库，或者我们想要在通用构建过程中做一些其他的事情，这时我们就要自己在系统默认构建规则上做一些修改。这时候我们就要自己向Gradle”下命令“了，这时候我们就需要用Gradle能听懂的话了，也就是Groovy。Groovy是一种基于JVM的动态语言，关于它的具体介绍，感兴趣的同学可以文末参考”延伸阅读“部分给出的链接。</p><p>我们在开头处提到“Gradle是一种构建工具”。实际上，当我们想要更灵活的构建过程时，Gradle就成为了一个编程框架——我们可以通过编程让构建过程按我们的意愿进行。也就是说，当我们把Gradle作为构建工具使用时，我们只需要掌握它的配置脚本的基本写法就OK了；而当我们需要对构建流程进行高度定制时，就务必要掌握Groovy等相关知识了。限于篇幅，本文只从构建工具使用者的角度来介绍Gradle的一些最佳实践，在文末“延伸阅读”部分给出了几篇高质量的深入介绍Gradle的文章，其中包含了Groovy等知识的介绍。</p><h2 id="Gradle的基本组分"><a href="#Gradle的基本组分" class="headerlink" title="Gradle的基本组分"></a>Gradle的基本组分</h2><h3 id="Project与Task"><a href="#Project与Task" class="headerlink" title="Project与Task"></a>Project与Task</h3><p>在Gradle中，每一个待构建的工程是一个Project，构建一个Project需要执行一系列Task，比如编译、打包这些构建过程的子过程都对应着一个Task。具体来说，一个apk文件的构建包含以下Task：Java源码编译、资源文件编译、Lint检查、打包以生成最终的apk文件等等。</p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>插件的核心工作有两个：一是定义Task；而是执行Task。也就是说，我们想让Gradle能正常工作，完成整个构建流程中的一系列Task的执行，必须导入合适的插件，这些插件中定义了构建Project中的一系列Task，并且负责执行相应的Task。</p><p>在新建工程的app模块的build.gradle文件的第一行，往往都是如下这句：</p><p>apply plugin: ‘com.android.application’<br>这句话的意思就是应用“com.android.application“这个插件来构建app模块，app模块就是Gradle中的一个Project。也就是说，这个插件负责定义并执行Java源码编译、资源文件编译、打包等一系列Task。实际上”com.android.application”整个插件中定义了如下4个顶级任务：</p><p>assemble: 构建项目的输出（apk）</p><p>check: 进行校验工作</p><p>build: 执行assemble任务与check任务</p><p>clean: 清除项目的输出</p><p>当我们执行一个任务时，会自动执行它所依赖的任务。比如，执行assemble任务会执行assembleDebug任务和assembleRelease任务，这是因为一个Android项目至少要有debug和release这两个版本的输出。</p><h3 id="Gradle配置文件"><a href="#Gradle配置文件" class="headerlink" title="Gradle配置文件"></a>Gradle配置文件</h3><p>我们在Android Studio中新建一个工程，可以得到如下的工程结构图：</p><p>上面我们说过，Android Studio中的一个Module即为Gradle中的一个Project。上图的app目录下，存在一个build.gradle文件，代表了app Module的构建脚本，它定义了应用于本模块的构建规则。我们可以看到，工程根目录下也存在一个build.gradle文件，它代表了整个工程的构建，其中定义了适用于这个工程中所有模块的构建规则。</p><p>接下来我们介绍一下上图中其他几个Gradle配置文件：</p><p>gradle.properties: 从它的名字可以看出，这个文件中定义了一系列“属性”。实际上，这个文件中定义了一系列供build.gradle使用的常量，比如keystore的存储路径、keyalias等等。</p><p>gradlew与gradlew.bat: gradlew为Linux下的shell脚本，gradlew.bat是Windows下的批处理文件。gradlew是gradle wrapper的缩写，也就是说它对gradle的命令进行了包装，比如我们进入到指定Module目录并执行“gradlew.bat assemble”即可完成对当前Module的构建（Windows系统下）。</p><p>local.properties: 从名字就可以看出来，这个文件中定义了一些本地属性，比如SDK的路径。</p><p>settings.gradle: 假如我们的项目包含了不只一个Module时，我们想要一次性构建所有Module以完成整个项目的构建，这时我们需要用到这个文件。比如我们的项目包含了ModuleA和ModuleB这两个模块，则这个文件中会包含这样的语句：include ‘:ModuleA’, ‘:ModuleB’。</p><h3 id="构建脚本"><a href="#构建脚本" class="headerlink" title="构建脚本"></a>构建脚本</h3><p>首先我们来看一下工程目录下的build.gradle，它指定了真个整个项目的构建规则，它的内容如下：</p><figure class="highlight plain"><figcaption><span>&#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">    repositories &#123;</span><br><span class="line">        jcenter() //构建脚本中所依赖的库都在jcenter仓库下载</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        //指定了gradle插件的版本</span><br><span class="line">        classpath &apos;com.android.tools.build:gradle:1.5.0&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        //当前项目所有模块所依赖的库都在jcenter仓库下载</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们再来简单介绍下app模块的build.gradle的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">//加载用于构建Android项目的插件</span><br><span class="line">apply plugin: &apos;com.android.application&apos;</span><br><span class="line"></span><br><span class="line">android &#123; //构建Android项目使用的配置</span><br><span class="line">    compileSdkVersion 23 //指定编译项目时使用的SDK版本</span><br><span class="line">    buildToolsVersion &quot;23.0.1&quot; //指定构建工具的版本</span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId &quot;com.absfree.debugframwork&quot; //包名</span><br><span class="line">        minSdkVersion 15  //指定支持的最小SDK版本</span><br><span class="line">        targetSdkVersion 23 //针对的目标SDK版本</span><br><span class="line">        versionCode 1 </span><br><span class="line">        versionName &quot;1.0&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123; //针对不同的构建版本进行一些设置</span><br><span class="line">        release &#123; //对release版本进行的设置</span><br><span class="line">            minifyEnabled false //是否开启混淆</span><br><span class="line">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;  //指定混淆文件的位置</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123; //指定当前模块的依赖</span><br><span class="line">    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class="line">    testCompile &apos;junit:junit:4.12&apos;</span><br><span class="line">    compile &apos;com.android.support:appcompat-v7:23.1.1&apos;</span><br><span class="line">    compile &apos;com.android.support:design:23.1.1&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常见配置"><a href="#常见配置" class="headerlink" title="常见配置"></a>常见配置</h2><p>整个工程的build.gradle通常不需我们改动，这里我们介绍下一些对模块目录下build.gradle文件的常见配置。</p><h3 id="依赖第三方库"><a href="#依赖第三方库" class="headerlink" title="依赖第三方库"></a>依赖第三方库</h3><p>当我们的项目中用到了了一些第三方库时，我们就需要进行一些配置，以保证能正确导入相关依赖。设置方法很简单，比如我们在app模块中中用到了Fresco，只需要在build.gradle文件中的dependencies块添加如下语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    ...</span><br><span class="line">    compile &apos;com.facebook.fresco:fresco:0.11.0&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样一来，Gradle会自动从jcenter仓库下载我们所需的第三方库并导入到项目中。</p><h3 id="导入本地jar包"><a href="#导入本地jar包" class="headerlink" title="导入本地jar包"></a>导入本地jar包</h3><p>在使用第三方库时，除了像上面那样从jcenter仓库下载，我们还可以导入本地的jar包。配置方法也很简单，只需要先把jar文件添加到app\libs目录下，然后在相应jar文件上单击右键，选择“Ad As Library”。然后在build.gradle的dependencies块下添加如下语句：</p><p>compile files(‘libs/xxx.jar’)<br>实际上我们可以看到，系统为我们创建的build.gradle中就已经包含了如下语句：</p><p>compile fileTree(dir: ‘libs’, include: [‘*.jar’])</p><p>这句话的意思是，将libs目录下的所有jar包都导入。所以实际上我们只需要把jar包添加到libs目录下并“Ad As Library”即可。</p><h3 id="依赖其它模块"><a href="#依赖其它模块" class="headerlink" title="依赖其它模块"></a>依赖其它模块</h3><p>假设我们的项目包含了多个模块，并且app模块依赖other模块，那么我们只需app\build.gradle的denpendencies块下添加如下语句：</p><p>compile project(‘:other’)</p><h3 id="构建输出为aar文件"><a href="#构建输出为aar文件" class="headerlink" title="构建输出为aar文件"></a>构建输出为aar文件</h3><p>通常我们构建的输出目标都是apk文件，但如果我们的当前项目时Android Library，我们的目标输出就是aar文件。要想达到这个目的也很容易，只需要把build.gradle的第一句改为如下：</p><p>apply plugin:’com.android.library’<br>这话表示我们使用的插件不再是构建Android应用的插件，而是构建Android Library的插件，这个插件定义并执行用于构建Android Library的一系列Task。</p><h3 id="自动移除不再使用的资源"><a href="#自动移除不再使用的资源" class="headerlink" title="自动移除不再使用的资源"></a>自动移除不再使用的资源</h3><p>只需进行如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            ...</span><br><span class="line">            shrinkResources true</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="忽略Lint错误"><a href="#忽略Lint错误" class="headerlink" title="忽略Lint错误"></a>忽略Lint错误</h3><p>在我们构建Android项目的过程中，有时候会由于Lint错误而终止。当这些错误来自第三方库中时，我们往往想要忽略这些错误从而继续构建进程。这时候，我们可以只需进行如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    lintOptions &#123;</span><br><span class="line">        abortOnError false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="集成签名配置"><a href="#集成签名配置" class="headerlink" title="集成签名配置"></a>集成签名配置</h3><p>在构建release版本的Android项目时，每次都手动导入签名文件，键入密码、keyalias等信息十分麻烦。通过将签名配置集成到构建脚本中，我们就不必每次构建发行版本时都手动设置了。具体配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">signingConfigs &#123;</span><br><span class="line">    myConfig &#123; //将&quot;xx&quot;替换为自己的签名文件信息</span><br><span class="line">        storeFile file(&quot;xx.jks&quot;)</span><br><span class="line">        storePassword &quot;xx&quot;</span><br><span class="line">        keyAlias &quot;xx&quot;</span><br><span class="line">        keyPassword &quot;xx&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">android &#123;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            signingConfig  signingConfigs.myConfig //在release块中加入这行</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>真实开发中，我们不应该把密码等信息直接写到build.gradle中，更好的做法是放在gradle.properties中设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">RELEASE_STOREFILE=xxx.jks </span><br><span class="line">RELEASE_STORE_PASSWORD = xxx</span><br><span class="line">RELEASE_KEY_ALIAS=xxx</span><br><span class="line">RELEASE_KEY_PASSWORD=xxx</span><br></pre></td></tr></table></figure><p>然后在build.gradle中直接引用即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">signingConfigs &#123;</span><br><span class="line">    myConfig &#123; </span><br><span class="line">        storeFilefile(RELEASE_STOREFILE)</span><br><span class="line">        storePassword RELEASE_STORE_PASSWORD</span><br><span class="line">        keyAlias RELEASE_KEY_ALIAS</span><br><span class="line">        keyPassword RELEASE_KEY_PASSWORD </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于Gradle的其他配置方法大家可以参考“延伸阅读”部分的“Gradle最佳实践”。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;关于Android开发中的Gradle&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Gradle" scheme="http://yoursite.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Linux远程登录及服务器配置</title>
    <link href="http://yoursite.com/2019/07/17/Linux%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2019/07/17/Linux远程登录/</id>
    <published>2019-07-17T13:45:43.000Z</published>
    <updated>2020-07-07T03:58:51.303Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Linux远程登录及服务器配置</blockquote><a id="more"></a><p>##Linux远程登录原理<br>安装telnet远程客户端登录工具的客户机通过23（默认）端口连接到Linux服务器，通过telnet将远程客户机上命令传到服务器执行并反馈。<br>###telnet软件包安装<br><code>sudo apt-get install inetutils-telnetd</code>(ubuntu没有默认安装Telnet软件包)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Linux远程登录及服务器配置&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="远程登录" scheme="http://yoursite.com/tags/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>usr-key</title>
    <link href="http://yoursite.com/2019/07/17/UsrKey/"/>
    <id>http://yoursite.com/2019/07/17/UsrKey/</id>
    <published>2019-07-17T07:33:59.000Z</published>
    <updated>2020-07-07T01:13:58.953Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19QkdtZbaTZqL2UdmXna2W/JFSA9J22rPezGU4LQUwMkbpnI0aAvJIEBEuUszjSaGSwliLEkluTMBy+jwEiK86BDRaigzVo9qIaJvemhKY36pGyE61tShMXGY5DXV0jd1v67purs48HP8IPVBTKCiisDpwZPd3yUGdXNu55MLiAcnZIeD/GnXtjTqZ8S6W5iVJ9zV46gI2PY9FeFjVRD67ge3Nb9V+/4dcltTaQu1KhE00vXXLvcBJN00o5TsJuhfry6MfQgDmOMSutYz8BvkDJM5m3yJgVGQKmBaI+FVwDha+NviWiLCnEM6l2EzhHcpdeCnDG1uiLbt1XTVKSN1CW4ctb84dgR7KXHr9EGGg3FIRGwaqfpOh7DWhOsvxDTaiXcOtXFYoeaoram87F1EBLj3fOCYhLzhk4YSpkMDG1mZyvaJjwO5Gs7F2sl/PeH23WYKTv6UulOwTRHssRIV72GlpksGHN2a6S4XsuIPgb2B2wrc+PqQenxWA21rTYhzMZ1/wjTIwofjWUV0JFWF6GsCIojWxvJ3c8wVj9TIv9IQLBFr94CalnqtdepwEF80y/wEPbe2mvajwVFuVcjJJAy7aJ+dX3yzD6OseViBRg6Ms9vAJcWnNH6nPzlB2VrsSYTS6jZRebAw7RRncC7F6UI8GXjs+xzXfk/JKQfNB62v7TrF3WoURkTx0MRUL+0v4o3tSDr7NH4mM3pyBHWqFiCTKxU22P8rUkSxBcmVz0TCOk8UJ8Btv0CM82JUB3N+RKNcwExH37XUn4zN7bWCncEow94XQ5p9XRLPsFo+1rukzgXiQeN0Tp6PSh2pDppooNedj6SIFEzCThoH1RTxaftTmWwyh+Vl2iqRmKJwogF25F+i/WQyqzX3ufnUTUUArNGnGGU1yGzBq6TAhs0jgU9M277u+jrI4+RONHOrqQdd6Itn6XXN4Q0oh6+FpoGpF+OrsrcXSDCDMaoVsVUKSA7SZkrw7I8YArbiGymSU9JuX1Xfa32jpvfpSlunRy3LzANSbZUk+hnPdYXrMqQuAnpqu7GV8yy60YIohq3IIsjCwTomOqwLs6aVK4sluIiBleXzOb43wAZlJ7HTBdl7X1gcciStWrkLjR451bvEjkSJEjZ3hBY1HPby+/b7BZjRPZ/UdvyjyMmXdCzjkxSrj4y4C23y/BdITd4tY+i6gvx9Z68V8cw7aj5SKFkTEDcZb0FZWCIsDvkqCHh4e6/lzWyFYM9KUovS11T0JNhBlCgK6dRdixTmNPvaL7XIREE2AzcM6BAHoPywSA52AnaQ1Xv+q1IcD4L6akydbLT+kYMM8rtHmjkceyQvCuvPJ2FVtzIFrChgvQuPB8lzqADaMhADeR5XxSXlZ7nl3o1iJeaMOMJ74hgEGNcbVVxGriBwC7bUY7SPCzr3ilDcYYxzWudP5VGU5CxZUcpUtLpUNgU2nPhw8KpjUMChw/AG0VxzQaSD4MEhyEs7cMqHUw/3caE/y1XaKFD8SPTMupM8Maa0qazF89DA91NSpwjYHBEUMLmjqRiFeXKn+EIYzKjpwzdO4gYGsblVsFiEB5xpgreQEKgRBTP9rPmBcSZEqsP2h0KGrxht3D8Q8/7VYF8RnAVqK9Z1uwspM=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="key" scheme="http://yoursite.com/categories/key/"/>
    
    
  </entry>
  
  <entry>
    <title>可见光认证相关</title>
    <link href="http://yoursite.com/2019/07/05/%E5%8F%AF%E8%A7%81%E5%85%89%E8%AE%A4%E8%AF%81/"/>
    <id>http://yoursite.com/2019/07/05/可见光认证/</id>
    <published>2019-07-05T03:09:43.000Z</published>
    <updated>2020-07-07T04:06:45.767Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">基于可见光的无线网络认证</blockquote><a id="more"></a><p>2019-07-05</p><h2 id="802-1x认证过程："><a href="#802-1x认证过程：" class="headerlink" title="802.1x认证过程："></a>802.1x认证过程：</h2><ol><li><p>当用户有访问网络需求时打开802.1X客户端程序，输入已经申请、登记过的用户名和密码，发起连接请求（EAPOL-Start报文）。此时，客户端程序将发出请求认证的报文给设备端，开始启动一次认证过程。</p></li><li><p>设备端收到请求认证的数据帧后，将发出一个请求帧（EAP-Request/Identity报文）要求用户的客户端程序发送输入的用户名。</p></li><li><p>客户端程序响应设备端发出的请求，将用户名信息通过数据帧（EAP-Response/Identity报文）发送给设备端。设备端将客户端发送的数据帧经过封包处理后（RADIUS Access-Request报文）送给认证服务器进行处理。</p></li><li><p>RADIUS服务器收到设备端转发的用户名信息后，将该信息与数据库中的用户名表对比，找到该用户名对应的密码信息，用随机生成的一个加密字对它进行加密处理，同时也将此加密字通过RADIUS Access-Challenge报文发送给设备端，由设备端转发给客户端程序。</p></li><li><p>客户端程序收到由设备端传来的加密字（EAP-Request/MD5 Challenge报文）后，用该加密字对密码部分进行加密处理（此种加密算法通常是不可逆的），生成EAP-Response/MD5 Challenge报文，并通过设备端传给认证服务器。</p></li><li><p>RADIUS服务器将收到的已加密的密码信息（RADIUS Access-Request报文）和本地经过加密运算后的密码信息进行对比，如果相同，则认为该用户为合法用户，反馈认证通过的消息（RADIUS Access-Accept报文和EAP-Success报文）。</p></li><li><p>设备收到认证通过消息后将端口改为授权状态，允许用户通过端口访问网络。在此期间，设备端会通过向客户端定期发送握手报文的方法，对用户的在线情况进行监测。缺省情况下，两次握手请求报文都得不到客户端应答，设备端就会让用户下线，防止用户因为异常原因下线而设备无法感知。</p></li><li><p>客户端也可以发送EAPOL-Logoff报文给设备端，主动要求下线。设备端把端口状态从授权状态改变成未授权状态，并向客户端发送EAP-Failure报文。</p></li></ol><h2 id="关于WiFidog："><a href="#关于WiFidog：" class="headerlink" title="关于WiFidog："></a>关于WiFidog：</h2><p>Portal认证，通常也会叫Web认证，未认证用户上网时，设备强制用户登录到特定站点，用户可以免费访问其中的服务。当用户需要使用互联网中的其它信息时，必须在门户网站进行认证，只有认证通过后才可以使用互联网资源。现金很多中国移动CMCC、中国联通、中国电信ChinaNet的WIFI都使用这种认证接入方式。</p><p>在OpenWRT上实现Portal认证，实际上早已有解决方案：</p><ol><li><p>chillispot，但原维护作者停止更新，被chillispot.info接管继续开发；</p></li><li><p>coova-chilli，它是基于chillispot开发拓展的，功能最为强大；可以去官方看一下Coova-chilli；</p></li><li><p><strong>wifidog</strong>，前两个由于原维护作者停止更新，笔者也没有深入研究，重点钻研了wifidog，Wifidog也是OpenWRT和DD-WRT中实现Portal比较出名的。但是，Wifidog只是实现AP认证网关，需要配合外部的Portal服务器才能使用，Portal主要是提供认证所需的WEB页面且实现认证计费等的功能。虽然这也有很多商用解决方案，例如wiwiz、wifiap等，但是这些商业解决方案的目标都是盈利，即使可以免费使用，免费账号的功能和权限都受到了很大的限制，例如不能自定义页面，Web认证页面有广告等等。有条件的人可能打算自己搭建Portal服务器，但是看看Wifidog的官方Wiki，对搭建过程实在是难以理解。后来，笔者发现网络上还有一个 <strong>authpuppy方案</strong> ，官方网站 <strong><a href="http://www.authpuppy.org" target="_blank" rel="noopener">www.authpuppy.org</a></strong> ，是一个已实现好的Wifidog认证服务器，里面包含各种插件供你使用，官方的安装过程也很简单，如果你懂的HTML和面向对象编程的相关知识且拥有一个服务器，可以自行修改认证页面，使用authpuppy也是一个不错的方案。</p></li><li><p>如何 <strong>自行编写一个轻量级的Web Portal认证服务器</strong> ：</p><ul><li><h3 id="Wifidog的工作原理："><a href="#Wifidog的工作原理：" class="headerlink" title="Wifidog的工作原理："></a>Wifidog的工作原理：</h3><ol><li><p>客户端发出初始化请求，比如访问 <a href="http://www.dqrun.com" target="_blank" rel="noopener">www.dqrun.com</a> 。</p></li><li><p>网关的防火墙规则将这个请求重定向到本地网关的端口上。这个端口是Wifidog监听的端口。</p></li><li><p>Wfidog提供一个HTTP重定向回复，重定向到Web认证页面，重定向的Url的Querystring中包含了Gateway的ID，Gateway的FQDN以及其他的信息。</p></li><li><p>用户向认证服务器发出认证请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gw_id=[GatewayID, default: “default”]</span><br><span class="line">gw_address=[GatewayAddress, internal IP of router]</span><br><span class="line">gw_port=[GatewayPort, port that wifidog Gateway is listening on]</span><br><span class="line">url=[user requested url]；</span><br></pre></td></tr></table></figure></li><li><p>网关返回一个（可以是自定义的）splash（也称作“登录”）页面。</p></li><li><p>用户提供他的凭据信息，比如用户名和密码。</p></li><li><p>成功认证的话，客户端将会被重定向到网关的自己的web页面上，并且带有一个认证凭据（一个一次性的token），内容比如：<a href="http://GatewayIP:GatewayPort/wifidog/auth?token=[auth" target="_blank" rel="noopener">http://GatewayIP:GatewayPort/wifidog/auth?token=[auth</a> token]；</p></li><li><p>用户就是用获取到的凭据访问网关。</p></li><li><p>网关去认证服务器询问token的有效性。</p></li><li><p>认证服务器确认token的有效性。</p></li><li><p>网关发送重定向给客户端，以从认证服务器上获取 成功提示页面，重定向到 <a href="http://portal_server:port/portal_script" target="_blank" rel="noopener">http://portal_server:port/portal_script</a> 这个位置。</p></li><li><p>认证服务器通知客户请求成功，可以上网了。</p></li></ol></li></ul></li></ol><h2 id="待完成工作："><a href="#待完成工作：" class="headerlink" title="待完成工作："></a>待完成工作：</h2><p><strong>装wifidog</strong> ，配置:<br>1）监听端口 2)服务器地址 3）5个脚本的地址(login, portal, msg, ping, auth)<br> <strong>配置方法：</strong>远程登陆openwrt: ssh <a href="mailto:root@192.168.1.1" target="_blank" rel="noopener">root@192.168.1.1</a>， 然后修改/etc/wifidog.conf文件。</p><p><strong>将笔记本搭建成服务器</strong></p><p><strong>添加对LED的频率提取功能</strong></p><p><strong>实现动态调节LED频率,将此功能添加至系统</strong></p><hr><p>2019/07/08</p><h2 id="路由器刷openwrt系统"><a href="#路由器刷openwrt系统" class="headerlink" title="路由器刷openwrt系统"></a>路由器刷openwrt系统</h2><p>恢复出厂：断电后，先按住reset再通电。<br><br>登陆192.168.1.1（breed web），先点“恢复出厂”，选择“openwrt”；再点击“更新固件”，选中已下载好的openwrt镜像，进行固件更新。<br></p><h3 id="解决路由器联网问题"><a href="#解决路由器联网问题" class="headerlink" title="解决路由器联网问题"></a>解决路由器联网问题</h3><ol><li>设置密码：点击<code>Go to password configuration...</code>，敲入2遍新的路由器密码，点击页面最下面的 保存执行按钮，密码修改即时生效。 </li><li>设置主机名和时区：<code>System</code>菜单的<code>system</code>进去，主机名改为自己希望的名称，时区设置为<code>Asia/Shanghai</code>，保存。</li><li><strong>联网设置</strong> :点击菜单<code>Network</code>中的第二项，可以选择2G或5G无线网络连接WIFI，按 <code>scan</code>扫描按钮，稍等出现列表中，选择自己(想通过这个路由连接)的WIFI，输入密码，按提交，然后稍等，按保存执行。</li></ol><h2 id="ubuntu16-04编译OpenWrt环境搭建："><a href="#ubuntu16-04编译OpenWrt环境搭建：" class="headerlink" title="ubuntu16.04编译OpenWrt环境搭建："></a>ubuntu16.04编译OpenWrt环境搭建：</h2><ol><li><p>ubuntu下OpenWrt编译环境需要安装很多组件：<br><br><code>sudo apt-get install gcc</code><br><code>sudo apt-get install g++</code><br><code>sudo apt-get install binutils</code><br><code>sudo apt-get install patch</code><br><code>sudo apt-get install bzip2</code><br><code>sudo apt-get install flex</code><br><code>sudo apt-get install bison</code><br><code>sudo apt-get install make</code><br><code>sudo apt-get install autoconf</code><br><code>sudo apt-get install gettext</code><br><code>sudo apt-get install texinfo</code><br><code>sudo apt-get install unzip</code><br><code>sudo apt-get install sharutils</code><br><code>sudo apt-get install subversion</code><br><code>sudo apt-get install libncurses5-dev</code><br><code>sudo apt-get install ncurses-term</code><br><code>sudo apt-get install zlib1g-dev</code><br><code>sudo apt-get install subversion</code><br><code>sudo apt-get install  git-core</code><br><code>sudo apt-get install gawk</code><br><code>sudo apt-get install asciidoc</code><br><code>sudo apt-get install libz-dev</code><br>当然安装之前最好先更新下组件包：<br><code>sudo apt-get update</code><br>逐个安装…</p></li><li><p>新建一个openwrt目录，使用命令：<br><code>mkdir openwrt</code><br><code>sudo chmod 777 openwrt</code><br>接下来的所有命令都在/openwrt目录下运行</p></li><li><p>下载OpenWrt源码:<br><code>git clone git://git.openwrt.org/openwrt/openwrt.git</code></p></li><li><p>添加软件扩展包：<br><code>cd /home/ngmi/openwrt/openwrt/</code><br><code>cp feeds.conf.default feeds.conf</code>(将feeds.conf.default修改为feeds.conf)</p></li><li><p>更新扩展，安装扩展：<br><code>./scripts/feeds update -a</code><br><code>./scripts/feeds install -a</code></p></li><li><p>测试下编译环境，使用命令：<br><code>make defconfig</code></p></li><li><p><code>make menuconfig</code><br>如果一切正常，会出现一个配置菜单，可以选择要编译的固件平台、型号，还能选择固件中要添加的功能和组件，至此编译环境就搭建好了。</p></li></ol><h2 id="在OpenWrt的路由器上安装Wifidog应用程序"><a href="#在OpenWrt的路由器上安装Wifidog应用程序" class="headerlink" title="在OpenWrt的路由器上安装Wifidog应用程序"></a>在OpenWrt的路由器上安装Wifidog应用程序</h2><ol><li>在OpenWrt系统的源码文件下，编辑<code>feeds.conf.default</code>文件<br><br><code>vim feeds.conf.default</code><br>在其中增加一行：<br><code>src-git wifidog https://github.com/wifidog/wifidog-gateway.git</code></li><li>然后更新，再安装：<br><code>./scripts/feeds update -a</code><br><code>./scripts/feeds install -a</code></li><li>终端执行编译命令<br><code>make menuconfig</code></li><li>在<code>Network/captive portals/</code>下选择wifidog 就有选择 WiFiDog 这一项了</li></ol><hr><p>2019/07/09</p><h2 id="配置服务器中遇到的问题"><a href="#配置服务器中遇到的问题" class="headerlink" title="配置服务器中遇到的问题"></a>配置服务器中遇到的问题</h2><p><strong>问题：</strong></p><figure class="highlight plain"><figcaption><span>python3 manage.py runserver 0.0.0.0:8000</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;manage.py&quot;, line 22, in &lt;module&gt;</span><br><span class="line">    execute_from_command_line(sys.argv)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/__init__.py&quot;, line 381, in execute_from_command_line</span><br><span class="line">    utility.execute()</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/__init__.py&quot;, line 375, in execute</span><br><span class="line">    self.fetch_command(subcommand).run_from_argv(self.argv)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/base.py&quot;, line 323, in run_from_argv</span><br><span class="line">    self.execute(*args, **cmd_options)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/commands/runserver.py&quot;, line 60, in execute</span><br><span class="line">    super().execute(*args, **options)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/base.py&quot;, line 364, in execute</span><br><span class="line">    output = self.handle(*args, **options)</span><br><span class="line">  File &quot;/home/ngmi/lightFreq-master/my_wifi_auth_server/django_pdb/management/commands/runserver.py&quot;, line 59, in handle</span><br><span class="line">    and middleware not in settings.MIDDLEWARE_CLASSES):</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/conf/__init__.py&quot;, line 80, in __getattr__</span><br><span class="line">    val = getattr(self._wrapped, name)</span><br><span class="line">AttributeError: &apos;Settings&apos; object has no attribute &apos;MIDDLEWARE_CLASSES&apos;</span><br></pre></td></tr></table></figure><p><strong>解决方法：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">middleware = <span class="string">'django_pdb.middleware.PdbMiddleware'</span></span><br><span class="line">        <span class="keyword">if</span> ((pdb_option <span class="keyword">or</span> settings.DEBUG)</span><br><span class="line">            <span class="keyword">and</span> middleware <span class="keyword">not</span> <span class="keyword">in</span> settings.MIDDLEWARE):</span><br><span class="line">            settings.MIDDLEWARE += (middleware,)</span><br></pre></td></tr></table></figure><p>由于Django版本的问题，需要将（lightFreq-master/my_wifi_auth_server/django_pdb/management/conmands/runserver.py）以上代码中原本的MIDDLEWARE_CLASSES改为MIDDLEWARE。</p><p><strong>问题：</strong></p><figure class="highlight plain"><figcaption><span>HTTP_HOST header: '0.0.0.0:8000'. You may need to add '0.0.0.0' to ALLOWED_HOSTS.</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bad Request: /</span><br><span class="line">[09/Jul/2019 14:14:40] &quot;GET / HTTP/1.1&quot; 400 66219</span><br></pre></td></tr></table></figure><p>进入<a href="http://0.0.0.0:8000页面显示Invalid" target="_blank" rel="noopener">http://0.0.0.0:8000页面显示Invalid</a>…<br><br><strong>解决办法：</strong><br>将lightFreq-master/my_wifi_auth_server/Auth_server/settings.py文件中<code>ALLOWED_HOSTS = [&#39;192.168.1.162&#39;,&#39;127.0.0.1&#39;]</code>修改为<code>ALLOWED_HOSTS = [&#39;*&#39;]</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;基于可见光的无线网络认证&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Light Frequency Authenticate" scheme="http://yoursite.com/categories/Light-Frequency-Authenticate/"/>
    
    
      <category term="lightFre" scheme="http://yoursite.com/tags/lightFre/"/>
    
  </entry>
  
  <entry>
    <title>四年又三年</title>
    <link href="http://yoursite.com/2019/07/03/%E5%9B%9B%E5%B9%B4%E5%8F%88%E4%B8%89%E5%B9%B4/"/>
    <id>http://yoursite.com/2019/07/03/四年又三年/</id>
    <published>2019-07-03T13:02:40.000Z</published>
    <updated>2020-07-07T03:54:17.289Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>十六岁不太友好的reminder</title>
    <link href="http://yoursite.com/2019/07/03/%E5%8D%81%E5%85%AD%E5%B2%81%E4%B8%8D%E5%A4%AA%E5%8F%8B%E5%A5%BD%E7%9A%84reminder/"/>
    <id>http://yoursite.com/2019/07/03/十六岁不太友好的reminder/</id>
    <published>2019-07-03T11:57:29.000Z</published>
    <updated>2020-07-07T03:51:07.340Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>触动</title>
    <link href="http://yoursite.com/2019/07/03/%E8%A7%A6%E5%8A%A8/"/>
    <id>http://yoursite.com/2019/07/03/触动/</id>
    <published>2019-07-03T11:57:21.000Z</published>
    <updated>2020-07-07T03:50:39.904Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1/Cepasy+dRrLfw+2gwygZHcFB3O10QLyq+GiCX/A9SNzV28K6MIXJIl9rMtSl4r97y4pRv1cAkMt2PqNq3YBvOKCz/tdWvA/czxWaXnr3L2utjfXuFM4hWSBRJsfTWWpYCUeJQi8j1eOZwBuEon3PfzrRkbsenN8HlTuhHddaQq9HdDwNCtFzUGuwkwLjAUStNwMlJMd1CrCZMliT4kbBW9Kx6biMBnO0zt/gJ53pOlizIPPR1N1SMMWbQoaZQ8xW7d7Uuac6oo443wlzELSxHDlnJkkgivAwB7+uCRA0wUr3QAD8yJfkhrg1mVyRJvnwEtN3VA2qi+39zwzhHPOTe6W9yDBYeCFMaA8DVL32AMB5jgnl2O4tT8IludRhOEbkfEZCk79S4FuTuSbSgEyJ+MQhyKkWeLdXdEc6sYzFUElccNaMEbHRMl0L5ip0EmrSJOn1vpVnxP7Og0esGrQ2JkqoYNI5vB//Rl/Vm+6QIyu8E73yNNhq47ffW5SfrzdJ0S7Ck/tLBkoE4V+eh3miS5H2myz4TGkKxaWiX0XE4kp3nV2DbxZV6MQXh/8ITjVNpvYbwv5cHPWJ+8F2NyQzZwgrN362Tb3sDdeR5wzGE6Dm2YIRyqMdJ16ZqIKueEvj/bYf9Uc2CbLBwwpQw6GdnlAb4O3yJ/KLyynGgMLgkqNjYG91fmEjlUWyGqhXO79XvZiCmzRhi06lwBh4iXjDloswlwBPqIJpB2wGHmcqSCAhYc5lgVBgtLfVIVwzCLC+WWwGTSiNLwZBzzuZ6PUs4AwQj81HivCXSIC2ZsGEMzNuSvVBtYX94ydGJbwepeZRkfUoI20Pyj+9K0wlhY93okNHQv3XQykOM1yh7DiBLUB0HQe9zi28jfx0iQnLKZ4tQfJvLZ2or4EQWs6V6DkXTPFFFtOSwU8V7QqcZtWtuJgNS5kE0G2h8UN9vC5eByXPqFQhj2fPYodOuU1cIFkJT7dU2u3pZmjzv7QsDhRsakIuvnMhv/GbvwzVDoxax1mMmbokb3YhFdOTzf4MKe60FXlXk3aieYS99tpUPzuyc3struZHbJZHs4GKaxmOIRHJXsnbjfcAhId20w4FzQ/0X/+dcF8oLxr0/+1VDnQtrng7YeqR+T/EF3TcJG+6LLIZMYtXpJCt0I3wGBGtbfh1nl3rVvtebrMrfBbH04n0LzumZVIqMgzmaAU17qsRm/zjzBb1TSQdRrwyFv0fP/l6a3TSl4lAtzCvlsdE2OG61/DecZHU2TKWWO5YfJ0FlR+tkEZ46P3I83ZIFafo9zxkr/Y3Q8j4ehn99F+FQ0spSsus1z2n4ZveVJyuV20wZo9MVtDuiTs33lSQn9uoA+LUGPWkDJVeXPiaj5H7/Dvh4EH17CPv26kKDAFrxG12Z6WZVgQFt4P0zq27NvbYqaLxtGFuZnvWPYtBklEmDgTe7QOR8hYZLnGADhWiWzHEuqaWfqoDgEOFbQgOOEkB2EaMHbqMgKwEOLKGI7KQwkRitwKRvMwAkkZj0v6AanTE1J1k6J89tx3UPfbhKvncyiG3Lqy1/H1Iu/o3eCP2tgcPd9lxsA0E3SABAb4V/MIkpbB4vCbzSEeEukV5F89gYpyjLVgMjdtTKKx5T0/ORn+76+4qKKT+GqC+tXzlj+SJM88WFpCX9p2JiLrTtOTlw476QuxtfIw+Zd4668ww2YbVmX8HSKoeG8byItgrxkEwchQ2F8NkOcKiPc89JMLcPb7YUDpfhLjI3wy3PUu+f8plGIJF6uRfmogXKGeaP4osYaJEAWoJQNBtv8GNf/PKTHneHfrK85EaTCcrUJ3ftMFvRJabIBiuB4vN2b53h2Wf/VlVHgqKLSBLUGSZDeybiLtqVWD7IgyLyHOQgwiDNUOpMaPZ2eOuSdaw1oPDqxHf7CCxWFlN2rgXmO3A3+wF6bdy4XeeszC5bvtJhWZ2WsHbSN39Cn2LDDDkXZVkkcc9a/RNIMU1IeyhmONbPnF31svVOT1rBUmqhoI6uObeRNAzSGfhXlmo6ccHe6A5yjA2z32XZtvB8eDPGh8EIu+JeAgNotUta25g2n4psh1x1B3zL5IwLk8ikmLJmGkhhaUErheWpNF4mAKwxF3q0fvFqn8SXfmiGmmYdn+ZqB5UP5TWiGLuMmMO0Lw7B7+Eo83MNNqI6MVG/kKw9/taTCgSaG8hG1+lde4+aZL3dvGqoZPBYQV0P3rYStqj/dUvvJAdnraKOVwf/1bZXc+VtZxb/ky2EB7HWNIUjhn71QnJL/TREK61zEPEMU7ul1OuLWXmDmvWRNpO3KG5NP6PiwmNFDC6fSvIknqFxU0yeWwkT7Kc2StIngrOCVgu8rb1+vsexAPTgAKnDhDNoKrhMc3rXzBoGVYGzN0fonHZpu0fVLd/iwGE1QDxqMU3DZ9du0A8IjSYwbuCs7GRbX3UOuiia7VFsxTGPvJvcpXONq30fv0EpQsf/IaWfjzBglPY/rOTzfyOaNkYYJTycgii4oVYVYuyTIFqMNtiq8LEUzagkyfdOQST07I9EN4OuOe5z2VdcrVXBrDHzrm6yPgVyH3iZNKqt1e1C7HHuGu0bxrulF8GqodhQuZt69kNFVuNXdhoBDRx/xtPPKgTfTL323HDh1s9ZcVwCS5l+Eiut5L2YCGIsV4EJ1Nid1QR3/HsPLFxSMk9AVZ/G30uuEBYpH5w0PtbQLmu6K8sz6Nh4wbYEsmkW00tFnijIZhkgpH9NoRUifV2H/XU0RTohgJl1B4jeu2UaYci99/UjoFG+2cy9E3B2aCORVAmGQ0yADmOFOCkhpnVsblb3CmeY8KE8x7f/Oo1Ep3kgY2tDCTUqMry8CekTIBSF8ZXa9xksl2MCDUBKS/vcjuQwlIDl5QpE9wXI5HocKHdM+JAMQYBS0nkOcfypbCNOPZjhLOYnzO0ERgIVshsg9SpnqSwlCytx2KyRb+COjsDDT/MBokvZMITdjOJ7CswUWJZqmBrG+G3rIt2Q73jo8OLefEKr/6mQm/c3sIBH7DzbmJCX1s7QqnItDgrrHgVRYAZlXft0d4MctxbpQR6OhuHyYC5KxSKbpVeApCz5TlwdvtYO+YUgqiGUQVaZRHZ/2oY/s9TvxsOlGmE01hV9pHwz/D0RIA+UxPuXbabQltdEaK25+xxkLyoRNC3JzryApY+mdaYSOLZSfOKMGpNXoIYxrptd/+z/++k0Og4kILruRFe+aPEyS7WV5uFCzHFCIqmCrI5Ea2CQNqOSu6kQlxuhJq++zl5kdD23iYNKZvlbIuU6oe+40evfYanjjXCcCcMNBx6x238wLqUywmKYOW4PNBMnC0OSgaCE15LH2NdUId3ZdicYrEaNxNk9McKYtsQj0rUNS8mNWm8EaobsPYxYBl+i4IG00UwOAcYmHmLJv+j2730=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>红海新区的冬和夏</title>
    <link href="http://yoursite.com/2019/07/03/%E7%BA%A2%E6%B5%B7%E6%96%B0%E5%8C%BA%E7%9A%84%E5%86%AC%E5%92%8C%E5%A4%8F/"/>
    <id>http://yoursite.com/2019/07/03/红海新区的冬和夏/</id>
    <published>2019-07-03T11:57:14.000Z</published>
    <updated>2020-07-07T03:52:11.741Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>逛着</title>
    <link href="http://yoursite.com/2019/07/03/%E9%80%9B%E7%9D%80/"/>
    <id>http://yoursite.com/2019/07/03/逛着/</id>
    <published>2019-07-03T11:57:00.000Z</published>
    <updated>2020-07-07T03:51:59.193Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>一八一九</title>
    <link href="http://yoursite.com/2019/07/03/%E4%B8%80%E5%85%AB%E4%B8%80%E4%B9%9D/"/>
    <id>http://yoursite.com/2019/07/03/一八一九/</id>
    <published>2019-07-03T11:56:50.000Z</published>
    <updated>2020-07-07T03:54:59.011Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
  <entry>
    <title>踏出房间之前</title>
    <link href="http://yoursite.com/2019/07/03/%E8%B8%8F%E5%87%BA%E6%88%BF%E9%97%B4%E4%B9%8B%E5%89%8D/"/>
    <id>http://yoursite.com/2019/07/03/踏出房间之前/</id>
    <published>2019-07-03T11:56:42.000Z</published>
    <updated>2020-07-07T03:54:30.585Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="http://yoursite.com/categories/Writing/"/>
    
    
  </entry>
  
</feed>
