<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>解字</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chasencenge.github.io/"/>
  <updated>2020-08-02T15:38:14.671Z</updated>
  <id>https://chasencenge.github.io/</id>
  
  <author>
    <name>CHAsencenge</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode200周赛</title>
    <link href="https://chasencenge.github.io/2020/08/02/LeetCode200%E5%91%A8%E8%B5%9B/"/>
    <id>https://chasencenge.github.io/2020/08/02/LeetCode200周赛/</id>
    <published>2020-08-02T14:18:15.000Z</published>
    <updated>2020-08-02T15:38:14.671Z</updated>
    
    <content type="html"><![CDATA[<p>给你一个整数数组 arr ，以及 a、b 、c 三个整数。请你统计其中好三元组的数量</p><p>如果三元组 (arr[i], arr[j], arr[k]) 满足下列全部条件，则认为它是一个 好三元组 </p><p>0 &lt;= i &lt; j &lt; k &lt; arr.length</p><p>|arr[i] - arr[j]| &lt;= a</p><p>|arr[j] - arr[k]| &lt;= b</p><p>|arr[i] - arr[k]| &lt;= c</p><p>其中 |x| 表示 x 的绝对值</p><p>返回 好三元组的数量 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">输入：arr = [3,0,1,1,9,7], a = 7, b = 2, c = 3<br>输出：4<br>解释：一共有 4 个好三元组：[(3,0,1), (3,0,1), (3,1,1), (0,1,1)]<br><br>输入：arr = [1,1,2,2,3], a = 0, b = 0, c = 1<br>输出：0<br>解释：不存在满足所有条件的三元组<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">countGoodTriplets</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; arr, <span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b, <span class="hljs-keyword">int</span> c)</span> </span>&#123;<br><span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.size() - <span class="hljs-number">2</span>; i++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i + <span class="hljs-number">1</span>; j &lt; arr.size() - <span class="hljs-number">1</span>; j++)<br>&#123;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = j + <span class="hljs-number">1</span>; k &lt; arr.size(); k++)<br>&#123;<br>                <span class="hljs-comment">//使用abs()需引用cmath头文件</span><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">abs</span>(arr[i] - arr[j]) &lt;= a &amp;&amp; <span class="hljs-built_in">abs</span>(arr[j] - arr[k]) &lt;= b &amp;&amp; <span class="hljs-built_in">abs</span>(arr[i] - arr[k]) &lt;= c)<br>&#123;<br>res++;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><p>给你一个由 不同 整数组成的整数数组 arr 和一个整数 k </p><p>每回合游戏都在数组的前两个元素（即 arr[0] 和 arr[1] ）之间进行。比较 arr[0] 与 arr[1] 的大小，较大的整数将会取得这一回合的胜利并保留在位置 0 ，较小的整数移至数组的末尾。当一个整数赢得 k 个连续回合时，游戏结束，该整数就是比赛的 赢家 </p><p>返回赢得比赛的整数</p><p>题目数据 保证 游戏存在赢家</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c++">输入：arr = [<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>], k = <span class="hljs-number">10</span><br>输出：<span class="hljs-number">3</span><br>解释：<span class="hljs-number">3</span> 将会在前 <span class="hljs-number">10</span> 个回合中连续获胜<br>    <br>输入：arr = [<span class="hljs-number">1</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>], k = <span class="hljs-number">7</span><br>输出：<span class="hljs-number">9</span><br>    <br>输入：arr = [<span class="hljs-number">1</span>,<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>,<span class="hljs-number">55</span>,<span class="hljs-number">66</span>,<span class="hljs-number">77</span>,<span class="hljs-number">88</span>,<span class="hljs-number">99</span>], k = <span class="hljs-number">1000000000</span><br>输出：<span class="hljs-number">99</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//vector操作</span><br>a.erase(a.begin()+<span class="hljs-number">1</span>,a.begin()+<span class="hljs-number">3</span>); <span class="hljs-comment">//包前不包后，删除第1、2个元素</span><br>a.insert(a.begin()+<span class="hljs-number">1</span>,<span class="hljs-number">5</span>); <span class="hljs-comment">//在a的第1个元素（从第0个算起）的位置插入数值5</span><br>a.insert(a.begin()+<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>); <span class="hljs-comment">//在a的第1个元素（从第0个算起）的位置插入3个数，其值都为5</span><br>a.back(); <span class="hljs-comment">//返回a的最后一个元素</span><br>a.front(); <span class="hljs-comment">//返回a的第一个元素</span><br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//按命题逻辑操作vector，遇到超长数组同时超大K值时会超时</span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getWinner</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; arr, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br><span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">int</span> res = arr[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">if</span> (k &gt; arr.size())<br>&#123;<br>k = arr.size();<br>&#125;<br><br><span class="hljs-keyword">while</span> (num &lt; k)<br>&#123;<br><span class="hljs-keyword">if</span> (arr[<span class="hljs-number">0</span>] &gt; arr[<span class="hljs-number">1</span>])<br>&#123;<br>num++;<br><span class="hljs-keyword">int</span> temp = arr[<span class="hljs-number">1</span>];<br>arr.erase(arr.begin() + <span class="hljs-number">1</span>, arr.begin() + <span class="hljs-number">2</span>);<br>arr.push_back(temp);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>num = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">int</span> temp = arr[<span class="hljs-number">0</span>];<br>res = arr[<span class="hljs-number">1</span>];<br>arr.erase(arr.begin(), arr.begin() + <span class="hljs-number">1</span>);<br>arr.push_back(temp);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//trick，不用按题述方式操作vector，从前向后遍历即可</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">getWinner</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&amp; arr, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> res = arr[<span class="hljs-number">0</span>];<br>    <span class="hljs-keyword">if</span> (k &gt; arr.size())<br>    &#123;<br>    k = arr.size();<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.size(); i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(arr[i]&gt;arr[i+<span class="hljs-number">1</span>])<br>            &#123;<br>                <span class="hljs-comment">//直接修改arr[i+1]的值为arr[i]，这样继续和后面比较时仍是类似命题中的：上一组的较大者和新数值比较</span><br>                arr[i+<span class="hljs-number">1</span>] = arr[i];<br>                num++;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-comment">//当遇到前者小于后者的情况，看此时的num值是否满足大于等于k的要求，符合即作为结果返回</span><br>                <span class="hljs-keyword">if</span>(num &gt;= k)<br>                &#123;<br>                    <span class="hljs-keyword">return</span> arr[i];<br>                &#125;<br>                <span class="hljs-comment">//不符合则设置num为1，不设置为0的原因是因为已经淘汰掉上一个值，已经赢了一回合</span><br>                res = arr[i+<span class="hljs-number">1</span>];<br>                num = <span class="hljs-number">1</span>; <br>            &#125;<br>        &#125;<br>    <span class="hljs-keyword">return</span> res;<br>    &#125;<br></code></pre></td></tr></table></figure><p>给你一个 n x n 的二进制网格 grid，每一次操作中，你可以选择网格的 相邻两行 进行交换</p><p>一个符合要求的网格需要满足主对角线以上的格子全部都是 0 </p><p>请你返回使网格满足要求的最少操作次数，如果无法使网格符合要求，请你返回 -1 </p><p>主对角线指的是从 (1, 1) 到 (n, n) 的这些格子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs undefined">输入：grid = [[0,0,1],[1,1,0],[1,0,0]]<br>输出：3<br><br>输入：grid = [[0,1,1,0],[0,1,1,0],[0,1,1,0],[0,1,1,0]]<br>输出：-1<br>解释：所有行都是一样的，交换相邻行无法使网格符合要求<br><br>输入：grid = [[1,0,0],[1,1,0],[1,1,1]]<br>输出：0<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//贪心</span><br><span class="hljs-comment">//从第一行开始，如果该行的后缀0满足条件，那么直接跳过进入下一行（因为需要的后缀0个数是从大到小的顺序（理解这一点非常重要），所以不必担心前面的会抢后面的，自己不够用的时候放心的去抢后面的，因为当前行的需求（优先级）比后面都高）</span><br><span class="hljs-comment">//如果该行后缀0个数不满足条件，那么就往下遍历找到最先（贪心，这是最小次数）满足条件的行，一行一行换上来，记录交换的次数</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">minSwaps</span><span class="hljs-params">(<span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt;&amp; grid)</span> </span>&#123;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; resV;<br><span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> n = grid.size();<br>    <span class="hljs-comment">//统计每行后缀0个数，存到resV中</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>&#123;<br><span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; grid[i].size(); j++)<br>&#123;<br><span class="hljs-keyword">if</span> (grid[i][j] == <span class="hljs-number">0</span>)<br>&#123;<br>    num++;<br>&#125;<br><span class="hljs-keyword">else</span> <br>&#123;<br>    num = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br>resV.push_back(num);<br>&#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n - <span class="hljs-number">1</span>; i++)<br>    &#123;<br>        <span class="hljs-comment">//如果当前行的后缀0个数够用，直接往下遍历，不用担心抢了后面的，因为当前行的需求量比后面的都高</span><br>        <span class="hljs-keyword">if</span>(resV[i] &gt;= n - i - <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">continue</span>;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">int</span> j = i + <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span>(resV[j] &lt; n - i - <span class="hljs-number">1</span> )<br>            &#123;<br>                j++;<br>                <span class="hljs-comment">//找到最后都没有找到满足个数的后缀0，就直接退出</span><br>                <span class="hljs-keyword">if</span>(j == n)<br>                    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>            &#125;<br>            <span class="hljs-comment">//while之后到这里说明找到了一行满足当前行的后缀0的个数需求，把找到的行一行一行的往上换，换到当前行，每次swap的同时更新交换次数</span><br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> m = j; m &gt; i; m--)<br>            &#123;<br>                swap(resV[m], resV[m - <span class="hljs-number">1</span>]);<br>                res++;<br>            &#125;    <br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给你一个整数数组 arr ，以及 a、b 、c 三个整数。请你统计其中好三元组的数量&lt;/p&gt;
&lt;p&gt;如果三元组 (arr[i], arr[j], arr[k]) 满足下列全部条件，则认为它是一个 好三元组 &lt;/p&gt;
&lt;p&gt;0 &amp;lt;= i &amp;lt; j &amp;lt; k &amp;l
      
    
    </summary>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/categories/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/categories/C/Algorithm/"/>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/tags/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode广度优先搜索</title>
    <link href="https://chasencenge.github.io/2020/08/01/LeetCode%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    <id>https://chasencenge.github.io/2020/08/01/LeetCode广度优先搜索/</id>
    <published>2020-08-01T10:13:29.000Z</published>
    <updated>2020-08-02T15:52:02.250Z</updated>
    
    <content type="html"><![CDATA[<h4 id="107-二叉树的层次遍历"><a href="#107-二叉树的层次遍历" class="headerlink" title="107. 二叉树的层次遍历"></a>107. 二叉树的层次遍历</h4><p>给定一个二叉树，返回其节点值自底向上的层次遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）</p><h5 id="STL-queue："><a href="#STL-queue：" class="headerlink" title="STL queue："></a>STL queue：</h5><p>原理：队尾（rear）插入，队首（front）删除</p><p>头文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">#include&lt;queue&gt;<br></code></pre></td></tr></table></figure><p>方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">push(): 推一个元素进队列<br>front(): 返回队首元素(栈对应的是top())<br>back(): 返回队尾元素<br>pop(): 移除队首元素<br>empty()<br>size()<br></code></pre></td></tr></table></figure><p>创建：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">queue&lt;string&gt; q;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">/**<br> * Definition for a binary tree node.<br> * struct TreeNode &#123;<br> *     int val;<br> *     TreeNode *left;<br> *     TreeNode *right;<br> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;<br> * &#125;;<br> */</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt; <span class="hljs-title">levelOrderBottom</span><span class="hljs-params">(TreeNode* root)</span> </span>&#123;<br>        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt; resV;<br>        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; levelNumV;<br>        TreeNode* cur = root;<br>        <span class="hljs-comment">//层次遍历借助队列实现</span><br>        <span class="hljs-built_in">queue</span>&lt;TreeNode*&gt; q;<br>        q.push(cur);<br>        <span class="hljs-comment">//跳出遍历的条件为队列为空</span><br>        <span class="hljs-keyword">while</span>(!q.empty())<br>        &#123;<br>            <span class="hljs-keyword">int</span> size = q.size();<br>            <span class="hljs-keyword">while</span>(size-- &gt; <span class="hljs-number">0</span>)<br>            &#123;<br>                cur = q.front();<br>                <span class="hljs-comment">//砍头操作</span><br>                q.pop();<br>                <span class="hljs-keyword">if</span>(cur)<br>                &#123;<br>                levelNumV.push_back(cur-&gt;val);<br>                <span class="hljs-comment">//爆菊操作</span><br>                q.push(cur-&gt;left);<br>                q.push(cur-&gt;right);<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(!levelNumV.empty())<br>            &#123;<br>            <span class="hljs-comment">//输出格式不是规则的二维数组可选用vector&lt;vector&gt;，它的push_back内容为vector（不限制子vector长度）</span><br>            resV.push_back(levelNumV);<br>            levelNumV.clear();<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//vector中reverse的使用</span><br>        reverse(resV.begin(), resV.end());<br>        <span class="hljs-keyword">return</span> resV;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;107-二叉树的层次遍历&quot;&gt;&lt;a href=&quot;#107-二叉树的层次遍历&quot; class=&quot;headerlink&quot; title=&quot;107. 二叉树的层次遍历&quot;&gt;&lt;/a&gt;107. 二叉树的层次遍历&lt;/h4&gt;&lt;p&gt;给定一个二叉树，返回其节点值自底向上的层次遍历。 （即按
      
    
    </summary>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/categories/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/categories/C/Algorithm/"/>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/tags/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>字节夏令营20游戏程序笔试题</title>
    <link href="https://chasencenge.github.io/2020/08/01/%E5%AD%97%E8%8A%82%E5%A4%8F%E4%BB%A4%E8%90%A520%E6%B8%B8%E6%88%8F%E7%A8%8B%E5%BA%8F%E7%AC%94%E8%AF%95%E9%A2%98/"/>
    <id>https://chasencenge.github.io/2020/08/01/字节夏令营20游戏程序笔试题/</id>
    <published>2020-08-01T03:42:48.000Z</published>
    <updated>2020-08-02T15:52:41.495Z</updated>
    
    <content type="html"><![CDATA[<p>给素材分类，若作品1中有素材1和素材2，则认为素材1和素材2为一类，若作品2中有素材2和素材3，那么此后认为素材1、2、3为一类</p><p>输入：第一行为作品数n，此后n行中每行第一位为该作品中的素材总数m，此后m个数字为素材名（int型）</p><p>输出：素材的分类，并且每一类素材，类内顺序由小到大，类外顺序按照类内最小值由小到大排序输出</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs undefined">输入：<br>4<br>2 1 3<br>3 0 5 6<br>3 2 3 4<br>1 7<br><br>输出：<br>0 5 6<br>1 2 3 4<br>7<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt;&gt; resV;<br>    <span class="hljs-keyword">int</span> num;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; num;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; num; i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> cat;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; cat;<br>        <span class="hljs-comment">//存放该作品内所有素材的vector</span><br>        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; tempV;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; cat; j++)<br>        &#123;<br>            <span class="hljs-keyword">int</span> mem;<br>            <span class="hljs-built_in">cin</span> &gt;&gt; mem;<br>            tempV.push_back(mem);<br>            <span class="hljs-comment">//cout &lt;&lt; tempV[j];</span><br>        &#125;<br>        <span class="hljs-comment">//能否找到已存在的类，能找到就将tempV添加进去</span><br>        <span class="hljs-keyword">int</span> label = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; tempV.size(); k++)<br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> out = <span class="hljs-number">0</span>; out &lt; resV.size(); out++)<br>            &#123;<br>                <span class="hljs-keyword">int</span> flag = <span class="hljs-number">0</span>;<br>                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> in = <span class="hljs-number">0</span>; in &lt; resV[out].size(); in++)<br>                &#123;<br>                    <br>                    <span class="hljs-keyword">if</span> (tempV[k] == resV[out][in])<br>                    &#123;<br>                        label = <span class="hljs-number">1</span>;<br>                        flag = <span class="hljs-number">1</span>;<br>                        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> copy = <span class="hljs-number">0</span>; copy &lt; tempV.size(); copy++)<br>                        &#123;<br>                            <span class="hljs-comment">//检查重复素材，重复的素材不添加，只在已有的分类中添加还未加入的素材</span><br>                            <span class="hljs-keyword">if</span> (find(resV[out].begin(), resV[out].end(), tempV[copy]) == resV[out].end())<br>                                resV[out].push_back(tempV[copy]);<br>                        &#125;<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;   <br>                &#125;<br>                <span class="hljs-comment">//不用再继续遍历后面的子vector了，添加进一个分类中就一定不会添加进另外一个分类</span><br>                <span class="hljs-keyword">if</span> (flag == <span class="hljs-number">1</span>)<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">//是新的素材分类</span><br>        <span class="hljs-keyword">if</span> (label == <span class="hljs-number">0</span>)<br>        &#123;<br>            resV.push_back(tempV);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//子vector按最小元素排序</span><br>    sort(resV.begin(), resV.end());<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; resV.size(); i++)<br>    &#123;<br>        <span class="hljs-comment">//子vector内部排序</span><br>        sort(resV[i].begin(), resV[i].end());<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; resV[i].size(); j++)<br>            <span class="hljs-built_in">cout</span> &lt;&lt; resV[i][j] &lt;&lt; <span class="hljs-string">" "</span>;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>计算给出时间和格林尼治时间之间的秒数，格式：YYYY/MM/DD hh:mm:ss</p><p>需要考虑平年和闰年</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-built_in">string</span> date, time;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; date &gt;&gt; time;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> year, month, day;<br>    <span class="hljs-comment">//切分成子字符串之后再转整型，赋给年月日时分秒</span><br>    <span class="hljs-comment">//atoi()的参数是 const char* ,因此对于一个字符串str我们必须调用c_str()的方法把这个string转换成const char*类型的</span><br>    <span class="hljs-comment">//substr(pos, num)两个参数是从起始位置和pos开始取的字符个数，而不是起始位置和末尾位置</span><br>    year = atoi(date.substr(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>).c_str());<br>    month = atoi(date.substr(<span class="hljs-number">5</span>, <span class="hljs-number">2</span>).c_str());<br>    day = atoi(date.substr(<span class="hljs-number">8</span>, <span class="hljs-number">2</span>).c_str());<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> hour, minute, second;<br>    hour = atoi(time.substr(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>).c_str());<br>    minute = atoi(time.substr(<span class="hljs-number">3</span>, <span class="hljs-number">2</span>).c_str());<br>    second = atoi(time.substr(<span class="hljs-number">6</span>, <span class="hljs-number">2</span>).c_str());<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> time1 = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">//cout &lt;&lt; hour &lt;&lt; " " &lt;&lt; minute &lt;&lt; " " &lt;&lt; second;</span><br>    <span class="hljs-built_in">cout</span> &lt;&lt; year &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; month &lt;&lt; <span class="hljs-string">" "</span> &lt;&lt; day &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-comment">//cout &lt;&lt; second &lt;&lt; to_string(minute * 60) &lt;&lt; to_string(hour * 3600) &lt;&lt; second + minute * 60 + hour * 3600;</span><br>    <span class="hljs-comment">//给出的一天内的时间计算</span><br>    time1 = second + minute * <span class="hljs-number">60</span> + hour * <span class="hljs-number">3600</span>;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> time2 = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> run = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1970</span>; i &lt; year; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> ((i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; i % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>) || i % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>)<br>            run++;<br>    &#125;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; run &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-comment">//给出的年月日的时间计算</span><br>    time2 += run * <span class="hljs-number">366</span> * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span> + (year - <span class="hljs-number">1970</span> - run) * <span class="hljs-number">365</span> * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; time2 &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> temp = <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">//最后一年单独计算，因为最后一年未满整一年</span><br>    <span class="hljs-comment">//最后一年是闰年还是平年</span><br>    <span class="hljs-keyword">if</span> ((year % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; year % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>) || year % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>)<br>        temp = <span class="hljs-number">29</span>;<br>    <span class="hljs-keyword">else</span><br>        temp = <span class="hljs-number">28</span>;<br>    <span class="hljs-comment">//最后一年除掉最后一个月的时间，因为最后一个月未满整一个月</span><br>    <span class="hljs-keyword">switch</span> (month)<br>    &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">01</span>:<br>        time2 += <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">02</span>:<br>        time2 += <span class="hljs-number">31</span> * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">03</span>:<br>        time2 += (<span class="hljs-number">31</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">04</span>:<br>        time2 += (<span class="hljs-number">62</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">05</span>:<br>        time2 += (<span class="hljs-number">92</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">06</span>:<br>        time2 += (<span class="hljs-number">123</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">07</span>:<br>        time2 += (<span class="hljs-number">153</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-comment">//8和9特殊，编译器在识别08和09时不会自动转换成8和9，而是提示错误的八进制数</span><br>    <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:<br>        time2 += (<span class="hljs-number">184</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">9</span>:<br>        time2 += (<span class="hljs-number">215</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">10</span>:<br>        time2 += (<span class="hljs-number">245</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">11</span>:<br>        time2 += (<span class="hljs-number">276</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:<br>        time2 += (<span class="hljs-number">306</span> + temp) * <span class="hljs-number">3600</span> * <span class="hljs-number">24</span>;<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-comment">//cout &lt;&lt; time2 &lt;&lt; endl;</span><br>    time2 += (day - <span class="hljs-number">1</span>) * <span class="hljs-number">24</span> * <span class="hljs-number">3600</span>;<br>    <span class="hljs-comment">//整的年月日的时间计算加上最后一日内的时分秒时间计算</span><br>    <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> res = time1 + time2;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-comment">//1970/02/01 00:00:00</span><br>    <span class="hljs-comment">//2716/02/02 00:00:00</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给素材分类，若作品1中有素材1和素材2，则认为素材1和素材2为一类，若作品2中有素材2和素材3，那么此后认为素材1、2、3为一类&lt;/p&gt;
&lt;p&gt;输入：第一行为作品数n，此后n行中每行第一位为该作品中的素材总数m，此后m个数字为素材名（int型）&lt;/p&gt;
&lt;p&gt;输出：素材的分
      
    
    </summary>
    
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/categories/Algorithm/"/>
    
      <category term="C++" scheme="https://chasencenge.github.io/categories/Algorithm/C/"/>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/tags/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>网易20秋招Unity工程师笔试编程题</title>
    <link href="https://chasencenge.github.io/2020/07/31/%E7%BD%91%E6%98%9320%E7%A7%8B%E6%8B%9BUnity%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%AC%94%E8%AF%95%E7%BC%96%E7%A8%8B%E9%A2%98/"/>
    <id>https://chasencenge.github.io/2020/07/31/网易20秋招Unity工程师笔试编程题/</id>
    <published>2020-07-31T14:25:33.000Z</published>
    <updated>2020-07-31T16:12:44.900Z</updated>
    
    <content type="html"><![CDATA[<p>定义S(n)，表示n在十进制下的各位数字和。</p><p>现在给定一个x,请你求出最小正整数n，满足x&lt;=S(n)。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-keyword">int</span> num;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; num;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">string</span>&gt; resV;<br>    <span class="hljs-built_in">string</span> a = <span class="hljs-string">"9"</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> n = <span class="hljs-number">0</span>; n &lt; num; n++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> x;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; x;<br>        <span class="hljs-comment">//long long int multi = 1;</span><br>        <span class="hljs-built_in">string</span> res;<br>        <span class="hljs-keyword">while</span> (x &gt; <span class="hljs-number">9</span>)<br>        &#123;<br>            x -= <span class="hljs-number">9</span>;<br>            res = a + res;<br>            <span class="hljs-comment">//multi *= 10;</span><br>        &#125;<br>        <span class="hljs-keyword">if</span> (x != <span class="hljs-number">0</span>)<br>        &#123;<br>            <span class="hljs-comment">//res += multi * x;</span><br>            res = to_string(x) + res;<br>        &#125;<br>        resV.push_back(res);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> n = <span class="hljs-number">0</span>; n &lt; num; n++)<br>    &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; resV[n] &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>小易给定你数字A, B (A &lt; B)和系数p, q。每次操作你可以将A变成A + p或者将p变成p * q。问至少几次操作使得B &lt;= A。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-keyword">int</span> num;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; num;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span>&gt; resV;<br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> n = <span class="hljs-number">0</span>; n &lt; num; n++)<br>    &#123;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> a;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> b;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> p;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> q;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; p &gt;&gt; q;<br>        <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span> (b - a &gt; p)<br>        &#123;<br>            <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> temp = b - a;<br>            <span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-keyword">int</span> multiNum = p;<br><br>            <span class="hljs-keyword">while</span> (temp &gt; multiNum)<br>            &#123;<br>                multiNum *= q;<br>                res++;<br>            &#125;<br>            res++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            res++;<br>        &#125;<br>        resV.push_back(res);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> n = <span class="hljs-number">0</span>; n &lt; num; n++)<br>    &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; resV[n] &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>小易定义一个数字序列是完美的，当且仅当对于任意2 &lt;= i &lt;= n，都满足<img src="https://www.nowcoder.com/equation?tex=%5Csum_%7B1%20%5Cleq%20j%20%3C%20i%7D%7BA_%7Bj%7D%7D%20%5Cleq%20A_%7Bi%7D" alt="img">，即每个数字都要大于等于前面所有数字的和。<br>现在给定数字序列A<del>i</del>，小易想请你从中找出最长的一段连续子序列，满足它是完美的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; resV;<br>    <span class="hljs-keyword">int</span> num;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; num;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; num; i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> tempLength = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">int</span> maxLength = <span class="hljs-number">0</span>;<br>        <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; n;<br>        <span class="hljs-keyword">int</span> serialNum;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; serialNum;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; serialNum; j++)<br>        &#123;<br>            <span class="hljs-keyword">int</span> data;<br>            <span class="hljs-built_in">cin</span> &gt;&gt; data;<br>            n.push_back(data);<br>        &#125;<br>        <span class="hljs-keyword">int</span> compute = n[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> k = <span class="hljs-number">1</span>; k &lt; serialNum; k++)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (n[k] &gt;= compute)<br>            &#123;<br>                compute += n[k];<br>                tempLength++;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                maxLength = max(maxLength, tempLength);<br>                tempLength = <span class="hljs-number">1</span>;<br>                compute = n[k];<br>            &#125;<br>        &#125;<br>        resV.push_back(maxLength);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; num; i++)<br>    &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; resV[i] &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>小易的公司一共有n名员工, 第i个人每个月的薪酬是x<del>i</del>万元。<br>现在小易的老板向小易提了m次询问, 每次询问老板都会给出一个整数k, 小易要快速回答老板工资等于k的员工的数量。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;unordered_map&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br><br>    <span class="hljs-keyword">int</span> people, question;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; people &gt;&gt; question;<br>    <span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">resV</span><span class="hljs-params">(question, <span class="hljs-number">0</span>)</span></span>;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; salaryV;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; questionV;<br>    <span class="hljs-built_in">unordered_map</span>&lt;<span class="hljs-built_in">string</span>, <span class="hljs-keyword">size_t</span>&gt; questionMap;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; people; i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> salary;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; salary;<br>        salaryV.push_back(salary);<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; question; i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> data;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; data;<br>        questionV.push_back(data);<br>        questionMap[to_string(data)];<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; people; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (questionMap.find(to_string(salaryV[i])) != questionMap.end())<br>        &#123;<br>            ++questionMap[to_string(salaryV[i])];<br>        &#125;<br>    &#125;<br><br>   <br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; question; i++)<br>    &#123;<br>        <span class="hljs-built_in">cout</span> &lt;&lt; questionMap.find(to_string(questionV[i]))-&gt;second &lt;&lt; <span class="hljs-built_in">endl</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;定义S(n)，表示n在十进制下的各位数字和。&lt;/p&gt;
&lt;p&gt;现在给定一个x,请你求出最小正整数n，满足x&amp;lt;=S(n)。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
      
    
    </summary>
    
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/categories/Algorithm/"/>
    
      <category term="C++" scheme="https://chasencenge.github.io/categories/Algorithm/C/"/>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/tags/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Pyplot绘图</title>
    <link href="https://chasencenge.github.io/2020/07/27/Pyplot%E7%BB%98%E5%9B%BE/"/>
    <id>https://chasencenge.github.io/2020/07/27/Pyplot绘图/</id>
    <published>2020-07-27T12:56:31.000Z</published>
    <updated>2020-07-27T13:20:21.018Z</updated>
    
    <content type="html"><![CDATA[<h4 id="标识散点：plt-scatter-x-y"><a href="#标识散点：plt-scatter-x-y" class="headerlink" title="标识散点：plt.scatter(x, y)"></a>标识散点：plt.scatter(x, y)</h4><p>可选项s修改散点大小，color修改颜色</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.scatter(thisNodeLoc[<span class="hljs-number">0</span>], thisNodeLoc[<span class="hljs-number">1</span>], s=<span class="hljs-number">10</span>, color=<span class="hljs-string">'b'</span>)<br></code></pre></td></tr></table></figure><h4 id="连线：plt-plot-x1-y1-x2-y2"><a href="#连线：plt-plot-x1-y1-x2-y2" class="headerlink" title="连线：plt.plot([x1, y1], [x2, y2])"></a>连线：plt.plot([x1, y1], [x2, y2])</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.plot([thisNodeLoc[<span class="hljs-number">0</span>], sendToNodeLoc[<span class="hljs-number">0</span>]], [thisNodeLoc[<span class="hljs-number">1</span>], sendToNodeLoc[<span class="hljs-number">1</span>]])<br></code></pre></td></tr></table></figure><h4 id="注释文字：plt-annotate-txt-xy-xytext"><a href="#注释文字：plt-annotate-txt-xy-xytext" class="headerlink" title="注释文字：plt.annotate(txt, xy=(), xytext=())"></a>注释文字：plt.annotate(txt, xy=(), xytext=())</h4><p>xy处填注释点坐标，xytext处填文本位置，可加偏移offset</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.annotate(thisNodeLoc, xy=(thisNodeLoc[<span class="hljs-number">0</span>], thisNodeLoc[<span class="hljs-number">1</span>]), xytext=(thisNodeLoc[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>, thisNodeLoc[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><h4 id="限制坐标区间："><a href="#限制坐标区间：" class="headerlink" title="限制坐标区间："></a>限制坐标区间：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">plt.xlim(<span class="hljs-number">-2200</span>,<span class="hljs-number">2200</span>)<br>plt.ylim(<span class="hljs-number">-2200</span>,<span class="hljs-number">2200</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    thisNodeLoc = [nodes[n].locX, nodes[n].locY]<br>    sendToNodeLoc = [nodes[n].sendTo.locX, nodes[n].sendTo.locY]<br>    plt.scatter(thisNodeLoc[<span class="hljs-number">0</span>], thisNodeLoc[<span class="hljs-number">1</span>], s=<span class="hljs-number">10</span>, color=<span class="hljs-string">'b'</span>)<br>    plt.plot([thisNodeLoc[<span class="hljs-number">0</span>], sendToNodeLoc[<span class="hljs-number">0</span>]], [thisNodeLoc[<span class="hljs-number">1</span>], sendToNodeLoc[<span class="hljs-number">1</span>]])<br>    plt.annotate(thisNodeLoc, xy=(thisNodeLoc[<span class="hljs-number">0</span>], thisNodeLoc[<span class="hljs-number">1</span>]), xytext=(thisNodeLoc[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>, thisNodeLoc[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>))<br><br>plt.xlim(<span class="hljs-number">-2200</span>,<span class="hljs-number">2200</span>)<br>plt.ylim(<span class="hljs-number">-2200</span>,<span class="hljs-number">2200</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p>最后记得用<code>plt.show()</code>将其显示出来</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;标识散点：plt-scatter-x-y&quot;&gt;&lt;a href=&quot;#标识散点：plt-scatter-x-y&quot; class=&quot;headerlink&quot; title=&quot;标识散点：plt.scatter(x, y)&quot;&gt;&lt;/a&gt;标识散点：plt.scatter(x, y)&lt;/
      
    
    </summary>
    
    
      <category term="Python" scheme="https://chasencenge.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://chasencenge.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>百度之星2020---1003.Permutation</title>
    <link href="https://chasencenge.github.io/2020/07/26/%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F2020-1003-Permutation/"/>
    <id>https://chasencenge.github.io/2020/07/26/百度之星2020-1003-Permutation/</id>
    <published>2020-07-26T10:04:53.000Z</published>
    <updated>2020-07-26T10:28:00.105Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Problem Description</strong></p><p>一开始有 n个数，他们按 1…n的顺序排列，要求交换最多 m对数字（同一个数字可以参与多次交换），使得逆序对数目最大。</p><p>对于一个序列 A，如果存在正整数 i, j使得1≤<em>i</em>&lt;<em>j</em>≤<em>n</em> 而且 A[i] &gt; A[j]，则 &lt;<em>A</em>[<em>i</em>],<em>A</em>[<em>j</em>]&gt; 这个有序对称为 A的一个逆序对。</p><p><strong>Input</strong></p><p>第一行一个正整数test (1≤test≤100000) 表示数据组数。</p><p>对于每组数据，一行两个整数 n，m (1≤<em>n</em>≤1000000,0≤<em>m</em>≤1000000) 表示数字个数和最多可以交换的数字对数。</p><p><strong>Output</strong></p><p>对于每组数据，一行一个整数表示答案。</p><p><strong>Sample Input</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs undefined">6<br>1 1<br>2 0<br>2 1<br>3 1<br>4 1<br>4 2<br></code></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs undefined">0<br>0<br>1<br>3<br>5<br>6<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-comment">// 对每个（n, 1）结果都为：2 * n - 3</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">com</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span><br></span>&#123;<br>    <span class="hljs-keyword">int</span> com = <span class="hljs-number">2</span> * n - <span class="hljs-number">3</span>;<br>    <span class="hljs-keyword">return</span> com;<br>&#125;<br><br><span class="hljs-comment">// 把（n, m）转换为（n, 1）, (n -2, 1)...(n - 2m + 2, 1)之和的形式并利用com()计算结果</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">arr</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, <span class="hljs-keyword">int</span> m)</span><br></span>&#123;<br>    <span class="hljs-keyword">int</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; m; i++)<br>    &#123;<br>        res += com(n - <span class="hljs-number">2</span> * i);<br>        <span class="hljs-comment">//cout &lt;&lt; i &lt;&lt;" "&lt;&lt; res&lt;&lt;endl;</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">compute</span><span class="hljs-params">()</span> <br></span>&#123;<br>    <br>    <span class="hljs-keyword">int</span> groupNum;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; groupNum;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; output;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; groupNum; i++)<br>    &#123;<br>        <span class="hljs-keyword">int</span> n;<br>        <span class="hljs-keyword">int</span> m;<br>        <span class="hljs-comment">//cout &lt;&lt; "choiseNum:" &lt;&lt; choiseNum &lt;&lt; endl;</span><br>        <span class="hljs-built_in">cin</span> &gt;&gt; n;<br>            <span class="hljs-comment">//cout &lt;&lt; "b:" &lt;&lt; b &lt;&lt; endl;</span><br>        <span class="hljs-built_in">cin</span> &gt;&gt; m;<br>            <span class="hljs-comment">//cout &lt;&lt; "c:" &lt;&lt; c &lt;&lt; endl;</span><br>        <span class="hljs-keyword">if</span> (n == <span class="hljs-number">1</span> || m == <span class="hljs-number">0</span>)<br>        &#123;<br>            output.push_back(<span class="hljs-number">0</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">2</span> * m &lt; n)<br>            &#123;<br>                <span class="hljs-keyword">int</span> res = arr(n, m);<br>                output.push_back(res);<br>            &#125;<br>            <span class="hljs-keyword">else</span> <br>            &#123;<br>                m = n / <span class="hljs-number">2</span>;<br>                <span class="hljs-keyword">int</span> res = arr(n, m);<br>                output.push_back(res);<br>            &#125;<br>        &#125;<br>        &#125;<br>    <span class="hljs-keyword">return</span> output;<br>    &#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">int</span>&gt; res = compute();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; res.size(); i++)<br>    &#123;<br>        <span class="hljs-comment">//cout &lt;&lt; res[i];</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>, res[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Problem Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一开始有 n个数，他们按 1…n的顺序排列，要求交换最多 m对数字（同一个数字可以参与多次交换），使得逆序对数目最大。&lt;/p&gt;
&lt;p&gt;对于一个序列 A，如果存在正整数 i, j使得1≤&lt;
      
    
    </summary>
    
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/categories/Algorithm/"/>
    
      <category term="C++" scheme="https://chasencenge.github.io/categories/Algorithm/C/"/>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/tags/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>百度之星2020---1002.Game</title>
    <link href="https://chasencenge.github.io/2020/07/26/%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F2020-1002-Game/"/>
    <id>https://chasencenge.github.io/2020/07/26/百度之星2020-1002-Game/</id>
    <published>2020-07-26T10:04:18.000Z</published>
    <updated>2020-07-26T10:27:47.180Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Problem Description</strong></p><p><em>Alice</em> 和 <em>Bob</em> 在玩游戏。</p><p>桌面上有两堆金币，少的那堆有 x 个金币，多的那堆有 2x 个金币。</p><p>假设金币可以被无限细分。<em>Alice</em> 和 <em>Bob</em> 事先都不知道 x是几，但是他们都知道 x是一个 (0, 1]之间均匀分布的随机实数。</p><p><em>Alice</em> 会等概率的被分配到其中的一堆金币，<em>Bob</em> 会得到另一堆。x的值和两堆金币的分配是相互独立的。</p><p>拿到金币以后，<em>Alice</em> 会马上数清自己拿到多少金币。然后 <em>Alice</em> 可以选择是否和 <em>Bob</em> 那堆换。</p><p>给定 <em>Alice</em> 拿到的金币数目，请问 <em>Alice</em> 要不要交换，使得她期望能得到的金币数目更多？</p><p>如果交换期望得到的金币数目多于不交换期望得到的金币数目，输出交换，否则不交换。</p><p><strong>Input</strong></p><p>第一行一个正整数test (1≤test≤200000) 表示数据组数。</p><p>接下来每行一个小数p(0&lt;p≤2)，p最多保留五位小数，表示 <em>Alice</em> 拿到的金币数目。</p><p><strong>Output</strong></p><p>对于每组数据，输出 <em>Yes</em> 表示需要交换，输出 <em>No</em> 表示不要交换。</p><p><strong>Sample Input</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">1<br>1.00000<br></code></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">Yes<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">compute</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-keyword">int</span> groupNum;<br>    <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cin</span> &gt;&gt; groupNum;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">string</span>&gt; output;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; groupNum; i++)<br>    &#123;<br>        <span class="hljs-keyword">float</span> num;<br>        <span class="hljs-built_in">std</span>::<span class="hljs-built_in">cin</span> &gt;&gt; num;<br>        <span class="hljs-comment">//float exception;</span><br>        <span class="hljs-keyword">if</span> (num &gt; <span class="hljs-number">1</span>)<br>        &#123;<br>            output.push_back(<span class="hljs-string">"No"</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-number">2</span> * num * <span class="hljs-number">0.5</span> + num / <span class="hljs-number">2</span> * <span class="hljs-number">0.5</span> &gt; num)<br>            &#123;<br>                output.push_back(<span class="hljs-string">"Yes"</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                output.push_back(<span class="hljs-string">"No"</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-built_in">string</span>&gt; res = compute();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; res.size(); i++)<br>    &#123;<br>        <span class="hljs-comment">//cout &lt;&lt; res[i];</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%s\n"</span>, res[i].c_str());<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Problem Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Alice&lt;/em&gt; 和 &lt;em&gt;Bob&lt;/em&gt; 在玩游戏。&lt;/p&gt;
&lt;p&gt;桌面上有两堆金币，少的那堆有 x 个金币，多的那堆有 2x 个金币。&lt;/p&gt;
&lt;p&gt;假设金币可以被无
      
    
    </summary>
    
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/categories/Algorithm/"/>
    
      <category term="C++" scheme="https://chasencenge.github.io/categories/Algorithm/C/"/>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/tags/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>百度之星2020---1001.Discount</title>
    <link href="https://chasencenge.github.io/2020/07/26/%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F2020-1001-Discount/"/>
    <id>https://chasencenge.github.io/2020/07/26/百度之星2020-1001-Discount/</id>
    <published>2020-07-26T10:03:53.000Z</published>
    <updated>2020-07-26T10:21:02.628Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Problem Description</strong></p><p>学皇来到了一个餐馆吃饭。他觉得这家餐馆很好吃，于是就想办个会员。</p><p>一共有 n种会员充值卡套餐，假设学皇这餐饭的消费为 a元，选择第 i种套餐，需要充值 b[i] * a 的钱，这次吃饭可以打 c[i]×10 折，由充值的钱支付（即这次吃饭只需要从充值金额中扣除 a×<em>c</em>[i] 元）。以后用剩余的充值的钱吃饭不再打折。</p><p>请问学皇应该选择哪个套餐（必须选择恰好一个套餐），使得优惠的比例最大？</p><p>优惠比例的定义是把充的钱用完以后，(本来应该付的钱 - 实际付的钱) / 本来应该付的钱。在这个题目里，实际付的钱就是这次充值的花费。</p><p><strong>Input</strong></p><p>第一行一个整数 test(1≤test≤100) 表示数据组数。</p><p>对于每组数据，第一行一个正整数 n(1≤n≤100) 表示套餐的数目。</p><p>接下来 n行，每行一个正整数 b[i]和一个小数 c[i]。</p><p><strong>Output</strong></p><p>对于每组数据，输出一个五位小数表示最大的优惠比例。如果小数点后超过五位，四舍五入到五位。</p><p><strong>Sample Input</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">1<br>2<br>2 0.5<br>3 0.1<br></code></pre></td></tr></table></figure><p><strong>Sample Output</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs undefined">0.23077<br><br>样例解释<br>对于第一种套餐，优惠比例为 0.5a / (2a + 0.5a） = 0.2；<br>对于第二种套餐，优惠比例为 0.9a / (3a + 0.9a） = 9 / 39；<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">float</span>&gt; <span class="hljs-title">compute</span><span class="hljs-params">()</span> <br></span>&#123;<br>    <span class="hljs-keyword">int</span> groupNum;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; groupNum;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">float</span>&gt; output;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; groupNum; i++)<br>    &#123;<br>        <span class="hljs-keyword">float</span> res = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> choiseNum;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; choiseNum;<br>        <span class="hljs-comment">//cout &lt;&lt; "choiseNum:" &lt;&lt; choiseNum &lt;&lt; endl;</span><br>        <span class="hljs-keyword">int</span> b;<br>        <span class="hljs-keyword">float</span> c;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; choiseNum; j++)<br>        &#123;<br>            <span class="hljs-built_in">cin</span> &gt;&gt; b;<br>            <span class="hljs-comment">//cout &lt;&lt; "b:" &lt;&lt; b &lt;&lt; endl;</span><br>            <span class="hljs-built_in">cin</span> &gt;&gt; c;<br>            <span class="hljs-comment">//cout &lt;&lt; "c:" &lt;&lt; c &lt;&lt; endl;</span><br>            <span class="hljs-keyword">float</span> temp = (<span class="hljs-number">1</span> - c) / (b + <span class="hljs-number">1</span> - c);<br>            res = max(res, temp);<br>        &#125;<br>        output.push_back(res);<br>    &#125;<br>    <span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span><br></span>&#123;<br>    <span class="hljs-built_in">vector</span>&lt;<span class="hljs-keyword">float</span>&gt; res = compute();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; res.size(); i++)<br>    &#123;<br>        <span class="hljs-comment">//cout &lt;&lt; res[i];</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%.5f\n"</span>, res[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Problem Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;学皇来到了一个餐馆吃饭。他觉得这家餐馆很好吃，于是就想办个会员。&lt;/p&gt;
&lt;p&gt;一共有 n种会员充值卡套餐，假设学皇这餐饭的消费为 a元，选择第 i种套餐，需要充值 b[i] * a 的
      
    
    </summary>
    
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/categories/Algorithm/"/>
    
      <category term="C++" scheme="https://chasencenge.github.io/categories/Algorithm/C/"/>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/tags/C/"/>
    
      <category term="Algorithm" scheme="https://chasencenge.github.io/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>游戏客户端面经知识点</title>
    <link href="https://chasencenge.github.io/2020/07/24/%E6%B8%B8%E6%88%8F%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%9D%A2%E7%BB%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>https://chasencenge.github.io/2020/07/24/游戏客户端面经知识点/</id>
    <published>2020-07-24T05:40:54.000Z</published>
    <updated>2020-07-24T05:43:25.394Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="Unity" scheme="https://chasencenge.github.io/categories/Unity/"/>
    
      <category term="Unreal" scheme="https://chasencenge.github.io/categories/Unity/Unreal/"/>
    
    
      <category term="Unity" scheme="https://chasencenge.github.io/tags/Unity/"/>
    
      <category term="Unreal" scheme="https://chasencenge.github.io/tags/Unreal/"/>
    
  </entry>
  
  <entry>
    <title>Unity项目对接到Laya</title>
    <link href="https://chasencenge.github.io/2020/07/21/Unity%E9%A1%B9%E7%9B%AE%E5%AF%B9%E6%8E%A5%E5%88%B0Laya/"/>
    <id>https://chasencenge.github.io/2020/07/21/Unity项目对接到Laya/</id>
    <published>2020-07-21T09:29:24.000Z</published>
    <updated>2020-07-24T02:30:25.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Unity-API"><a href="#Unity-API" class="headerlink" title="Unity API"></a>Unity API</h2><h4 id="GameObject-FindWithTag"><a href="#GameObject-FindWithTag" class="headerlink" title="GameObject.FindWithTag"></a>GameObject.FindWithTag</h4><p>通过Tag名找到游戏对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c#">ring = GameObject.FindWithTag(&quot;ring&quot;)<br></code></pre></td></tr></table></figure><table><thead><tr><th><a href="https://docs.unity3d.com/cn/current/ScriptReference/GameObject.FindWithTag.html" target="_blank" rel="noopener">FindWithTag</a></th><th>返回一个标记为 tag 的活动 GameObject。如果未找到 GameObject，则返回 null。</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/GameObject.Find.html" target="_blank" rel="noopener">Find</a></td><td>按 name 查找 GameObject，然后返回它。</td></tr><tr><td></td><td></td></tr></tbody></table><h4 id="Rigidbody"><a href="#Rigidbody" class="headerlink" title="Rigidbody"></a><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody.html" target="_blank" rel="noopener">Rigidbody</a></h4><p>Rigidbody是刚体，可以为游戏对象赋予物理属性，向对象添加 Rigidbody 组件后，其运动将受到 Unity 物理引擎的控制。即使不添加任何代码，Rigidbody 对象也受到向下的重力，并在与其他对象碰撞时作出反应（需有适当的collider）</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody-position.html" target="_blank" rel="noopener">position</a></th><th>刚体的位置</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody-rotation.html" target="_blank" rel="noopener">rotation</a></td><td>刚体的旋转</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody-useGravity.html" target="_blank" rel="noopener">useGravity</a></td><td>控制重力是否影响该刚体</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody-angularVelocity.html" target="_blank" rel="noopener">angularVelocity</a></td><td>刚体的角速度矢量（以弧度/秒为单位）</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody-velocity.html" target="_blank" rel="noopener">velocity</a></td><td>刚体的速度矢量</td></tr></tbody></table><table><thead><tr><th><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody.AddForce.html" target="_blank" rel="noopener">AddForce</a></th><th>向 Rigidbody 添加力</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody.Sleep.html" target="_blank" rel="noopener">Sleep</a></td><td>强制刚体进入睡眠状态至少一帧</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody.AddTorque.html" target="_blank" rel="noopener">AddTorque</a></td><td>向刚体添加扭矩</td></tr></tbody></table><h4 id="Quaternion"><a href="#Quaternion" class="headerlink" title="Quaternion"></a><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Quaternion.html" target="_blank" rel="noopener">Quaternion</a></h4><p>在API中的UnityEngine-&gt;classes，四元数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c#">Vector3 dir = hoopPoint.position - ballPoint.position;<br>Quaternion wantedRotation = Quaternion.LookRotation(dir);<br></code></pre></td></tr></table></figure><p>Quaternion.LookRotation(dir)使用指定的 forward 和 upwards 方向创建旋转</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/current/ScriptReference/Quaternion.AngleAxis.html" target="_blank" rel="noopener">AngleAxis</a></th><th>创建一个围绕 axis 旋转 angle 度的旋转</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Quaternion.LookRotation.html" target="_blank" rel="noopener">LookRotation</a></td><td>使用指定的 forward 和 upwards 方向创建旋转</td></tr><tr><td></td><td></td></tr></tbody></table><h4 id="GameObject-GetComponent"><a href="#GameObject-GetComponent" class="headerlink" title="GameObject.GetComponent"></a>GameObject.GetComponent</h4><p>GameObject.GetComponent<type>() 在UnityEngine-&gt;classes-&gt;GameObject</type></p><p>返回 GameObject 中类型为 type 的所有组件</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c#">void Start()<br>&#123;<br>    Component[] hingeJoints;<br>    hingeJoints = GetComponents(typeof(HingeJoint));<br><br>    foreach (HingeJoint joint in hingeJoints)<br>        joint.useSpring = false;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="ForceMode"><a href="#ForceMode" class="headerlink" title="ForceMode"></a><a href="https://docs.unity3d.com/cn/current/ScriptReference/ForceMode.html" target="_blank" rel="noopener">ForceMode</a></h4><p>位于UnityEngine-&gt;Enumerations</p><p>使用 ForceMode 指定如何使用 <a href="https://docs.unity3d.com/cn/current/ScriptReference/Rigidbody.AddForce.html" target="_blank" rel="noopener">Rigidbody.AddForce</a> 来施加力。</p><p>AddForce 函数可定义自己的力矢量，以及选择如何将此力施加于 GameObject（此 GameObject 必须附加有 Rigidbody 组件），从而影响您的 GameObject 的移动方式。</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/current/ScriptReference/ForceMode.Force.html" target="_blank" rel="noopener">Force</a></th><th>向此刚体添加连续力，使用其质量</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/ForceMode.Acceleration.html" target="_blank" rel="noopener">Acceleration</a></td><td>向此刚体添加连续加速度，忽略其质量</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/ForceMode.Impulse.html" target="_blank" rel="noopener">Impulse</a></td><td>向此刚体添加瞬时力冲击，考虑其质量</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/ForceMode.VelocityChange.html" target="_blank" rel="noopener">VelocityChange</a></td><td>向此刚体添加瞬时速度变化，忽略其质量</td></tr></tbody></table><h4 id="transform"><a href="#transform" class="headerlink" title="transform"></a>transform</h4><p>对象的位置、旋转和缩放</p><p>每个变换都可以有一个父级，使得能够分层应用位置、旋转和缩放</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/current/ScriptReference/Transform-parent.html" target="_blank" rel="noopener">parent</a></th><th>变换的父级</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Transform-position.html" target="_blank" rel="noopener">position</a></td><td>世界空间中的变换位置</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Transform-rotation.html" target="_blank" rel="noopener">rotation</a></td><td>一个四元数，用于存储变换在世界空间中的旋转</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Transform-localEulerAngles.html" target="_blank" rel="noopener">localEulerAngles</a></td><td>以欧拉角表示的相对于父变换旋转的旋转（以度为单位）</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Transform-localPosition.html" target="_blank" rel="noopener">localPosition</a></td><td>相对于父变换的变换位置</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Transform-localRotation.html" target="_blank" rel="noopener">localRotation</a></td><td>相对于父级变换旋转的变换旋转</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Transform-localScale.html" target="_blank" rel="noopener">localScale</a></td><td>相对于父对象的变换缩放</td></tr><tr><td><a href="https://docs.unity3d.com/cn/current/ScriptReference/Transform-childCount.html" target="_blank" rel="noopener">childCount</a></td><td>父变换具有的子项数</td></tr></tbody></table><h4 id="Camera-ScreenPointToRay"><a href="#Camera-ScreenPointToRay" class="headerlink" title="Camera.ScreenPointToRay"></a><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Camera.html" target="_blank" rel="noopener">Camera.ScreenPointToRay</a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c#">Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);<br></code></pre></td></tr></table></figure><h4 id="Physics-Raycast"><a href="#Physics-Raycast" class="headerlink" title="Physics.Raycast"></a><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Physics.html" target="_blank" rel="noopener">Physics.Raycast</a></h4><p>参数：</p><table><thead><tr><th>origin</th><th>射线在世界坐标系中的起点</th></tr></thead><tbody><tr><td>direction</td><td>射线的方向</td></tr><tr><td>maxDistance</td><td>射线应检查碰撞的最大距离</td></tr><tr><td>layerMask</td><td>层遮罩，用于在投射射线时有选择地忽略碰撞体</td></tr><tr><td>queryTriggerInteraction</td><td>指定该查询是否应该命中触发器</td></tr></tbody></table><p><strong>bool</strong> 如果射线与任何碰撞体相交，返回 true，否则为 false。</p><h4 id="RaycastHit"><a href="#RaycastHit" class="headerlink" title="RaycastHit"></a><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit.html" target="_blank" rel="noopener">RaycastHit</a></h4><p>用于从射线投射获取信息的结构</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-barycentricCoordinate.html" target="_blank" rel="noopener">barycentricCoordinate</a></th><th>命中的三角形的重心坐标</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-collider.html" target="_blank" rel="noopener">collider</a></td><td>命中的 Collider</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-distance.html" target="_blank" rel="noopener">distance</a></td><td>从射线原点到撞击点的距离</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-lightmapCoord.html" target="_blank" rel="noopener">lightmapCoord</a></td><td>撞击点处的 UV 光照贴图坐标</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-normal.html" target="_blank" rel="noopener">normal</a></td><td>射线命中的表面的法线</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-point.html" target="_blank" rel="noopener">point</a></td><td>世界空间中射线命中碰撞体的撞击点</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-rigidbody.html" target="_blank" rel="noopener">rigidbody</a></td><td>命中的碰撞体的 Rigidbody。如果该碰撞体未附加到刚体，则值为 /null/</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-textureCoord.html" target="_blank" rel="noopener">textureCoord</a></td><td>碰撞位置处的 UV 纹理坐标</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-textureCoord2.html" target="_blank" rel="noopener">textureCoord2</a></td><td>撞击点处的辅助 UV 纹理坐标</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-transform.html" target="_blank" rel="noopener">transform</a></td><td>命中的刚体或碰撞体的 Transform</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/RaycastHit-triangleIndex.html" target="_blank" rel="noopener">triangleIndex</a></td><td>命中的三角形的索引</td></tr></tbody></table><h4 id="Collider"><a href="#Collider" class="headerlink" title="Collider"></a><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider.html" target="_blank" rel="noopener">Collider</a></h4><p>所有碰撞体的基类</p><p><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/BoxCollider.html" target="_blank" rel="noopener">BoxCollider</a>、<a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/SphereCollider.html" target="_blank" rel="noopener">SphereCollider</a>、<a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/CapsuleCollider.html" target="_blank" rel="noopener">CapsuleCollider</a>、<a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/MeshCollider.html" target="_blank" rel="noopener">MeshCollider</a>、<a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/PhysicMaterial.html" target="_blank" rel="noopener">PhysicMaterial</a>、<a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Rigidbody.html" target="_blank" rel="noopener">Rigidbody</a></p><p>如果在游戏过程中需要移动具有 Collider 的对象，还应将 Rigidbody 组件附加到该对象。如果不想使该对象与其他对象进行物理交互，可将 Rigidbody 设置为运动刚体</p><p>变量：</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider-attachedRigidbody.html" target="_blank" rel="noopener">attachedRigidbody</a></th><th>碰撞体附加到的刚体</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider-bounds.html" target="_blank" rel="noopener">bounds</a></td><td>碰撞体的世界空间包围体积（只读）</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider-contactOffset.html" target="_blank" rel="noopener">contactOffset</a></td><td>该碰撞体的接触偏移值</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider-enabled.html" target="_blank" rel="noopener">enabled</a></td><td>启用的 Collider 将与其他 Collider 碰撞，禁用的 Collider 不会这样</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider-isTrigger.html" target="_blank" rel="noopener">isTrigger</a></td><td>碰撞体是不是触发器</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider-material.html" target="_blank" rel="noopener">material</a></td><td>碰撞体使用的材质</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider-sharedMaterial.html" target="_blank" rel="noopener">sharedMaterial</a></td><td>该碰撞体的共享物理材质</td></tr></tbody></table><p>消息：</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider.OnCollisionEnter.html" target="_blank" rel="noopener">OnCollisionEnter</a></th><th>当该碰撞体/刚体已开始接触另一个刚体/碰撞体时，调用 OnCollisionEnter</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider.OnCollisionExit.html" target="_blank" rel="noopener">OnCollisionExit</a></td><td>当该碰撞体/刚体已停止接触另一个刚体/碰撞体时，调用 OnCollisionExit</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider.OnCollisionStay.html" target="_blank" rel="noopener">OnCollisionStay</a></td><td>对应正在接触刚体/碰撞体的每一个碰撞体/刚体，每帧调用一次 OnCollisionStay</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider.OnTriggerEnter.html" target="_blank" rel="noopener">OnTriggerEnter</a></td><td>当 Collider other 事件进入该触发器时调用 OnTriggerEnter</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider.OnTriggerExit.html" target="_blank" rel="noopener">OnTriggerExit</a></td><td>当 Collider other 已停止接触该触发器时调用 OnTriggerExit</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Collider.OnTriggerStay.html" target="_blank" rel="noopener">OnTriggerStay</a></td><td>对于正在接触该触发器的每个其他 Collider，“几乎”所有帧都调用 OnTriggerStay。此函数位于物理计时器上，因此它不必运行每个帧</td></tr></tbody></table><h5 id="继承的成员"><a href="#继承的成员" class="headerlink" title="继承的成员"></a>继承的成员</h5><p>变量：</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component-gameObject.html" target="_blank" rel="noopener">gameObject</a></th><th>此组件附加到的游戏对象。始终将组件附加到游戏对象</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component-tag.html" target="_blank" rel="noopener">tag</a></td><td>此游戏对象的标签</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component-transform.html" target="_blank" rel="noopener">transform</a></td><td>附加到此 GameObject 的 Transform</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object-hideFlags.html" target="_blank" rel="noopener">hideFlags</a></td><td>该对象应该隐藏、随场景一起保存还是由用户修改</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object-name.html" target="_blank" rel="noopener">name</a></td><td>对象的名称</td></tr></tbody></table><p>公共函数：</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.BroadcastMessage.html" target="_blank" rel="noopener">BroadcastMessage</a></th><th>调用此游戏对象或其任何子项中的每个 MonoBehaviour 上名为 methodName 的方法</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.CompareTag.html" target="_blank" rel="noopener">CompareTag</a></td><td>此游戏对象是否使用 tag 进行了标记</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponent.html" target="_blank" rel="noopener">GetComponent</a></td><td>如果游戏对象附加了类型为 type 的组件，则将其返回，否则返回 null</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponentInChildren.html" target="_blank" rel="noopener">GetComponentInChildren</a></td><td>使用深度首次搜索返回 GameObject 或其任何子项中类型为 type 的组件</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponentInParent.html" target="_blank" rel="noopener">GetComponentInParent</a></td><td>返回 GameObject 或其任何父项中类型为 type 的组件</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponents.html" target="_blank" rel="noopener">GetComponents</a></td><td>返回 GameObject 中类型为 type 的所有组件</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponentsInChildren.html" target="_blank" rel="noopener">GetComponentsInChildren</a></td><td>返回 GameObject 或其任何子项中类型为 type 的所有组件</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponentsInParent.html" target="_blank" rel="noopener">GetComponentsInParent</a></td><td>返回 GameObject 或其任何父项中类型为 type 的所有组件</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.SendMessage.html" target="_blank" rel="noopener">SendMessage</a></td><td>调用此游戏对象中的每个 MonoBehaviour 上名为 methodName 的方法</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.SendMessageUpwards.html" target="_blank" rel="noopener">SendMessageUpwards</a></td><td>调用此游戏对象中的每个 MonoBehaviour 上或此行为的每个父级上名为 methodName 的方法</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.GetInstanceID.html" target="_blank" rel="noopener">GetInstanceID</a></td><td>返回对象的实例 ID</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.ToString.html" target="_blank" rel="noopener">ToString</a></td><td>返回 GameObject 的名称</td></tr></tbody></table><p>静态函数：</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.Destroy.html" target="_blank" rel="noopener">Destroy</a></th><th>删除 GameObject、组件或资源</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.DestroyImmediate.html" target="_blank" rel="noopener">DestroyImmediate</a></td><td>立即销毁对象 /obj/。强烈建议您改用 Destroy</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.DontDestroyOnLoad.html" target="_blank" rel="noopener">DontDestroyOnLoad</a></td><td>在加载新的 Scene 时，请勿销毁 Object</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.FindObjectOfType.html" target="_blank" rel="noopener">FindObjectOfType</a></td><td>返回第一个类型为 type 的已加载的激活对象</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.FindObjectsOfType.html" target="_blank" rel="noopener">FindObjectsOfType</a></td><td>返回所有类型为 type 的已加载的激活对象的列表</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.Instantiate.html" target="_blank" rel="noopener">Instantiate</a></td><td>克隆 original 对象并返回克隆对象</td></tr></tbody></table><h2 id="C"><a href="#C" class="headerlink" title="C#"></a>C#</h2><h4 id="out"><a href="#out" class="headerlink" title="out"></a>out</h4><p>out同ref一样，都是有一级地址传递的，也就是，带有这两个修饰符的参数，如果被修改了原来的值，将以新的值作为他的值（在函数执行完毕后，该参数的值将返回给函数调用中使用的变量，有点像C++ &amp;）</p><p>在函数中使用out参数时，必须将其看成尚未赋值。也就是说调用代码可以把已赋值的变量用作out参数，但在函数执行时该变量的值会丢失，所以就算在函数外已经初始化，在函数内也要重新初始化</p><p>示例：</p><p>// 第一行hit不用初始化，参数中hit前加out，尽管Physics.Raycast返回bool，hit已在其中赋值，所以下一个if语句中hit可以调用其对象的属性方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c#">RaycastHit hit;<br>if (Physics.Raycast(ray, out hit, 1000, 1 &lt;&lt; 8))<br>   &#123;<br>if (hit.collider.gameObject.tag == &quot;Basketball&quot; &amp;&amp; !hit.collider.gameObject.GetComponent&lt;BSKBall&gt;().IsShooting())<br>&#123;<br>currentBall = hit.collider.gameObject;<br>Rigidbody r = currentBall.GetComponent&lt;Rigidbody&gt;();<br>r.isKinematic = true;<br><br>Vector3 touchPoint = Camera.main.ScreenToWorldPoint(Input.mousePosition + new Vector3(0, 0, depth));<br>touchPoint.x = Mathf.Clamp(touchPoint.x, leftEdge.transform.position.x + 0.29f, rightEdge.transform.position.x - 0.29f);<br>touchPoint.y = selectBallPosY;<br>currentBall.transform.position = touchPoint;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Unity坐标"><a href="#Unity坐标" class="headerlink" title="Unity坐标"></a>Unity坐标</h4><h5 id="四种坐标："><a href="#四种坐标：" class="headerlink" title="四种坐标："></a>四种坐标：</h5><p>世界坐标(World Space)：游戏物体在创造的世界中的坐标</p><p><strong>transfrom.position</strong>获得的是物体相对于世界坐标的位置</p><p><strong>transfrom.localPosition</strong>获得的是物体相对于父物体坐标的位置</p><!--注：模型Mesh保存的顶点坐标均为局部坐标系下的坐标--><p>屏幕坐标(Screen Space)：以像素记</p><p>视口坐标(Viewport Space)：将屏幕坐标单位化</p><h5 id="坐标转换："><a href="#坐标转换：" class="headerlink" title="坐标转换："></a>坐标转换：</h5><p>物体B相对于物体A的局部坐标：<strong>A.transform.InverseTransformPoint(B)</strong></p><p>屏幕坐标转世界坐标：<strong>Camera.main.ScreenToWorldPoint</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c#">Vector3 mousePos = Input.mousePosition;<br>Vector3 screenToWorld = Camera.main.ScreenToWorldPoint(new Vector3(mousePos.x, mousePos.y, -Camera.main.transform.position.z));<br></code></pre></td></tr></table></figure><p>世界坐标转屏幕坐标：<strong>Camera.main.WorldToScreenPoint</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c#">Vector3 worldToScreen = Camera.main.WorldToScreenPoint(transform.position);<br></code></pre></td></tr></table></figure><h4 id="Mathf-Clamp"><a href="#Mathf-Clamp" class="headerlink" title="Mathf.Clamp"></a><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Mathf.html" target="_blank" rel="noopener">Mathf.Clamp</a></h4><p>在给定的最小浮点值和最大浮点值之间钳制给定值。如果在最小和最大范围内，则返回给定值</p><p>如果给定的浮点值小于最小值，则返回最小值。如果给定值大于最大值，则返回最大值。使用 Clamp 可将某个值限制为最小值和最大值定义的某个范围内</p><h5 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h5><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component-gameObject.html" target="_blank" rel="noopener">gameObject</a></th><th>此组件附加到的游戏对象。始终将组件附加到游戏对象。</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component-tag.html" target="_blank" rel="noopener">tag</a></td><td>此游戏对象的标签。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component-transform.html" target="_blank" rel="noopener">transform</a></td><td>附加到此 GameObject 的 Transform。</td></tr></tbody></table><h5 id="公共函数"><a href="#公共函数" class="headerlink" title="公共函数"></a>公共函数</h5><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.BroadcastMessage.html" target="_blank" rel="noopener">BroadcastMessage</a></th><th>调用此游戏对象或其任何子项中的每个 MonoBehaviour 上名为 methodName 的方法。</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.CompareTag.html" target="_blank" rel="noopener">CompareTag</a></td><td>此游戏对象是否使用 tag 进行了标记？</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponent.html" target="_blank" rel="noopener">GetComponent</a></td><td>如果游戏对象附加了类型为 type 的组件，则将其返回，否则返回 null。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponentInChildren.html" target="_blank" rel="noopener">GetComponentInChildren</a></td><td>使用深度首次搜索返回 GameObject 或其任何子项中类型为 type 的组件。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponentInParent.html" target="_blank" rel="noopener">GetComponentInParent</a></td><td>返回 GameObject 或其任何父项中类型为 type 的组件。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponents.html" target="_blank" rel="noopener">GetComponents</a></td><td>返回 GameObject 中类型为 type 的所有组件。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponentsInChildren.html" target="_blank" rel="noopener">GetComponentsInChildren</a></td><td>返回 GameObject 或其任何子项中类型为 type 的所有组件。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.GetComponentsInParent.html" target="_blank" rel="noopener">GetComponentsInParent</a></td><td>返回 GameObject 或其任何父项中类型为 type 的所有组件。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.SendMessage.html" target="_blank" rel="noopener">SendMessage</a></td><td>调用此游戏对象中的每个 MonoBehaviour 上名为 methodName 的方法。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.SendMessageUpwards.html" target="_blank" rel="noopener">SendMessageUpwards</a></td><td>调用此游戏对象中的每个 MonoBehaviour 上或此行为的每个父级上名为 methodName 的方法。</td></tr></tbody></table><h5 id="继承的成员-1"><a href="#继承的成员-1" class="headerlink" title="继承的成员"></a>继承的成员</h5><h5 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a>变量</h5><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object-hideFlags.html" target="_blank" rel="noopener">hideFlags</a></th><th>该对象应该隐藏、随场景一起保存还是由用户修改？</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object-name.html" target="_blank" rel="noopener">name</a></td><td>对象的名称。</td></tr></tbody></table><h5 id="公共函数-1"><a href="#公共函数-1" class="headerlink" title="公共函数"></a>公共函数</h5><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.GetInstanceID.html" target="_blank" rel="noopener">GetInstanceID</a></th><th>返回对象的实例 ID。</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Object.ToString.html" target="_blank" rel="noopener">ToString</a></td><td>返回 GameObject 的名称。</td></tr></tbody></table><h4 id="Component"><a href="#Component" class="headerlink" title="Component"></a><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Component.html" target="_blank" rel="noopener">Component</a></h4><p>附加到 <a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/GameObject.html" target="_blank" rel="noopener">GameObject</a> 的所有内容的基本类</p><p>注：代码不会直接创建 Component，而是编写脚本代码，然后将该脚本附加到GameObject</p><h4 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.html" target="_blank" rel="noopener">Resources</a></h4><p>Resources 类允许您查找和访问资源等对象</p><p>在编辑器中，<a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.FindObjectsOfTypeAll.html" target="_blank" rel="noopener">Resources.FindObjectsOfTypeAll</a> 可用于定位资源和场景对象</p><p>通过 <a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.Load.html" target="_blank" rel="noopener">Resources.Load</a> 函数，可访问 Assets 文件夹中处于任意位置的名为“Resources”的文件夹中的所有资源。 可以存在多个“Resources”文件夹，加载对象时，将对每个文件夹进行检查</p><p><strong>注意：</strong>Assets 中的 <a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.html" target="_blank" rel="noopener">Resources</a> 文件夹需要在使用前创建。创建新项目时，不会创建该文件夹</p><p>静态函数：（函数调用的结果不会访问或者修改任何对象（非static）数据成员，这样的成员声明为静态成员函数比较好）</p><table><thead><tr><th><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.FindObjectsOfTypeAll.html" target="_blank" rel="noopener">FindObjectsOfTypeAll</a></th><th>返回所有类型为 type 的对象的列表。</th></tr></thead><tbody><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.Load.html" target="_blank" rel="noopener">Load</a></td><td>加载存储在 Resources 文件夹中的 path 处的资源。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.LoadAll.html" target="_blank" rel="noopener">LoadAll</a></td><td>加载位于 Resources 文件夹中的 path 处的文件夹中的所有资源，或加载位于该处的文件。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.LoadAsync.html" target="_blank" rel="noopener">LoadAsync</a></td><td>异步加载存储在 Resources 文件夹中的 path 处的资源。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.UnloadAsset.html" target="_blank" rel="noopener">UnloadAsset</a></td><td>从内存中卸载 /assetToUnload/。</td></tr><tr><td><a href="https://docs.unity3d.com/cn/2018.4/ScriptReference/Resources.UnloadUnusedAssets.html" target="_blank" rel="noopener">UnloadUnusedAssets</a></td><td>卸载未使用的资源。</td></tr></tbody></table><h2 id="Laya-API"><a href="#Laya-API" class="headerlink" title="Laya API"></a>Laya API</h2><h4 id="Rigidbody3D"><a href="#Rigidbody3D" class="headerlink" title="Rigidbody3D"></a><a href="https://layaair2.ldc2.layabox.com/api2/Chinese/index.html?category=&class=_laya_d3_physics_rigidbody3d_.rigidbody3d#applytorque" target="_blank" rel="noopener">Rigidbody3D</a></h4><p>对应于Unity中<strong>Rigidbody.AddForce</strong>，<strong>Rigidbody.AddTorque</strong>， Laya提供的类为Rigidbody3D，对应的方法为<strong>Rigidbody3D.applyForce</strong>，<strong>Rigidbody3D.applyTorque</strong></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript">applyForce(force: Vector3, localOffset?: Vector3): <span class="hljs-built_in">void</span><br><br>applyImpulse(impulse: Vector3, localOffset?: Vector3): <span class="hljs-built_in">void</span><br><br>applyTorque(torque: Vector3): <span class="hljs-built_in">void</span><br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Unity-API&quot;&gt;&lt;a href=&quot;#Unity-API&quot; class=&quot;headerlink&quot; title=&quot;Unity API&quot;&gt;&lt;/a&gt;Unity API&lt;/h2&gt;&lt;h4 id=&quot;GameObject-FindWithTag&quot;&gt;&lt;a href=&quot;#Gam
      
    
    </summary>
    
    
      <category term="Unity" scheme="https://chasencenge.github.io/categories/Unity/"/>
    
      <category term="Laya" scheme="https://chasencenge.github.io/categories/Unity/Laya/"/>
    
      <category term="C#" scheme="https://chasencenge.github.io/categories/Unity/Laya/C/"/>
    
      <category term="TypeScript" scheme="https://chasencenge.github.io/categories/Unity/Laya/C/TypeScript/"/>
    
    
      <category term="Laya" scheme="https://chasencenge.github.io/tags/Laya/"/>
    
      <category term="TypeScript" scheme="https://chasencenge.github.io/tags/TypeScript/"/>
    
      <category term="Unity" scheme="https://chasencenge.github.io/tags/Unity/"/>
    
      <category term="C#" scheme="https://chasencenge.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Python实现Lora节点拓扑自动规划</title>
    <link href="https://chasencenge.github.io/2020/07/20/Python%E5%AE%9E%E7%8E%B0Lora%E8%8A%82%E7%82%B9%E6%8B%93%E6%89%91%E8%87%AA%E5%8A%A8%E8%A7%84%E5%88%92/"/>
    <id>https://chasencenge.github.io/2020/07/20/Python实现Lora节点拓扑自动规划/</id>
    <published>2020-07-20T02:57:58.000Z</published>
    <updated>2020-07-27T19:14:15.897Z</updated>
    
    <content type="html"><![CDATA[<h3 id="NodeClass-py"><a href="#NodeClass-py" class="headerlink" title="NodeClass.py:"></a>NodeClass.py:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 小记：</span><br><span class="hljs-comment"># 先不考虑中继节点在classB模式下发Beacon的能耗</span><br><span class="hljs-comment"># 能量效率的计算公式是否有问题？只考虑发包的能耗和时间</span><br><span class="hljs-comment"># energyConsumption需统一成自己在lifetime中的能量消耗推导，不再用论文中笼统的折线图值</span><br><span class="hljs-comment"># 注意区分self.sendTo.index和一些函数中的node.index的区别，前者使用的场景在确定节点拓扑之后，后者使用在确定节点拓扑之前的一些遍历情况</span><br><br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><br><span class="hljs-comment"># python中的public、private和protected是通过变量名前的下划线标识的，保护类型一个下划线，私有类型两个下划线</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Node</span>:</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(self, name, locX, locY, nodeNum, _payload, _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE, _dataGen, _cycleT,<br> _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, isGateway=<span class="hljs-number">0</span>, whichSet=<span class="hljs-number">0</span>, index=<span class="hljs-number">0</span>)</span>:</span> <span class="hljs-comment"># 默认缺省值isGateway=0</span><br>self.name = name<br>self.payload = _payload<br>self.bandW = _bandW<br>self.c = _c<br>self.pi = _pi<br>self.beta = _beta<br>self.whiteNoise = _whiteNoise<br>self.dutyCycle = _dutyCycle<br>self.batteryE = _batteryE<br><span class="hljs-comment"># 每确定要多为另一个节点进行中继，dataGen需要更新添加帮忙转发的数据量</span><br>self.dataGen = _dataGen<br>self.cycleT = _cycleT<br>self.transRadioE = _transRadioE<br>self.recvRadioE = _recvRadioE<br>self.spareRadioE = _spareRadioE<br>self.offRadioE = _offRadioE<br>self.onMcuE = _onMcuE<br>self.offMcuE = _offMcuE<br><span class="hljs-comment"># 注意和dataGen的区别，这个变量是节点发送给节点/网关的总数据量，带有中继数据</span><br>self.dataSend = _dataGen<br>self.lifeT = <span class="hljs-number">0.0</span><br>self.cycleE = <span class="hljs-number">0.0</span><br>self.symbleT = <span class="hljs-number">0.0</span><br>self.pktT = <span class="hljs-number">0.0</span><br>self.transT = <span class="hljs-number">0.0</span><br>self.recvT = <span class="hljs-number">0.0</span><br>self.spareT = <span class="hljs-number">0.0</span><br>self.airtime = <span class="hljs-number">0.0</span><br>self.goodput = <span class="hljs-number">0.0</span><br><span class="hljs-comment"># 用于MST中判断节点在哪个集合中,初始集合为0，MST集合为1</span><br>self.whichSet = whichSet<br><span class="hljs-comment"># 标识一个“节点”是否是网关，输入中第一个“点”为网关，坐标[0, 0]</span><br>self.isGateway = isGateway<br>self.locX = locX<br>self.locY = locY<br><span class="hljs-comment"># 给节点一个索引标识</span><br>self.index = index<br>self.relayNum = <span class="hljs-number">0</span><br><span class="hljs-comment"># 存放了此节点通往其他节点时使用的参数值</span><br>self.spreadFactor = [<span class="hljs-number">7</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nodeNum)]<br>self.transPower = [<span class="hljs-number">13</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nodeNum)]<br>self.channel = [<span class="hljs-number">1</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nodeNum)]<br>self.codingRate = [<span class="hljs-number">5</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nodeNum)]<br>self.pdr = <span class="hljs-number">0.0</span><br><span class="hljs-comment"># 标识此节点的数据直接发送给哪个节点，为Node类型</span><br>self.sendTo = self<br><span class="hljs-comment"># 标识此节点帮助哪些节点进行数据转发</span><br>self.relayFrom = []<br><span class="hljs-comment"># 标识此节点工作在哪个class下，class会影响cycleE</span><br>self.workClass = <span class="hljs-string">'A'</span><br><br><span class="hljs-comment"># self._prop = []</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">distNode</span><span class="hljs-params">(self, node)</span>:</span><br>dist = math.pow((math.pow((self.locX - node.locX), <span class="hljs-number">2</span>) + math.pow((self.locY - node.locY), <span class="hljs-number">2</span>)), <span class="hljs-number">0.5</span>)<br><span class="hljs-comment"># print(self.locX)</span><br><span class="hljs-comment"># print(self.locY)</span><br><span class="hljs-comment"># print(node.locX)</span><br><span class="hljs-comment"># print(node.locY)</span><br><span class="hljs-comment"># print('Distance of ' + self.name + ' to ' + node.name + ' = ' + str(dist))</span><br><span class="hljs-keyword">return</span> dist<br><br><span class="hljs-comment"># 8个信道，从902.1开始每次加0.2</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">freq</span><span class="hljs-params">(self, node)</span>:</span><br>frequency = <span class="hljs-number">902.1</span> + <span class="hljs-number">0.2</span> * self.channel[node.index]<br>frequency *= math.pow(<span class="hljs-number">10</span>, <span class="hljs-number">6</span>)<br><span class="hljs-comment"># print('Frequency of channel ' + str(self.channel[node.index]) + ' = ' + str(frequency))</span><br><span class="hljs-keyword">return</span> frequency<br><br><span class="hljs-comment"># Rayleigh fading channel</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">g</span><span class="hljs-params">(self)</span>:</span><br>reyleigh = np.random.exponential(<span class="hljs-number">1.0</span>, size=<span class="hljs-literal">None</span>)<br><span class="hljs-comment"># print(self.name + ' return rayleigh fading channel g of: ' + str(reyleigh))</span><br><span class="hljs-keyword">return</span> reyleigh<br><br><br><span class="hljs-comment"># 此为论文中的折线图值观测值实现的能耗函数，现替换成计算式方式实现</span><br><span class="hljs-comment"># energy consumption, unit is mW</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">enerConsump</span><span class="hljs-params">(self, node)</span>:</span><br>energyPacket = [[<span class="hljs-number">40</span>, <span class="hljs-number">50</span>], [<span class="hljs-number">50</span>, <span class="hljs-number">67</span>], [<span class="hljs-number">65</span>, <span class="hljs-number">85</span>], [<span class="hljs-number">95</span>, <span class="hljs-number">105</span>], [<span class="hljs-number">100</span>, <span class="hljs-number">125</span>], [<span class="hljs-number">110</span>, <span class="hljs-number">135</span>]]<br>clsP = <span class="hljs-number">0</span><br><span class="hljs-keyword">if</span> self.transPower[node.index] &lt;= <span class="hljs-number">15</span>:<br>cls_p = <span class="hljs-number">0</span><br><span class="hljs-keyword">else</span>:<br>cls_p = <span class="hljs-number">1</span><br>clsS = self.spreadFactor[node.index] - <span class="hljs-number">7</span><br><span class="hljs-comment"># rst = energy_packet[cls_s][cls_p] * 0.001</span><br>rst = energyPacket[clsS][clsP]<br><span class="hljs-comment"># print("ec(line 70, unit is mW):", rst)</span><br>name = self.name<br>sf = str(self.spreadFactor[node.index])<br>tp = str(self.transPower[node.index])  <span class="hljs-comment"># 只是为了下一行不超长...</span><br><span class="hljs-comment"># print('Energy Consumption of ' + name + ' with sf=' + sf + ', tp=' + tp + ' is: ' + str(rst))</span><br><span class="hljs-keyword">return</span> rst<br><br><span class="hljs-comment"># 公式计算方式求energy consumption</span><br><span class="hljs-comment"># def enerConsump(self):</span><br><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">th</span><span class="hljs-params">(self, si)</span>:</span><br><span class="hljs-keyword">if</span> si == <span class="hljs-number">7</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-6</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">8</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-9</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">9</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-12</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">10</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-15</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">11</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-17.5</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">12</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-20</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ss</span><span class="hljs-params">(self, si)</span>:</span><br><span class="hljs-keyword">if</span> si == <span class="hljs-number">7</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-123</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">8</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-126</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">9</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-129</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">10</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-132</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">11</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-134.5</span><br><span class="hljs-keyword">elif</span> si == <span class="hljs-number">12</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-number">-137</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">tomWatt</span><span class="hljs-params">(self, dBm)</span>:</span><br>mWatt = math.pow(<span class="hljs-number">10</span>, (dBm / <span class="hljs-number">10</span>))<br><span class="hljs-comment"># print(self.name + ' dBm to mWatt is: ' + str(mWatt))</span><br><span class="hljs-keyword">return</span> mWatt<br><br><span class="hljs-comment"># 如果有relay，EE计算为payload * pdr1 * pdr2 / (energyInTime1 + energyInTime2)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">energyEffi</span><span class="hljs-params">(self, node)</span>:</span><br>tempVar = (<span class="hljs-number">8</span> * self.payload - <span class="hljs-number">4</span> * self.spreadFactor[node.index] + <span class="hljs-number">28</span> + <span class="hljs-number">16</span>) / (<span class="hljs-number">4</span> * self.spreadFactor[node.index])<br>time = (<span class="hljs-number">20.25</span> + max(math.ceil(tempVar) * self.channel[node.index], <span class="hljs-number">0</span>)) * <span class="hljs-number">2</span> ** self.spreadFactor[node.index] / self.bandW<br>energyInTime = time * self.enerConsump(node)<br>energyEfficiency = self.payload * self.selfToNodePdr(node) / energyInTime<br><span class="hljs-comment"># print('EnergyEfficiency of ' + self.name + ' is: ' + str(energyEfficiency))</span><br><span class="hljs-keyword">return</span> energyEfficiency<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">energyIntime</span><span class="hljs-params">(self, node)</span>:</span><br>tempVar = (<span class="hljs-number">8</span> * self.payload - <span class="hljs-number">4</span> * self.spreadFactor[node.index] + <span class="hljs-number">28</span> + <span class="hljs-number">16</span>) / (<span class="hljs-number">4</span> * self.spreadFactor[node.index])<br>time = (<span class="hljs-number">20.25</span> + max(math.ceil(tempVar) * self.channel[node.index], <span class="hljs-number">0</span>)) * <span class="hljs-number">2</span> ** self.spreadFactor[<br>node.index] / self.bandW<br>energyInTime = time * self.enerConsump(node)<br><span class="hljs-keyword">return</span> energyInTime<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">energyEffiRelay</span><span class="hljs-params">(self, node1, node2)</span>:</span><br>tempVar1 = (<span class="hljs-number">8</span> * self.payload - <span class="hljs-number">4</span> * self.spreadFactor[node1.index] + <span class="hljs-number">28</span> + <span class="hljs-number">16</span>) / (<span class="hljs-number">4</span> * self.spreadFactor[node1.index])<br>time1 = (<span class="hljs-number">20.25</span> + max(math.ceil(tempVar1) * self.channel[node1.index], <span class="hljs-number">0</span>)) * <span class="hljs-number">2</span> ** self.spreadFactor[node1.index] / self.bandW<br>energyInTime1 = time1 * self.enerConsump(node1)<br>tempVar2 = (<span class="hljs-number">8</span> * node1.payload - <span class="hljs-number">4</span> * node1.spreadFactor[node2.index] + <span class="hljs-number">28</span> + <span class="hljs-number">16</span>) / (<br><span class="hljs-number">4</span> * node1.spreadFactor[node2.index])<br>time2 = (<span class="hljs-number">20.25</span> + max(math.ceil(tempVar2) * node1.channel[node2.index], <span class="hljs-number">0</span>)) * <span class="hljs-number">2</span> ** node1.spreadFactor[<br>node2.index] / node1.bandW<br>energyInTime2 = time2 * node1.enerConsump(node2)<br>energyEfficiency = self.payload * self.selfToNodePdr(node1) * node1.selfToNodePdr(node2) / (energyInTime1 + energyInTime2)<br><span class="hljs-keyword">return</span> energyEfficiency<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">relayPdr</span><span class="hljs-params">(self)</span>:</span><br><span class="hljs-keyword">if</span>(self.isGateway == <span class="hljs-number">1</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">else</span>:<br>temp = self.sendTo.relayPdr() * self.selfToNodePdr(self.sendTo)<br><span class="hljs-keyword">return</span> temp<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">relayEnergyInTime</span><span class="hljs-params">(self)</span>:</span><br><span class="hljs-keyword">if</span>(self.isGateway == <span class="hljs-number">1</span>):<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><span class="hljs-keyword">else</span>:<br>temp = self.sendTo.relayEnergyInTime() + self.energyIntime(self.sendTo)<br><span class="hljs-keyword">return</span> temp<br><br><span class="hljs-comment"># 将设备重叠数考虑进来，重叠、channel会降低pdr</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">selfToNodePdr</span><span class="hljs-params">(self, node)</span>:</span><br><span class="hljs-comment"># tempVal1是路径损失函数</span><br>tempVar1 = (self.c / (<span class="hljs-number">4</span> * self.pi * self.freq(node) * self.distNode(node))) ** self.beta<br><span class="hljs-comment"># print('tempVar1:', tempVar1)</span><br><span class="hljs-comment"># whiteNoise对pdr的影响大</span><br>tempVar2 = (self.tomWatt(self.th(self.spreadFactor[node.index])) * self.whiteNoise + self.tomWatt(<br>self.ss(self.spreadFactor[node.index])))<br><span class="hljs-comment"># print('tempVar2:', tempVar2)</span><br><span class="hljs-comment"># 这地方还是有问题！！！！为什么是/1000/1000，对比注释行</span><br><span class="hljs-comment"># pdr = math.exp(-math.pow(tempVar2 / (self.tomWatt(self.transPower) * tempVar1), 0.5))</span><br>pdr = math.exp(-math.pow(tempVar2 / (self.transPower[node.index] * tempVar1), <span class="hljs-number">0.5</span>) / <span class="hljs-number">1000</span> / <span class="hljs-number">1000</span>)<br><span class="hljs-comment"># print('Pdr of ' + self.name + ' to ' + node.name + ' is: ' + str(pdr))</span><br><span class="hljs-keyword">return</span> pdr<br><br><span class="hljs-comment"># 主文件里先确定sendTo谁，再更新transT值</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">updateTransT</span><span class="hljs-params">(self)</span>:</span><br>self.symbleT = math.pow(<span class="hljs-number">2</span>, self.spreadFactor[self.sendTo.index]) / self.bandW<br>tempVal1 = <span class="hljs-number">8</span> * self.payload - <span class="hljs-number">4</span> * self.spreadFactor[self.sendTo.index] + <span class="hljs-number">28</span> + <span class="hljs-number">16</span><br>tempVal2 = <span class="hljs-number">20.25</span> + max(math.ceil(tempVal1 / (<span class="hljs-number">4</span> * self.spreadFactor[self.sendTo.index])) * self.codingRate[self.sendTo.index], <span class="hljs-number">0</span>)<br>self.pktT = self.symbleT * tempVal2<br><span class="hljs-comment"># 计算transT</span><br><span class="hljs-comment"># 此节点将数据（包括自己的和中转的）发给其将要发至的节点时的pdr</span><br>pdr = self.selfToNodePdr(self.sendTo)<br><span class="hljs-keyword">if</span> pdr != <span class="hljs-number">0</span>:<br><span class="hljs-keyword">if</span> self.relayFrom:<br><span class="hljs-keyword">for</span> child <span class="hljs-keyword">in</span> self.relayFrom:<br><span class="hljs-comment"># 根据中继了哪些节点来更新dataSend的数据量，dataSend是此节点总共发送的数据量</span><br><span class="hljs-comment"># 若此节点非中继节点，则dataSend == dataGen</span><br>self.dataSend += child.dataGen<br>self.transT = self.pktT * self.cycleT / self.dataSend / pdr<br><span class="hljs-keyword">else</span>:<br>self.transT = <span class="hljs-number">10000</span><br><span class="hljs-keyword">return</span> self.transT<br><br><span class="hljs-comment"># 确定在self.relayFrom中添加完所有的远端节点后再进行更新</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">updateRecvT</span><span class="hljs-params">(self)</span>:</span><br><span class="hljs-comment"># 计算recvT，此时间包括自身发送时的class A模式的部分和中继时class B模式的recv time</span><br><span class="hljs-comment"># 没考虑作为发送端时的recvT，因为发送时工作在classA，只在发送数据的时候顺便开一个窗口接收数据，暂时不知道窗口总时长if self.relayFrom:</span><br><span class="hljs-keyword">if</span> self.relayFrom:<br><span class="hljs-keyword">for</span> child <span class="hljs-keyword">in</span> self.relayFrom:<br>self.recvT += child.transT<br>print(<span class="hljs-string">'Update transT of '</span> + self.name + <span class="hljs-string">' to: '</span> + str(self.recvT))<br><span class="hljs-keyword">return</span> self.recvT<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">lifetime</span><span class="hljs-params">(self)</span>:</span><br><span class="hljs-comment"># 设置transRadioE级别（87和120）</span><br><span class="hljs-keyword">if</span> self.transPower[self.sendTo.index] &lt; <span class="hljs-number">15</span>:<br>self.transRadioE = <span class="hljs-number">3.3</span> * <span class="hljs-number">87e-3</span><br>self.spareT = self.dutyCycle * self.cycleT - self.transT - self.recvT<br>radioOnE = self.transT * self.transRadioE + self.recvT * self.recvRadioE + self.spareT * self.spareRadioE<br>radioOffE = (<span class="hljs-number">1</span> - self.dutyCycle) * self.cycleT * self.offRadioE<br>mcuE = self.cycleT * self.dutyCycle * self.onMcuE + self.cycleT * (<span class="hljs-number">1</span> - self.dutyCycle) * self.offMcuE<br>self.cycleE = radioOnE + radioOffE + mcuE<br>self.lifeT = self.cycleT * self.batteryE / self.cycleE / <span class="hljs-number">3600</span> / <span class="hljs-number">24</span><br>print(<span class="hljs-string">'Lifetime of '</span> + self.name + <span class="hljs-string">' is: '</span> + str(self.lifeT))<br><span class="hljs-keyword">return</span> self.lifeT<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">goodput</span><span class="hljs-params">(self)</span>:</span><br><span class="hljs-comment"># 注意：goodput中计算的数据量用的是dataGen，而不是dataSend</span><br>goodput = self.cycleT / self.dataGen * self.payload / self.transT<br>print(<span class="hljs-string">'Goodput of '</span> + self.name + <span class="hljs-string">' is: '</span> + goodput)<br><span class="hljs-keyword">return</span> goodput<br></code></pre></td></tr></table></figure><h3 id="TopoWithMST-py"><a href="#TopoWithMST-py" class="headerlink" title="TopoWithMST.py:"></a>TopoWithMST.py:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> MST.Node.NodeClass <span class="hljs-keyword">import</span> Node<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">import</span> scipy <span class="hljs-keyword">as</span> sy<br><span class="hljs-keyword">from</span> scipy <span class="hljs-keyword">import</span> stats<br><span class="hljs-keyword">import</span> xlsxwriter<br><br><span class="hljs-comment"># 添加node要修改三个地方，node初始化，nodes列表添加该node，nodeNum值</span><br><br><span class="hljs-comment">#  常量，全局变量均以“_”开头命名</span><br><span class="hljs-comment"># _nodeNum = 6  # device number</span><br>_payload = <span class="hljs-number">4</span>  <span class="hljs-comment"># payload size of a packet, need to be modified</span><br>_bandW = <span class="hljs-number">125000</span><br>_c = <span class="hljs-number">3</span> * <span class="hljs-number">10</span> ** <span class="hljs-number">8</span><br>_pi = <span class="hljs-number">3.1415926</span><br>_beta = <span class="hljs-number">3</span>  <span class="hljs-comment"># path loss exponent, maybe a list, need to be init</span><br>_whiteNoise = random.random()   <span class="hljs-comment"># gauss white noise</span><br>_dutyCycle = <span class="hljs-number">0.02</span><br>_batteryE = <span class="hljs-number">3.7</span> * <span class="hljs-number">2</span> * <span class="hljs-number">3600</span><br>_dataGen = <span class="hljs-number">2000</span><br><br><span class="hljs-comment"># Radio耗电常量</span><br>_cycleT = <span class="hljs-number">3600</span> * <span class="hljs-number">12</span><br>_transRadioE = <span class="hljs-number">3.3</span> * <span class="hljs-number">120e-3</span>  <span class="hljs-comment"># 29, 87, 120</span><br>_recvRadioE = <span class="hljs-number">3.3</span> * <span class="hljs-number">11.5e-3</span><br>_spareRadioE = <span class="hljs-number">3.3</span> * <span class="hljs-number">1.6e-3</span><br>_offRadioE = <span class="hljs-number">3.3</span> * <span class="hljs-number">1.5e-6</span><br><br><span class="hljs-comment"># Known and Unknown... P10  MCU耗电情况</span><br>_onMcuE = <span class="hljs-number">23.48e-4</span><br>_offMcuE = <span class="hljs-number">174.65e-7</span><br><br>sfRange = [<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>]<br>tpRange = [<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>]<br>chRange = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>]<br>crRange = [<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>]<br><br>nodeNum = <span class="hljs-number">18</span><br><br><br><span class="hljs-comment"># _node0是网关，所以isGateway=1, whichSet=1</span><br>_node0 = Node(<span class="hljs-string">'_node0'</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE, _dataGen,<br>              _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, isGateway=<span class="hljs-number">1</span>, whichSet=<span class="hljs-number">1</span>)<br>_node1 = Node(<span class="hljs-string">'_node1'</span>, <span class="hljs-number">-2800</span>, <span class="hljs-number">-500</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">1</span>)<br>_node2 = Node(<span class="hljs-string">'_node2'</span>, <span class="hljs-number">2500</span>, <span class="hljs-number">2700</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">2</span>)<br>_node3 = Node(<span class="hljs-string">'_node3'</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">800</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">3</span>)<br>_node4 = Node(<span class="hljs-string">'_node4'</span>, <span class="hljs-number">2500</span>, <span class="hljs-number">0</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">4</span>)<br>_node5 = Node(<span class="hljs-string">'_node5'</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">0</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">5</span>)<br>_node6 = Node(<span class="hljs-string">'_node6'</span>, <span class="hljs-number">1500</span>, <span class="hljs-number">2000</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">6</span>)<br>_node7 = Node(<span class="hljs-string">'_node7'</span>, <span class="hljs-number">-800</span>, <span class="hljs-number">700</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">7</span>)<br>_node8 = Node(<span class="hljs-string">'_node8'</span>, <span class="hljs-number">-600</span>, <span class="hljs-number">-400</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">8</span>)<br>_node9 = Node(<span class="hljs-string">'_node9'</span>, <span class="hljs-number">-1000</span>, <span class="hljs-number">-1200</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>              _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">9</span>)<br>_node10 = Node(<span class="hljs-string">'_node10'</span>, <span class="hljs-number">-1800</span>, <span class="hljs-number">-2000</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>               _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">10</span>)<br>_node11 = Node(<span class="hljs-string">'_node11'</span>, <span class="hljs-number">-2000</span>, <span class="hljs-number">1800</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>               _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">11</span>)<br>_node12 = Node(<span class="hljs-string">'_node12'</span>, <span class="hljs-number">1500</span>, <span class="hljs-number">-2000</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>               _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">12</span>)<br>_node13 = Node(<span class="hljs-string">'_node13'</span>, <span class="hljs-number">500</span>, <span class="hljs-number">-500</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>               _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">13</span>)<br>_node14 = Node(<span class="hljs-string">'_node14'</span>, <span class="hljs-number">1200</span>, <span class="hljs-number">-1200</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>               _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">14</span>)<br>_node15 = Node(<span class="hljs-string">'_node15'</span>, <span class="hljs-number">2000</span>, <span class="hljs-number">-2500</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>               _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">15</span>)<br>_node16 = Node(<span class="hljs-string">'_node16'</span>, <span class="hljs-number">-2500</span>, <span class="hljs-number">-2000</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>               _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">16</span>)<br>_node17 = Node(<span class="hljs-string">'_node17'</span>, <span class="hljs-number">2500</span>, <span class="hljs-number">1000</span>, nodeNum, _payload,  _bandW, _c, _pi, _beta, _whiteNoise, _dutyCycle, _batteryE,<br>               _dataGen, _cycleT, _transRadioE, _recvRadioE, _spareRadioE, _offRadioE, _onMcuE, _offMcuE, index=<span class="hljs-number">17</span>)<br><br><br><span class="hljs-comment"># 先求所有的边权（取所有sf，tp，cr选择中代价最小的）存储，再用MST连线（每次连线需根据isGateway确定代价是否叠加）划分集合，直到原本集合为空</span><br>indexes= [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nodeNum)]<br><span class="hljs-comment"># print(indexes)</span><br>nodes = [_node0, _node1, _node2, _node3, _node4, _node5, _node6, _node7, _node8, _node9, _node10, _node11, _node12,<br>         _node13, _node14, _node15, _node16, _node17]<br><span class="hljs-comment"># 初始化代价矩阵</span><br>costMatrix = [[<span class="hljs-number">0.0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nodeNum)] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> range(nodeNum)]<br><span class="hljs-comment"># 注意python中不可用 energyEffiMatrix = costMatrix形式给矩阵赋值</span><br><span class="hljs-comment"># 否则energyEffiMatrix的值会随costMatrix的变化而变化</span><br><br>energyEffiMatrix = [[<span class="hljs-number">0.0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nodeNum)] <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> range(nodeNum)]<br><br><br><span class="hljs-comment"># 计算每条边的代价，存入代价矩阵（不过记得后面MST时代价会根据是否relay确定是否进行叠加）</span><br><span class="hljs-comment"># 求每条边的代价实际上是先做预处理求最小代价，即遍历了可选的sf、tp、cr、</span><br><span class="hljs-comment"># 需要考虑sf和ch相同导致的重叠,暂未添加</span><br><span class="hljs-comment"># zip的使用</span><br><span class="hljs-keyword">for</span> rowIndex, node <span class="hljs-keyword">in</span> zip(indexes, nodes):<br>    <span class="hljs-keyword">for</span> colIndex, coloum <span class="hljs-keyword">in</span> zip(indexes, nodes):<br>        <span class="hljs-keyword">if</span> node <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> coloum:<br>            <span class="hljs-comment"># 针对某一条边求cheapest代价</span><br>            maxEE = <span class="hljs-number">0</span><br>            setSpreadFactor = <span class="hljs-number">7</span><br>            setTransPower = <span class="hljs-number">13</span><br>            setChannel = <span class="hljs-number">1</span><br>            setCodingRate =<span class="hljs-number">5</span><br>            <span class="hljs-keyword">for</span> sf <span class="hljs-keyword">in</span> sfRange:<br>                <span class="hljs-keyword">for</span> tp <span class="hljs-keyword">in</span> tpRange:<br>                    <span class="hljs-keyword">for</span> ch <span class="hljs-keyword">in</span> chRange:<br>                        <span class="hljs-keyword">for</span> cr <span class="hljs-keyword">in</span> crRange:<br>                            node.spreadFactor[coloum.index] = sf<br>                            node.transPower[coloum.index] = tp<br>                            node.channel[coloum.index] = ch<br>                            node.codingRate[coloum.index] = cr<br>                            tempEE = node.energyEffi(coloum)<br>                            <span class="hljs-keyword">if</span>(maxEE &lt; tempEE):<br>                                maxEE = tempEE<br>                                setSpreadFactor = sf<br>                                setTransPower = tp<br>                                setChannel = ch<br>                                setCodingRate = cr<br>            node.spreadFactor[coloum.index] = setSpreadFactor<br>            node.transPower[coloum.index] = setTransPower<br>            node.channel[coloum.index] = setChannel<br>            node.codingRate[coloum.index] = setCodingRate<br>            costMatrix[rowIndex][colIndex] = maxEE<br>        <span class="hljs-keyword">else</span>:<br>            costMatrix[rowIndex][colIndex] = <span class="hljs-number">0.1</span><br><br><span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> range(nodeNum):<br>    <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> range(nodeNum):<br>        energyEffiMatrix[row][col] = costMatrix[row][col]<br><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    print(costMatrix[n])<br><br><br><span class="hljs-comment"># 代价是能量效率的倒数</span><br><span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> range(nodeNum):<br>    <span class="hljs-keyword">for</span> col <span class="hljs-keyword">in</span> range(nodeNum):<br>        costMatrix[row][col] = <span class="hljs-number">1</span> / costMatrix[row][col]<br><br>print(<span class="hljs-string">'cost statistic:'</span>)<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    print(costMatrix[n])<br><span class="hljs-comment"># print(_node1.spreadFactor)</span><br><span class="hljs-comment"># print(_node1.transPower)</span><br><span class="hljs-comment"># print(_node1.channel)</span><br><span class="hljs-comment"># print(_node1.codingRate)</span><br><span class="hljs-comment"># 此部分仍有问题，需核对pdr和代价（能量效率EE）计算中各个参数对energy efficiency的影响</span><br><br>toWhichIndexes= [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(nodeNum)]<br><span class="hljs-comment"># u集合中的节点数</span><br>uNodeNum = <span class="hljs-number">1</span><br><span class="hljs-keyword">while</span>(uNodeNum != nodeNum):<br>    minCost = <span class="hljs-number">9999</span><br>    addRelay = nodes[<span class="hljs-number">0</span>]<br>    ifRelay = <span class="hljs-literal">False</span><br>    nodeToUSet = nodes[<span class="hljs-number">0</span>]<br>    backTrack = nodes[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">for</span> nodeIndex <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>        <span class="hljs-comment"># minCost = 9999</span><br>        <span class="hljs-comment"># toWhichIndex为当前查看的v集合中的节点的index，可通过nodes列表反索引到相应的node</span><br>        <span class="hljs-comment"># thisLineCost为单条边的cost，我们需要的是实际的cost（即带relay）</span><br>        <span class="hljs-comment"># relay是在MST的过程中产生的</span><br>        <span class="hljs-comment"># 网关初始应在u集合，对应的whichSet=1</span><br><br>        <span class="hljs-comment"># addRelay = nodes[0]</span><br>        <span class="hljs-comment"># ifRelay = False</span><br>        <span class="hljs-comment"># nodeToUSet = nodes[0]</span><br>        <span class="hljs-keyword">for</span> toWhichIndex, thisLineCost <span class="hljs-keyword">in</span> zip(toWhichIndexes, costMatrix[nodeIndex]):<br>            <span class="hljs-comment"># 一个节点属于u集合，一个节点属于v集合，才进行处理，否则不符合MST要求，进行下轮循环</span><br>            <span class="hljs-comment"># addRelay = nodes[0]</span><br>            <span class="hljs-comment"># ifRelay = False</span><br>            <span class="hljs-comment"># nodeToUSet = nodes[0]</span><br>            <span class="hljs-keyword">if</span> (nodes[nodeIndex].whichSet == <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> nodes[toWhichIndex].whichSet == <span class="hljs-number">0</span>):<br>            <span class="hljs-comment"># if ((nodes[nodeIndex].whichSet == 1 and nodes[toWhichIndex].whichSet == 0) or</span><br>            <span class="hljs-comment">#         (nodes[nodeIndex].whichSet == 0 and nodes[toWhichIndex].whichSet == 1)):</span><br>                <span class="hljs-comment"># 其中有一个是网关的话，说明与网关直接相连，thisLineCost即为realCost</span><br>                <span class="hljs-keyword">if</span> (nodes[nodeIndex].isGateway == <span class="hljs-number">1</span> <span class="hljs-keyword">or</span> nodes[toWhichIndex].isGateway == <span class="hljs-number">1</span>):<br>                    realCost = thisLineCost<br>                    <span class="hljs-keyword">if</span> realCost &lt; minCost:<br>                        print(<span class="hljs-string">'node:'</span>, nodes[nodeIndex].name, <span class="hljs-string">' nodeTo:'</span>, nodes[toWhichIndex].name)<br>                        backTrack = nodes[nodeIndex]<br>                        ifRelay = <span class="hljs-literal">False</span><br>                        minCost = realCost<br>                        nodeToUSet = nodes[toWhichIndex]<br><br>                <span class="hljs-comment"># 所检索的边不是与网关直接相连，需要中继</span><br>                <span class="hljs-keyword">else</span>:<br>                    <span class="hljs-comment"># print(nodes[nodeIndex].name, nodes[toWhichIndex].name, thisLineCost, costMatrix[toWhichIndex][0], minCost)</span><br>                    <span class="hljs-comment"># 需要中继的，先把代价求倒数转换成EE，两段EE相加之后再求倒数得到整段的代价</span><br>                    <span class="hljs-comment"># [0]代表中继节点到网关的代价，因为网关为矩阵的第一列</span><br><br>                    <span class="hljs-comment"># cost计算方式1</span><br>                    <span class="hljs-comment"># realCost = thisLineCost + costMatrix[nodeIndex][0]</span><br><br>                    <span class="hljs-comment"># cost计算方式2，见NodeClass中EE计算函数注释</span><br>                    <span class="hljs-comment"># 这里energyEffiiRelay的实现实际应该是有递归，比如如果有两次relay，则</span><br>                    <span class="hljs-comment"># payload * pdr1 * pdr2 * pdr3 / (energyInTime1 + energyInTime2 + energyInTime3)，怎么实现?</span><br>                    <span class="hljs-comment"># 分别实现一个pdr的递归和一个energyInTime的递归</span><br>                    energyEffiRelay = nodes[toWhichIndex].payload * nodes[toWhichIndex].selfToNodePdr(nodes[nodeIndex]) * nodes[nodeIndex].relayPdr() / (nodes[toWhichIndex].energyIntime(nodes[nodeIndex]) + nodes[nodeIndex].relayEnergyInTime())<br>                    realCost = <span class="hljs-number">1</span> / energyEffiRelay<br>                    <span class="hljs-keyword">if</span> realCost &lt; minCost:<br>                        <span class="hljs-comment"># 如果12-0代价大于12-14-0，修改cost矩阵，将costMatrix[12][0]修改为12-14-0（经14中继）的代价</span><br>                        costMatrix[toWhichIndex][<span class="hljs-number">0</span>] = realCost<br>                        <span class="hljs-comment"># print(minCost)</span><br>                        print(<span class="hljs-string">'node:'</span>, nodes[nodeIndex].name, <span class="hljs-string">' nodeTo:'</span>, nodes[toWhichIndex].name)<br>                        print(<span class="hljs-number">1</span> / thisLineCost)<br>                        print(<span class="hljs-number">1</span> / costMatrix[nodeIndex][<span class="hljs-number">0</span>])<br>                        print(realCost)<br>                        backTrack = nodes[nodeIndex]<br>                        addRelay = nodes[toWhichIndex]  <span class="hljs-comment"># node类型</span><br>                        ifRelay = <span class="hljs-literal">True</span><br>                        minCost = realCost<br>                        nodeToUSet = nodes[toWhichIndex]<br><br>        <span class="hljs-comment"># 如果有中继的拓扑选择，为中继点修改relayNum, relayFrom信息</span><br>    <span class="hljs-keyword">if</span> (ifRelay == <span class="hljs-literal">True</span> <span class="hljs-keyword">and</span> addRelay):<br>        <span class="hljs-comment"># addRelay.relayNum += 1</span><br>        <span class="hljs-comment"># addRelay.relayFrom.append(backTrack.name)</span><br>        backTrack.relayNum += <span class="hljs-number">1</span><br>        backTrack.relayFrom.append(addRelay.name)<br>                <span class="hljs-comment"># 把新选择的节点添加到U集合</span><br>    nodeToUSet.whichSet = <span class="hljs-number">1</span><br>                <span class="hljs-comment"># 注意生成树的方向</span><br>                <span class="hljs-comment"># 到最后应该_node0(网关)的sendTo没什么用</span><br>    nodeToUSet.sendTo = backTrack<br>    uNodeNum += <span class="hljs-number">1</span><br>    print(<span class="hljs-string">'one loop.'</span>)<br><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    print(energyEffiMatrix[n])<br>    print(costMatrix[n])<br><br><span class="hljs-comment"># 测试结果</span><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    print(costMatrix[n])<br><br><span class="hljs-comment"># 检查拓扑</span><br>print(<span class="hljs-string">'Topo statistic:'</span>)<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    print(nodes[n].name + <span class="hljs-string">' send to '</span> + nodes[n].sendTo.name)<br><br><br>print(<span class="hljs-string">'nodes belong to which set:'</span>)<br><span class="hljs-comment"># 检查集合</span><br>setList = []<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    <span class="hljs-comment"># print(nodes[n].whichSet)</span><br>    setList.append(nodes[n].whichSet)<br>print(setList)<br><br><span class="hljs-comment"># 检查每个节点的relayNum</span><br><span class="hljs-comment"># relayNum技术规则还有问题</span><br>print(<span class="hljs-string">' relay number statistic: '</span>)<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    print(nodes[n].name + <span class="hljs-string">' relay number: '</span> + str(nodes[n].relayNum))<br><br>print(<span class="hljs-string">'params choise:'</span>)<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    <span class="hljs-comment"># 现有结果表明优先增大tp，增到最大才开始增加sf，即增大sf带来的代价远超增大tp</span><br>    print(nodes[n].name + <span class="hljs-string">' sf: '</span> + str(nodes[n].spreadFactor) + <span class="hljs-string">' tp:'</span> + str(nodes[n].transPower) + <span class="hljs-string">' cr:'</span> + str(nodes[n].codingRate))<br><br>print(<span class="hljs-string">'relay:'</span>)<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    print(nodes[n].name , <span class="hljs-string">'relay:'</span>, nodes[n].relayFrom)<br><br><span class="hljs-comment"># 检查EE</span><br>print(<span class="hljs-string">'EE origin:'</span>)<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>, nodeNum):<br>    print(nodes[n].name, <span class="hljs-string">' EE origin:'</span>, energyEffiMatrix[n][<span class="hljs-number">0</span>])<br>print(<span class="hljs-string">'EE final:'</span>)<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">1</span>, nodeNum):<br>    print(nodes[n].name, <span class="hljs-string">' EE final:'</span>, <span class="hljs-number">1</span> / costMatrix[n][<span class="hljs-number">0</span>])<br><br><br><span class="hljs-comment"># 绘图</span><br>plt.subplot(<span class="hljs-number">121</span>)<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    thisNodeLoc = [nodes[n].locX, nodes[n].locY]<br>    sendToNodeLoc = [nodes[n].sendTo.locX, nodes[n].sendTo.locY]<br>    plt.scatter(thisNodeLoc[<span class="hljs-number">0</span>], thisNodeLoc[<span class="hljs-number">1</span>], s=<span class="hljs-number">10</span>, color=<span class="hljs-string">'b'</span>)<br>    plt.plot([thisNodeLoc[<span class="hljs-number">0</span>], sendToNodeLoc[<span class="hljs-number">0</span>]], [thisNodeLoc[<span class="hljs-number">1</span>], sendToNodeLoc[<span class="hljs-number">1</span>]])<br>    plt.annotate(thisNodeLoc, xy=(thisNodeLoc[<span class="hljs-number">0</span>], thisNodeLoc[<span class="hljs-number">1</span>]), xytext=(thisNodeLoc[<span class="hljs-number">0</span>]+<span class="hljs-number">1</span>, thisNodeLoc[<span class="hljs-number">1</span>]+<span class="hljs-number">1</span>))<br>plt.xlim(<span class="hljs-number">-2800</span>,<span class="hljs-number">2800</span>)<br>plt.ylim(<span class="hljs-number">-2800</span>,<span class="hljs-number">2800</span>)<br><br><br><span class="hljs-comment"># 绘EE柱状图</span><br><span class="hljs-comment"># subplot绘制子图</span><br>plt.subplot(<span class="hljs-number">122</span>)<br>nodeNameList = []<br>nodeEEOriginList = []<br>nodeEEFinalList = []<br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> range(<span class="hljs-number">0</span>, nodeNum):<br>    nodeNameList.append(str(n))<br>    nodeEEOriginList.append(energyEffiMatrix[n][<span class="hljs-number">0</span>])<br>    nodeEEFinalList.append(<span class="hljs-number">1</span> / costMatrix[n][<span class="hljs-number">0</span>])<br>total_width, n = <span class="hljs-number">0.8</span>, <span class="hljs-number">2</span><br>width = total_width / n<br>plt.bar(indexes, nodeEEOriginList, width=width, label=<span class="hljs-string">'1'</span>, fc=<span class="hljs-string">'b'</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(indexes)):<br>    indexes[i] += width<br>plt.bar(indexes, nodeEEFinalList, width=width, label=<span class="hljs-string">'2'</span>, tick_label=nodeNameList, fc=<span class="hljs-string">'g'</span>)<br>plt.legend()<br><br><br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="/2020/07/20/Python实现Lora节点拓扑自动规划/pyplot.png" alt="pyplot"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;NodeClass-py&quot;&gt;&lt;a href=&quot;#NodeClass-py&quot; class=&quot;headerlink&quot; title=&quot;NodeClass.py:&quot;&gt;&lt;/a&gt;NodeClass.py:&lt;/h3&gt;&lt;figure class=&quot;highlight python
      
    
    </summary>
    
    
      <category term="Python" scheme="https://chasencenge.github.io/categories/Python/"/>
    
      <category term="Lora" scheme="https://chasencenge.github.io/categories/Python/Lora/"/>
    
    
      <category term="Python" scheme="https://chasencenge.github.io/tags/Python/"/>
    
      <category term="Lora" scheme="https://chasencenge.github.io/tags/Lora/"/>
    
  </entry>
  
  <entry>
    <title>hexo更换flex-block主题</title>
    <link href="https://chasencenge.github.io/2020/07/17/hexo%E6%9B%B4%E6%8D%A2flex-block%E4%B8%BB%E9%A2%98/"/>
    <id>https://chasencenge.github.io/2020/07/17/hexo更换flex-block主题/</id>
    <published>2020-07-17T03:00:22.000Z</published>
    <updated>2020-08-02T15:54:20.119Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><p>hexo/_config.yml文件中：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">theme: flex-block<br></code></pre></td></tr></table></figure><p>为了能够正常显示图片，在hexo/_config.yml：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json"># Writing<br>post_asset_folder: true<br></code></pre></td></tr></table></figure><p>这样每次创建新文件时会生成一个asset文件夹，用到的图片素材均放在此同名文件夹中进行调用</p><p>还需安装相应插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install https://github.com/CodeFalling/hexo-asset-image --save<br></code></pre></td></tr></table></figure><p>在相应的.md文件中调用图片资源时，<strong>切记！！！！</strong>💊💊💊</p><p>调用图片资源的路径直接写图片文件名，默认路径已经切到相应同名文件夹下，不可使用绝对路径名！！！！</p><h4 id="修改新建文件时给出的默认Front-Matter"><a href="#修改新建文件时给出的默认Front-Matter" class="headerlink" title="修改新建文件时给出的默认Front-Matter"></a>修改新建文件时给出的默认Front-Matter</h4><p><a href="https://hexo.io/zh-cn/docs/front-matter" target="_blank" rel="noopener">Front-Matter说明</a></p><p>修改hexo/scaffolds下的：</p><p>draft.md, page.md, post.md</p><p>修改方式见：<a href="https://github.com/miiiku/flex-block" target="_blank" rel="noopener">https://github.com/miiiku/flex-block</a></p><h4 id="添加代码高亮"><a href="#添加代码高亮" class="headerlink" title="添加代码高亮"></a>添加代码高亮</h4><p><a href="https://highlightjs.org/" target="_blank" rel="noopener">https://highlightjs.org/</a></p><p>下载依赖：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install highlight.js<br></code></pre></td></tr></table></figure><p>hexo/_config.yml:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json">highlight:<br>  enable: true<br>  line_number: true<br>  auto_detect: false<br>  tab_replace:<br>  hljs: true<br>  # theme: railscasts<br>  theme: pojoaque<br></code></pre></td></tr></table></figure><h4 id="添加社交平台链接"><a href="#添加社交平台链接" class="headerlink" title="添加社交平台链接"></a>添加社交平台链接</h4><p>hexo/themes/flex-block/_config.yml:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs json">social_icon:<br>  header_enable: true<br>  footer_enable: true<br>  icons:<br>    - &#123; type: email,      value: 958198376@qq.com&#125;<br>    - &#123; type: github,     value: https://github.com/CHAsencenge&#125;<br>    - &#123; type: google+,    value: &#125;<br>    - &#123; type: ins,        value: &#125;<br>    - &#123; type: twitter,    value: &#125;<br>    - &#123; type: youtube,    value: &#125;<br>    - &#123; type: weibo,      value: https://weibo.com/u/5701921017&#125;<br>    - &#123; type: cloudmusic, value: https://music.163.com/#/user/home?id=92407481&#125;<br>    - &#123; type: zhihu,      value: &#125;<br></code></pre></td></tr></table></figure><h4 id="修改主页标签显示（英文-gt-中文）"><a href="#修改主页标签显示（英文-gt-中文）" class="headerlink" title="修改主页标签显示（英文-&gt;中文）"></a>修改主页标签显示（英文-&gt;中文）</h4><p>hexo/themes/flex-block/_config.yml:</p><p>修改其中的<code>menu:</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json">menu:<br>  主页: /<br>  关于: /about<br>  友链: /links<br>  标签: /tags<br>  分类: /categories<br></code></pre></td></tr></table></figure><h4 id="添加友链页面并顺手放些要用的图片资源"><a href="#添加友链页面并顺手放些要用的图片资源" class="headerlink" title="添加友链页面并顺手放些要用的图片资源"></a>添加友链页面并顺手放些要用的图片资源</h4><p>添加友链页面：(顺口一提，hexo new page 会生成与_post同级的文件夹)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page links<br></code></pre></td></tr></table></figure><p>在links/index.md中修改Front-matter，添加：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">type: links<br></code></pre></td></tr></table></figure><p>确认hexo/themes/flex-block/_config.yml中是否有(左侧为标签显示，不重要，重要的是是否写了右侧的/links目录)：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">links: /links<br></code></pre></td></tr></table></figure><h4 id="存放友链数据"><a href="#存放友链数据" class="headerlink" title="存放友链数据"></a>存放友链数据</h4><p>在source目录下(与_post同级) ， 创建:</p><p>_data文件夹</p><p>在source/_data下新建links.yml</p><p>一行一条友链数据，格式如下(现在links文件夹下创建Asset文件夹，存放相应的图片资源，并push到仓库，因为cover参数需要url，不能是本地路径，所以将资源推到仓库同时从仓库的对应url取图片资源作为cover)：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs json">- &#123; "name" : "tianzixiao", "describe" : "测试", "link" : "Asset/tianzixiao.png", "cover" : "https://chasencenge.github.io/links/Asset/tianzixiao.png" &#125;<br>- &#123; "name" : "cover1", "describe" : "测试", "link" : "Asset/cover1.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover1.jpg" &#125;<br>- &#123; "name" : "cover2", "describe" : "测试", "link" : "Asset/cover2.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover2.jpg" &#125;<br>- &#123; "name" : "cover3", "describe" : "测试", "link" : "Asset/cover3.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover3.jpg" &#125;<br>- &#123; "name" : "cover4", "describe" : "测试", "link" : "Asset/cover4.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover4.jpg" &#125;<br>- &#123; "name" : "cover5", "describe" : "测试", "link" : "Asset/cover5.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover5.jpg" &#125;<br>- &#123; "name" : "cover6", "describe" : "测试", "link" : "Asset/cover6.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover6.jpg" &#125;<br>- &#123; "name" : "cover7", "describe" : "测试", "link" : "Asset/cover7.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover7.jpg" &#125;<br>- &#123; "name" : "cover8", "describe" : "测试", "link" : "Asset/cover8.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover8.jpg" &#125;<br>- &#123; "name" : "cover9", "describe" : "测试", "link" : "Asset/cover9.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover9.jpg" &#125;<br>- &#123; "name" : "cover10", "describe" : "测试", "link" : "Asset/cover10.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover10.jpg" &#125;<br>- &#123; "name" : "cover11", "describe" : "测试", "link" : "Asset/cover11.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover11.jpg" &#125;<br>- &#123; "name" : "cover12", "describe" : "测试", "link" : "Asset/cover12.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover12.jpg" &#125;<br>- &#123; "name" : "cover13", "describe" : "测试", "link" : "Asset/cover13.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover13.jpg" &#125;<br>- &#123; "name" : "cover14", "describe" : "测试", "link" : "Asset/cover14.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover14.jpg" &#125;<br>- &#123; "name" : "cover15", "describe" : "测试", "link" : "Asset/cover15.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover15.jpg" &#125;<br>- &#123; "name" : "cover16", "describe" : "测试", "link" : "Asset/cover16.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover16.jpg" &#125;<br>- &#123; "name" : "cover17", "describe" : "测试", "link" : "Asset/cover17.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover17.jpg" &#125;<br>- &#123; "name" : "cover18", "describe" : "测试", "link" : "Asset/cover18.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover18.jpg" &#125;<br>- &#123; "name" : "cover19", "describe" : "测试", "link" : "Asset/cover19.jpg", "cover" : "https://chasencenge.github.io/links/Asset/cover19.jpg" &#125;<br></code></pre></td></tr></table></figure><h4 id="修改主页banner"><a href="#修改主页banner" class="headerlink" title="修改主页banner"></a>修改主页banner</h4><p>hexo/themes/flex-block/_config.yml:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">banner: https://chasencenge.github.io/links/Asset/cover19.jpg<br></code></pre></td></tr></table></figure><h4 id="关于card无法显示cover图片的问题"><a href="#关于card无法显示cover图片的问题" class="headerlink" title="关于card无法显示cover图片的问题"></a>关于card无法显示cover图片的问题</h4><p>在主页按F12查看页面bug，发现无法找到cover.jpg，对比其他文章页面，无error，说明主页card的图片寻径和文章页的cover寻径不同</p><p>在F12调试工具中-&gt;Application，对比主页和文章页查看，发现各自的image加载是在各自的index.html同级目录下，故将用到的所有文件资源复制到hexo/public目录下，但是此目录仅支持主页正常显示，翻页时会进入page2，page3等等，所以将所用到的card资源同样放置在hexo/public/page/2、hexo/public/page/3等目录下</p><p><img src="/2020/07/17/hexo更换flex-block主题/homeImageSave.png" alt="homeImageSave"></p><p>btw，为了保证主页card显示的图片不冲突，以上目录下的图片不可重名，又由于以上目录的图片名需与hexo/source/_post中的每一篇的cover同名，故每个文章的asset-folder中的cover命名不要重名，文章front-matter同理</p><h6 id="asset-folder的cover命名："><a href="#asset-folder的cover命名：" class="headerlink" title="asset-folder的cover命名："></a>asset-folder的cover命名：</h6><p><img src="/2020/07/17/hexo更换flex-block主题/postFolderImageName.png" alt="postFolderImageName"></p><h6 id="front-matter的cover命名保证与asset-folder一致，并与hexo-public中的资源名称一致："><a href="#front-matter的cover命名保证与asset-folder一致，并与hexo-public中的资源名称一致：" class="headerlink" title="front-matter的cover命名保证与asset-folder一致，并与hexo/public中的资源名称一致："></a>front-matter的cover命名保证与asset-folder一致，并与hexo/public中的资源名称一致：</h6><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">cover: cover22.jpg<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;基础配置&quot;&gt;&lt;a href=&quot;#基础配置&quot; class=&quot;headerlink&quot; title=&quot;基础配置&quot;&gt;&lt;/a&gt;基础配置&lt;/h4&gt;&lt;p&gt;hexo/_config.yml文件中：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://chasencenge.github.io/categories/Hexo/"/>
    
      <category term="Environment" scheme="https://chasencenge.github.io/categories/Hexo/Environment/"/>
    
    
      <category term="Hexo" scheme="https://chasencenge.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Laya Basketball小游戏踩坑历程</title>
    <link href="https://chasencenge.github.io/2020/07/17/Laya-Basketball%E5%B0%8F%E6%B8%B8%E6%88%8F%E8%B8%A9%E5%9D%91%E5%8E%86%E7%A8%8B/"/>
    <id>https://chasencenge.github.io/2020/07/17/Laya-Basketball小游戏踩坑历程/</id>
    <published>2020-07-17T01:39:43.000Z</published>
    <updated>2020-07-24T09:06:45.280Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Laya3D小项目中的踩坑历程</blockquote><a id="more"></a><h4 id="lh-or-ls"><a href="#lh-or-ls" class="headerlink" title=".lh or .ls"></a>.lh or .ls</h4><p>测试Unity导出的Scene（仅包含3D球架）在导入Laya后的显示，发现若导出.lh文件，在Laya创建的Scene中挂载脚本运行时会报“cannot read ‘_addCamera’ of undefined”错误，解决此问题时选择重新导出.ls文件</p><p>相应脚本：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; ui &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">"./../ui/layaMaxUI"</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">class</span> SmallScene <span class="hljs-keyword">extends</span> Laya.Script &#123;    <br>    <span class="hljs-keyword">constructor</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-keyword">super</span>(); &#125;<br>    <br>    onEnable(): <span class="hljs-built_in">void</span> &#123;<br>        Laya3D.init(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>        Laya.Stat.show();<br>        Laya.stage.scaleMode = Laya.Stage.SCALE_FULL;<br>        Laya.stage.screenMode = Laya.Stage.SCREEN_NONE;<br>        Laya.Scene3D.load(<span class="hljs-string">"res/Loading/LayaScene_SmallScene/Conventional/SmallScene.ls"</span>, Laya.Handler.create(<span class="hljs-literal">null</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">scene:Laya.Scene3D</span>):<span class="hljs-title">void</span> </span>&#123;<br>            Laya.stage.addChild(scene) <span class="hljs-keyword">as</span> Laya.Scene3D;<br>        &#125;));<br>    &#125;<br><br>    onDisable(): <span class="hljs-built_in">void</span> &#123;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">new</span> SmallScene;<br></code></pre></td></tr></table></figure><h5 id="导出文件说明："><a href="#导出文件说明：" class="headerlink" title="导出文件说明："></a>导出文件说明：</h5><p>ls     —   场景文件： Json文件，包含场景中所有节点的数据信息，包含光照贴图信息<br>lh    —   层级文件： Json文件，包含场景中所有节点的数据信息，不包含光照贴图信息<br>lt     —   地形文件： Json文件，包含地形中的数据信息<br>lm    —   网格文件： 二进制文件，包含模型所有顶点的数据信息<br>lmat  —   材质文件： Json文件，包含光照，贴图，渲染模式等基本材质信息<br>lsani  —   蒙皮动画文件：二进制文件，包含骨骼动画帧率信息<br>lrani  —   刚体动画文件：二进制文件，包含刚体动画帧率信息<br>lav    —   新版动画节点文件：Json文件，只包含Animator组件下节点的数据信息<br>lani   —   新版动画文件：二进制文件，包含Animator动画帧率信息</p><h4 id="Mesh-Collider-和-Box-Collider的选择："><a href="#Mesh-Collider-和-Box-Collider的选择：" class="headerlink" title="Mesh Collider 和 Box Collider的选择："></a>Mesh Collider 和 Box Collider的选择：</h4><p>篮筐处有两个Trigger，一个在篮筐一个在篮网，篮筐环附近用Box Collider（元碰撞器），篮网用Mesh Collider（网格），后者渲染时消耗资源比前者大很多</p><h4 id="如何进一步操作导入的Scene中的子对象？"><a href="#如何进一步操作导入的Scene中的子对象？" class="headerlink" title="如何进一步操作导入的Scene中的子对象？"></a>如何进一步操作导入的Scene中的子对象？</h4><p><a href="http://layaair2.ldc2.layabox.com/api/?category=Core&class=laya.display.Node#numChildren" target="_blank" rel="noopener">laya.display.Node</a></p><p>测试时在Laya.Scene3D.load的call中添加：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-built_in">console</span>.log(<span class="hljs-string">"scene.numChildren:"</span>, scene.numChildren);<br></code></pre></td></tr></table></figure><p>可在运行时查看scene中的子对象个数</p><p>其他类似操作代码如下：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs typescript">Laya.Scene3D.load(<span class="hljs-string">"res/Loading/LayaScene_SmallScene/Conventional/SmallScene.ls"</span>, Laya.Handler.create(<span class="hljs-literal">null</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">scene:Laya.Scene3D</span>):<span class="hljs-title">void</span> </span>&#123;<br>            <span class="hljs-comment">//myScene = scene;</span><br>            Laya.stage.addChild(scene) <span class="hljs-keyword">as</span> Laya.Scene3D;<br>            <span class="hljs-comment">//var camera = new Laya.Camera(0, 3, 10);</span><br>            <span class="hljs-comment">//scene.addChild(camera);</span><br>            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"scene.numChildren:"</span>, scene.numChildren);<br>            <span class="hljs-keyword">let</span> sprite:Laya.Sprite3D = <span class="hljs-keyword">new</span> Laya.Sprite3D();<br>            scene.addChildAt(sprite, <span class="hljs-number">5</span>);<br>            <span class="hljs-built_in">console</span>.log(scene.getChildAt(<span class="hljs-number">3</span>).name);<br>            <span class="hljs-built_in">console</span>.log(scene.getChildAt(<span class="hljs-number">4</span>).name);<br>            <span class="hljs-built_in">console</span>.log(scene.getChildAt(<span class="hljs-number">5</span>).name);<br>        &#125;));<br></code></pre></td></tr></table></figure><p><img src="/2020/07/17/Laya-Basketball小游戏踩坑历程/getChildName.png" alt="getChildName"></p><h4 id="关于Laya-Handler-create"><a href="#关于Laya-Handler-create" class="headerlink" title="关于Laya.Handler.create"></a>关于Laya.Handler.create</h4><p>Handler是事件处理器类</p><p><a href="http://layaair2.ldc2.layabox.com/api/?category=Core&class=laya.utils.Handler#caller" target="_blank" rel="noopener">laya.utils.Handler</a></p><p>create(caller:*, method:Fuction, args:Array = null, once:Boolean = true): Handler</p><p>caller:*  -执行域(this)</p><p>method:Function   -回调方法</p><p>args:Array   -携带的参数</p><p>once:Boolean   -是否只执行一次，默认为true</p><p>注意once后或者Handler.recover()后不要再使用此对象</p><h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><p>GolbalDataScene -&gt; StartScene -&gt; LoadingScene -&gt; GameScene</p><p>GolbalDataScene/GameStaticController/ConfigController中控制加载Assets/Resources/Config中的BallsData和StageData</p><h4 id="一些说明"><a href="#一些说明" class="headerlink" title="一些说明"></a>一些说明</h4><p>每个Scene中的UIController是用相同的BSK Manager脚本，即，所有场景能用到的UI相关的管理控制都放在这个脚本，其他通用的Cotorller也如此</p><p>reset球的函数在BSKGameController -&gt; resetBalls，设置了篮球的初始化位置，Rotation，layer，放到balls列表（但是没有设置其物理属性如重力、碰撞）</p><p>给篮球（balls）获取BSKBall组件、添加刚体、并且siKinematic = true使物理影响刚体在BSKShooter中的Update函数中（Update每一帧都调用）</p><p>在Laya中创建的对应脚本的类型的选择要考虑Unity中对应脚本是否有Update等逐帧刷新的功能</p><p>对Unity中具有Update等逐帧刷新的Component（Monobehavior），在Laya中创建对应脚本所选类型要考虑是否有相同逐帧刷新的内置函数</p><p>BSKBall -&gt; Start函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c#">gameObject.GetComponent&lt;Renderer&gt;().material = BSKGameConfig.s_Instance.GetBallMaterial();<br></code></pre></td></tr></table></figure><p>篮球资源是如何加载进去的：在BSKGameController声明一个GameObject对象-BallPrefab，然后在Unity的Inspector中可以直接选取需要的“lanqiu”资源</p><p>将Unity中的Scene导入Laya时，games_bg不能导入，因为不支持Sprite Renderer </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Laya3D小项目中的踩坑历程&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Laya" scheme="https://chasencenge.github.io/categories/Laya/"/>
    
    
      <category term="Laya" scheme="https://chasencenge.github.io/tags/Laya/"/>
    
      <category term="TypeScript" scheme="https://chasencenge.github.io/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>LoRa的三种class</title>
    <link href="https://chasencenge.github.io/2020/07/14/LoRa%E7%9A%84%E4%B8%89%E7%A7%8Dclass/"/>
    <id>https://chasencenge.github.io/2020/07/14/LoRa的三种class/</id>
    <published>2020-07-14T14:30:06.000Z</published>
    <updated>2020-07-20T02:36:29.406Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">LoRa class A, class B, class C三种工作模式</blockquote><a id="more"></a><h4 id="class-A"><a href="#class-A" class="headerlink" title="class A"></a>class A</h4><p>Class A 是 LoRaWAN 强制要求所有 LoRa 终端设备必须支持的通信模式。在Class A中，终端设备只在有数据需要处理或发送的时候才从休眠模式中醒来，并且一切通信都只能由发送终端设备主动发起，网关一直处于侦听模式。当发送终端设备进行一次发送（TX）之后，会等待时间T(RX_DELAY1)之后初始化一个接收窗口RX1，若RX1内发送终端设备未收到任何数据，则会在T_(RX_DELAY2)时间后再初始化一个接收窗口RX2，继续等待接收数据，窗口关闭后则进入睡眠模式。网关可在此窗口时间内向终端设备发送数据</p><p>接收窗口RX1一般是在上行后1秒开始，接收窗口RX2是在上行后2秒开始</p><p>终端有数据了，就上报，顺便收一下服务器下发的指令。终端没数据的时候，服务器下发不了指令</p><h4 id="class-B"><a href="#class-B" class="headerlink" title="class B"></a>class B</h4><p>Class B 为需要双向交互的应用设计。在 Class A 的基础上增加了可以由网关主动唤醒发送终端设备的机制，网关每隔 T_Beacon 时间会发送一个 Beacon 来主动唤醒终端设备，在两个 Beacon 之间，终端设备的通信模式和 Class A 相同。通过 Class B 主动唤醒节点的方式，网关可以定期开启终端设备的下载和上传功能。相比 Class A，Class B 降低了数据的传输时延，但也增加了终端设备的能耗</p><p>有一个同步时隙beacon，还有一个固定周期的接收窗口ping时隙。(隔几十秒收一个数据。其他时候都在休眠)</p><p>终端和基站约定一个时间下发数据，终端和基站依靠beacon信号校对时间，确保约定的时间不会错位</p><p>ClassB的目的是使得节点具有在预定时间打开接收窗口（称之为ping slot）的能力。一个支持ClassB的网络，所有的网关都必须同步发送beacon</p><h4 id="class-C"><a href="#class-C" class="headerlink" title="class C"></a>class C</h4><p>Class C 用于时延要求高的应用，发送终端设备再发送完成之后会立即初始化接收窗口，若未收到任何数据，则会一直开启随后的RX2窗口持续侦听信道，用于接收网关返回的数据</p><p>在class A的基础上，在class A休眠期间，一直打开接收窗口RX2（几乎随时可以接收数据）</p><h4 id="Beacon"><a href="#Beacon" class="headerlink" title="Beacon"></a>Beacon</h4><p>LoRa一旦约定好了时间，基站就默认设备一定会在那个时间点接收，所以需要严格的时间同步。Beacon则是时间同步的最关键的地方</p><p>节点由ClassA切换到ClassB之前必须收到beacon，进入ClassB之后还需要周期搜索/接收beacon，从而同步时钟。Class B节点可能临时收不到beacon，此时节点要逐渐加宽beacon和ping的接收窗。如果收到beacon后2小时收不到新的beacon，节点需使用内部时钟保持同步</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;LoRa class A, class B, class C三种工作模式&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="LoRa" scheme="https://chasencenge.github.io/categories/LoRa/"/>
    
    
      <category term="LoRa" scheme="https://chasencenge.github.io/tags/LoRa/"/>
    
  </entry>
  
  <entry>
    <title>C++.h和.cpp</title>
    <link href="https://chasencenge.github.io/2020/07/13/C-h%E5%92%8C-cpp/"/>
    <id>https://chasencenge.github.io/2020/07/13/C-h和-cpp/</id>
    <published>2020-07-13T03:04:52.000Z</published>
    <updated>2020-07-20T02:27:33.402Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">C++的.h文件和.cpp文件各应该包含什么内容</blockquote><a id="more"></a><h4 id="h文件"><a href="#h文件" class="headerlink" title=".h文件"></a>.h文件</h4><p>类的声明，成员函数声明…</p><p>记得在头部添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">ifndef</span> XXXX_H <span class="hljs-comment">//这里如果头文件名为LoraNode.h, 则写为LORANODE_H</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> XXXX_H</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">pragma</span> once <span class="hljs-comment">//这个一般在创建头文件的时候会自动添加</span></span><br></code></pre></td></tr></table></figure><p>尾部添加：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">endif</span></span><br></code></pre></td></tr></table></figure><p>目的是为了防止重复编译而报错</p><h4 id="cpp文件"><a href="#cpp文件" class="headerlink" title=".cpp文件"></a>.cpp文件</h4><p>填写类成员函数的定义</p><p>首先引用头文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">"xxxx.h"</span></span><br></code></pre></td></tr></table></figure><p>注：不用再重写class Name{}，否则会报错为class重定义，直接使用::进行外部定义类成员函数即可</p><p>例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">double</span> <span class="hljs-title">LoraNode::th</span><span class="hljs-params">(si)</span></span>&#123;<br>...<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;C++的.h文件和.cpp文件各应该包含什么内容&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/categories/C/"/>
    
    
      <category term="C++" scheme="https://chasencenge.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>将Unity场景导入到LayaAir</title>
    <link href="https://chasencenge.github.io/2020/07/09/%E5%B0%86Unity%E5%9C%BA%E6%99%AF%E5%AF%BC%E5%85%A5%E5%88%B0LayaAir/"/>
    <id>https://chasencenge.github.io/2020/07/09/将Unity场景导入到LayaAir/</id>
    <published>2020-07-09T01:02:46.000Z</published>
    <updated>2020-07-20T02:40:39.069Z</updated>
    
    <content type="html"><![CDATA[<p>将U3D插件拖拽到Unity项目的Assets目录下，会自动在项目中import LayaAir3D选项</p><p>LayaAir3d-&gt;Export Tool中可以导出Unity Scene</p><p>导出到laya工程下的bin-&gt;res文件夹</p><p>LayaAir3D-&gt;Help-&gt;Tutorial可看哪些是能够兼容的</p><h4 id="骨骼动画："><a href="#骨骼动画：" class="headerlink" title="骨骼动画："></a>骨骼动画：</h4><ol><li>spine骨骼动画工具</li></ol><p>骨骼动画: 把动画打散, 通过工具，调骨骼的运动等来形成动画<br>spine是一个非常流行的2D骨骼动画制作工具<br>spine 动画美术人员导出3个文件:<br>  (1) .png文件:动画的”骨骼”的图片集;<br>  (2).atlas文件: 每个骨骼在图片集里面位置，大小;<br>  (3).json文件: 骨骼动画的anim控制文件,以及骨骼位置等信息;<br>骨骼动画导入: 直接把三个文件拷贝到项目的资源目录下即可;<br>使用骨骼动画 2种方式:<br>  (1) 直接拖动到场景;<br>  (2) 创建一个节点来添加sp.Skeleton组件;</p><h4 id="Unity的骨骼动画："><a href="#Unity的骨骼动画：" class="headerlink" title="Unity的骨骼动画："></a>Unity的骨骼动画：</h4><p>Unity导入骨骼动画时需要的源文件也是spine导出的：</p><p>.atlas   .json   .png三个文件，不过需要将.atlas重命名为.atlas.txt</p><h4 id="Laya的骨骼动画："><a href="#Laya的骨骼动画：" class="headerlink" title="Laya的骨骼动画："></a>Laya的骨骼动画：</h4><p>Laya的骨骼动画在导入的时候是直接对接Spine导出的骨骼动画格式的，即.atlas   .json   .png三个文件</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;将U3D插件拖拽到Unity项目的Assets目录下，会自动在项目中import LayaAir3D选项&lt;/p&gt;
&lt;p&gt;LayaAir3d-&amp;gt;Export Tool中可以导出Unity Scene&lt;/p&gt;
&lt;p&gt;导出到laya工程下的bin-&amp;gt;res文件夹&lt;/p
      
    
    </summary>
    
    
      <category term="Laya" scheme="https://chasencenge.github.io/categories/Laya/"/>
    
      <category term="Environment" scheme="https://chasencenge.github.io/categories/Laya/Environment/"/>
    
    
      <category term="Laya" scheme="https://chasencenge.github.io/tags/Laya/"/>
    
      <category term="Environment" scheme="https://chasencenge.github.io/tags/Environment/"/>
    
  </entry>
  
  <entry>
    <title>为Sublime添加TypeScript高亮支持</title>
    <link href="https://chasencenge.github.io/2020/07/09/%E4%B8%BASublime%E6%B7%BB%E5%8A%A0TypeScript%E9%AB%98%E4%BA%AE%E6%94%AF%E6%8C%81/"/>
    <id>https://chasencenge.github.io/2020/07/09/为Sublime添加TypeScript高亮支持/</id>
    <published>2020-07-09T00:50:23.000Z</published>
    <updated>2020-07-20T02:43:30.256Z</updated>
    
    <content type="html"><![CDATA[<h4 id="首先在cmd或者Git-CMD安装typescript编译支持："><a href="#首先在cmd或者Git-CMD安装typescript编译支持：" class="headerlink" title="首先在cmd或者Git CMD安装typescript编译支持："></a>首先在cmd或者Git CMD安装typescript编译支持：</h4><p><code>npm install -g typescript</code></p><p>若出现<code>npm ERR! code EINTEGRITY</code>报错：</p><p><code>npm cache verify</code></p><h4 id="打开sublime安装package-control："><a href="#打开sublime安装package-control：" class="headerlink" title="打开sublime安装package control："></a>打开sublime安装package control：</h4><p>在sublime中ctrl+shift+p打开命令面板</p><p>输入ip查找Package Control: Installl Package</p><h4 id="打开package-control安装TypeScript："><a href="#打开package-control安装TypeScript：" class="headerlink" title="打开package control安装TypeScript："></a>打开package control安装TypeScript：</h4><p>打开preference-&gt;package control，然后继续查找TypeScript进行安装</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;首先在cmd或者Git-CMD安装typescript编译支持：&quot;&gt;&lt;a href=&quot;#首先在cmd或者Git-CMD安装typescript编译支持：&quot; class=&quot;headerlink&quot; title=&quot;首先在cmd或者Git CMD安装typescript编
      
    
    </summary>
    
    
      <category term="Laya" scheme="https://chasencenge.github.io/categories/Laya/"/>
    
    
      <category term="Environment" scheme="https://chasencenge.github.io/tags/Environment/"/>
    
  </entry>
  
  <entry>
    <title>命局·墨敛粲星大纲</title>
    <link href="https://chasencenge.github.io/2020/07/08/%E5%91%BD%E5%B1%80%C2%B7%E5%A2%A8%E6%95%9B%E7%B2%B2%E6%98%9F%E5%A4%A7%E7%BA%B2/"/>
    <id>https://chasencenge.github.io/2020/07/08/命局·墨敛粲星大纲/</id>
    <published>2020-07-08T07:22:24.000Z</published>
    <updated>2020-07-20T02:42:24.651Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog.">    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="https://chasencenge.github.io/categories/Writing/"/>
    
    
      <category term="novel" scheme="https://chasencenge.github.io/tags/novel/"/>
    
      <category term="咸青" scheme="https://chasencenge.github.io/tags/%E5%92%B8%E9%9D%92/"/>
    
  </entry>
  
  <entry>
    <title>命局·墨敛粲星</title>
    <link href="https://chasencenge.github.io/2020/07/08/%E5%91%BD%E5%B1%80%C2%B7%E5%A2%A8%E6%95%9B%E7%B2%B2%E6%98%9F/"/>
    <id>https://chasencenge.github.io/2020/07/08/命局·墨敛粲星/</id>
    <published>2020-07-08T07:06:26.000Z</published>
    <updated>2020-07-20T02:41:21.943Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog.">    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="Writing" scheme="https://chasencenge.github.io/categories/Writing/"/>
    
    
      <category term="novel" scheme="https://chasencenge.github.io/tags/novel/"/>
    
      <category term="咸青" scheme="https://chasencenge.github.io/tags/%E5%92%B8%E9%9D%92/"/>
    
  </entry>
  
  <entry>
    <title>UnitySprite</title>
    <link href="https://chasencenge.github.io/2020/07/08/UnitySprite/"/>
    <id>https://chasencenge.github.io/2020/07/08/UnitySprite/</id>
    <published>2020-07-08T01:35:52.000Z</published>
    <updated>2020-07-20T02:39:25.922Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Sprite相关</blockquote><a id="more"></a><h4 id="Sprite-Renderer"><a href="#Sprite-Renderer" class="headerlink" title="Sprite Renderer"></a>Sprite Renderer</h4><p>Flip：勾选后图片会在X或Y轴方向上翻转</p><p>Material:材质，默认是Sprites - Default，场景中的灯光不会影响到图片，改为Default - Diffuse，灯光可以照亮图片</p><p>Draw Mode：绘图模式, 普通，拉伸，平铺</p><p>Sorting Layer：分类层，控制图片的渲染顺序，点开Sorting Layer，越靠下的越后渲染，越在最前面，挡住后面的图片</p><p>Order In Layer：在同一层中的次序，当图片在同一个层下时，设置此数值可以再次控制渲染顺序</p><p>Mask Interaction：遮罩交互</p><h4 id="打包图集"><a href="#打包图集" class="headerlink" title="打包图集"></a>打包图集</h4><p>Editor-&gt;Project Settings-&gt;Editor下面有sprite packer的模式。Disabled表示不启用它，Enabled For Builds 表示只有打包的时候才会启用它，Always Enabled 表示永远启用它。 这里的启用它就表示是否将小图自动打成图集。</p><h4 id="prefab文件"><a href="#prefab文件" class="headerlink" title=".prefab文件"></a>.prefab文件</h4><p> .prefab文件在Unity引擎中，扮演着配置文件的作用，用它将多个组件关联在了一起，组成了一个整体，默认是一个二进制文件</p><h4 id="meta文件"><a href="#meta文件" class="headerlink" title=".meta文件"></a>.meta文件</h4><p>新的资源导入Unity时，Unity会自动做下面这件事：</p><p>1.分配唯一ID</p><p>2.创建.meta文件</p><p>3.处理资源</p><p>.meta文件包含内容：</p><p>guid：分配的唯一ID存在这里</p><p>MonoImporter：它的数据是不同的ImprotSetting数据，比如Mode Improter，Audio Improter等等，对照Inspector面板就可以看懂每行数据</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Sprite相关&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Unity" scheme="https://chasencenge.github.io/categories/Unity/"/>
    
    
      <category term="Unity" scheme="https://chasencenge.github.io/tags/Unity/"/>
    
      <category term="Sprite" scheme="https://chasencenge.github.io/tags/Sprite/"/>
    
  </entry>
  
</feed>
