<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>解字</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-25T18:24:29.791Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CHAsencenge</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>push-to-git</title>
    <link href="http://yoursite.com/2019/11/20/push-to-git/"/>
    <id>http://yoursite.com/2019/11/20/push-to-git/</id>
    <published>2019-11-20T15:02:36.000Z</published>
    <updated>2019-11-25T18:24:29.791Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">push update to github repo</blockquote><h3 id="for-first-use"><a href="#for-first-use" class="headerlink" title="for first use"></a>for first use</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">```  &apos;init .git&apos;</span><br><span class="line"></span><br><span class="line">``` git status ```  [^check files to be added to the local repository]</span><br><span class="line"></span><br><span class="line">``` git add xxx ``` [^add files to repo]</span><br><span class="line"></span><br><span class="line">``` git commit -m &quot;commit description&quot; ``` [^commit to repo]</span><br><span class="line"></span><br><span class="line">``` git remote add origin git@github.com:mobinets/hyblora.git ``` [^link local repo to github]</span><br><span class="line"></span><br><span class="line">``` git pull --rebase origin master ``` [^pull = fetch + merge]</span><br><span class="line"></span><br><span class="line">``` git push -u origin master ``` [^upload]</span><br><span class="line"></span><br><span class="line">### not first use repo</span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line">git add xxx</span><br><span class="line">git commit -m &quot;commit discription&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote class=&quot;blockquote-center&quot;&gt;push update to github repo
&lt;/blockquote&gt;

&lt;h3 id=&quot;for-first-use&quot;&gt;&lt;a href=&quot;#for-first-use&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="command" scheme="http://yoursite.com/categories/command/"/>
    
    
  </entry>
  
  <entry>
    <title>双十一有一说一</title>
    <link href="http://yoursite.com/2019/11/11/%E5%8F%8C%E5%8D%81%E4%B8%80%E6%9C%89%E4%B8%80%E8%AF%B4%E4%B8%80/"/>
    <id>http://yoursite.com/2019/11/11/双十一有一说一/</id>
    <published>2019-11-11T04:16:55.000Z</published>
    <updated>2019-11-11T04:46:14.441Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>partical filter</title>
    <link href="http://yoursite.com/2019/09/23/partical-filter/"/>
    <id>http://yoursite.com/2019/09/23/partical-filter/</id>
    <published>2019-09-23T05:36:58.000Z</published>
    <updated>2019-10-23T12:36:37.284Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> scipy <span class="keyword">as</span> scipy</span><br><span class="line"><span class="keyword">from</span> numpy.random <span class="keyword">import</span> uniform</span><br><span class="line"><span class="keyword">import</span> scipy.stats</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">np.set_printoptions(threshold=<span class="number">3</span>)</span><br><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawLines</span><span class="params">(img, points, r, g, b)</span>:</span></span><br><span class="line">    cv2.polylines(img, [np.int32(points)], isClosed=<span class="literal">False</span>, color=(r, g, b))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawCross</span><span class="params">(img, center, r, g, b)</span>:</span></span><br><span class="line">    d = <span class="number">5</span></span><br><span class="line">    t = <span class="number">2</span></span><br><span class="line">    LINE_AA = cv2.LINE_AA <span class="keyword">if</span> cv2.__version__[<span class="number">0</span>] == <span class="string">'3'</span> <span class="keyword">else</span> cv2.CV_AA</span><br><span class="line">    color = (r, g, b)</span><br><span class="line">    ctrx = center[<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    ctry = center[<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">    cv2.line(img, (ctrx - d, ctry - d), (ctrx + d, ctry + d), color, t, LINE_AA)</span><br><span class="line">    cv2.line(img, (ctrx + d, ctry - d), (ctrx - d, ctry + d), color, t, LINE_AA)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mouseCallback</span><span class="params">(event, x, y, flags,null)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> center</span><br><span class="line">    <span class="keyword">global</span> trajectory</span><br><span class="line">    <span class="keyword">global</span> previous_x</span><br><span class="line">    <span class="keyword">global</span> previous_y</span><br><span class="line">    <span class="keyword">global</span> zs</span><br><span class="line">    </span><br><span class="line">    center=np.array([[x,y]])</span><br><span class="line">    trajectory=np.vstack((trajectory,np.array([x,y])))</span><br><span class="line">    <span class="comment">#noise=sensorSigma * np.random.randn(1,2) + sensorMu</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> previous_x &gt;<span class="number">0</span>:</span><br><span class="line">        heading=np.arctan2(np.array([y-previous_y]), np.array([previous_x-x ]))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> heading&gt;<span class="number">0</span>:</span><br><span class="line">            heading=-(heading-np.pi)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            heading=-(np.pi+heading)</span><br><span class="line">            </span><br><span class="line">        distance=np.linalg.norm(np.array([[previous_x,previous_y]])-np.array([[x,y]]) ,axis=<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        std=np.array([<span class="number">2</span>,<span class="number">4</span>])</span><br><span class="line">        u=np.array([heading,distance])</span><br><span class="line">        predict(particles, u, std, dt=<span class="number">1.</span>)</span><br><span class="line">        zs = (np.linalg.norm(landmarks - center, axis=<span class="number">1</span>) + (np.random.randn(NL) * sensor_std_err))</span><br><span class="line">        update(particles, weights, z=zs, R=<span class="number">50</span>, landmarks=landmarks)</span><br><span class="line">        </span><br><span class="line">        indexes = systematic_resample(weights)</span><br><span class="line">        resample_from_index(particles, weights, indexes)</span><br><span class="line"></span><br><span class="line">    previous_x=x</span><br><span class="line">    previous_y=y</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WIDTH=<span class="number">800</span></span><br><span class="line">HEIGHT=<span class="number">600</span></span><br><span class="line">WINDOW_NAME=<span class="string">"Particle Filter"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sensorMu=0</span></span><br><span class="line"><span class="comment">#sensorSigma=3</span></span><br><span class="line"></span><br><span class="line">sensor_std_err=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_uniform_particles</span><span class="params">(x_range, y_range, N)</span>:</span></span><br><span class="line">    particles = np.empty((N, <span class="number">2</span>))</span><br><span class="line">    particles[:, <span class="number">0</span>] = uniform(x_range[<span class="number">0</span>], x_range[<span class="number">1</span>], size=N)</span><br><span class="line">    particles[:, <span class="number">1</span>] = uniform(y_range[<span class="number">0</span>], y_range[<span class="number">1</span>], size=N)</span><br><span class="line">    <span class="keyword">return</span> particles</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(particles, u, std, dt=<span class="number">1.</span>)</span>:</span></span><br><span class="line">    N = len(particles)</span><br><span class="line">    dist = (u[<span class="number">1</span>] * dt) + (np.random.randn(N) * std[<span class="number">1</span>])</span><br><span class="line">    particles[:, <span class="number">0</span>] += np.cos(u[<span class="number">0</span>]) * dist</span><br><span class="line">    particles[:, <span class="number">1</span>] += np.sin(u[<span class="number">0</span>]) * dist</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(particles, weights, z, R, landmarks)</span>:</span></span><br><span class="line">    weights.fill(<span class="number">1.</span>)</span><br><span class="line">    <span class="keyword">for</span> i, landmark <span class="keyword">in</span> enumerate(landmarks):</span><br><span class="line">       </span><br><span class="line">        distance=np.power((particles[:,<span class="number">0</span>] - landmark[<span class="number">0</span>])**<span class="number">2</span> +(particles[:,<span class="number">1</span>] - landmark[<span class="number">1</span>])**<span class="number">2</span>,<span class="number">0.5</span>)</span><br><span class="line">        weights *= scipy.stats.norm(distance, R).pdf(z[i])</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    weights += <span class="number">1.e-300</span> <span class="comment"># avoid round-off to zero</span></span><br><span class="line">    weights /= sum(weights)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">neff</span><span class="params">(weights)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.</span> / np.sum(np.square(weights))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">systematic_resample</span><span class="params">(weights)</span>:</span></span><br><span class="line">    N = len(weights)</span><br><span class="line">    positions = (np.arange(N) + np.random.random()) / N</span><br><span class="line"></span><br><span class="line">    indexes = np.zeros(N, <span class="string">'i'</span>)</span><br><span class="line">    cumulative_sum = np.cumsum(weights)</span><br><span class="line">    i, j = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; N <span class="keyword">and</span> j&lt;N:</span><br><span class="line">        <span class="keyword">if</span> positions[i] &lt; cumulative_sum[j]:</span><br><span class="line">            indexes[i] = j</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> indexes</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate</span><span class="params">(particles, weights)</span>:</span></span><br><span class="line">    pos = particles[:, <span class="number">0</span>:<span class="number">1</span>]</span><br><span class="line">    mean = np.average(pos, weights=weights, axis=<span class="number">0</span>)</span><br><span class="line">    var = np.average((pos - mean)**<span class="number">2</span>, weights=weights, axis=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> mean, var</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resample_from_index</span><span class="params">(particles, weights, indexes)</span>:</span></span><br><span class="line">    particles[:] = particles[indexes]</span><br><span class="line">    weights[:] = weights[indexes]</span><br><span class="line">    weights /= np.sum(weights)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">x_range=np.array([<span class="number">0</span>,<span class="number">800</span>])</span><br><span class="line">y_range=np.array([<span class="number">0</span>,<span class="number">600</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#Number of partciles</span></span><br><span class="line">N=<span class="number">400</span></span><br><span class="line"></span><br><span class="line">landmarks=np.array([ [<span class="number">144</span>,<span class="number">73</span>], [<span class="number">410</span>,<span class="number">13</span>], [<span class="number">336</span>,<span class="number">175</span>], [<span class="number">718</span>,<span class="number">159</span>], [<span class="number">178</span>,<span class="number">484</span>], [<span class="number">665</span>,<span class="number">464</span>]  ])</span><br><span class="line">NL = len(landmarks)</span><br><span class="line">particles=create_uniform_particles(x_range, y_range, N)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">weights = np.array([<span class="number">1.0</span>]*N)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a black image, a window and bind the function to window</span></span><br><span class="line">img = np.zeros((HEIGHT,WIDTH,<span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.namedWindow(WINDOW_NAME)</span><br><span class="line">cv2.setMouseCallback(WINDOW_NAME,mouseCallback)</span><br><span class="line"></span><br><span class="line">center=np.array([[<span class="number">-10</span>,<span class="number">-10</span>]])</span><br><span class="line"></span><br><span class="line">trajectory=np.zeros(shape=(<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line">robot_pos=np.zeros(shape=(<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line">previous_x=<span class="number">-1</span></span><br><span class="line">previous_y=<span class="number">-1</span></span><br><span class="line">DELAY_MSEC=<span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    cv2.imshow(WINDOW_NAME,img)</span><br><span class="line">    img = np.zeros((HEIGHT,WIDTH,<span class="number">3</span>), np.uint8)</span><br><span class="line">    drawLines(img, trajectory,   <span class="number">0</span>,   <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">    drawCross(img, center, r=<span class="number">255</span>, g=<span class="number">0</span>, b=<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#landmarks</span></span><br><span class="line">    <span class="keyword">for</span> landmark <span class="keyword">in</span> landmarks:</span><br><span class="line">        cv2.circle(img,tuple(landmark),<span class="number">10</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">-1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#draw_particles:</span></span><br><span class="line">    <span class="keyword">for</span> particle <span class="keyword">in</span> particles:</span><br><span class="line">        cv2.circle(img,tuple((int(particle[<span class="number">0</span>]),int(particle[<span class="number">1</span>]))),<span class="number">1</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> cv2.waitKey(DELAY_MSEC) &amp; <span class="number">0xFF</span> == <span class="number">27</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    cv2.circle(img,(<span class="number">10</span>,<span class="number">10</span>),<span class="number">10</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">-1</span>)</span><br><span class="line">    cv2.circle(img,(<span class="number">10</span>,<span class="number">30</span>),<span class="number">3</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">-1</span>)</span><br><span class="line">    cv2.putText(img,<span class="string">"Landmarks"</span>,(<span class="number">30</span>,<span class="number">20</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    cv2.putText(img,<span class="string">"Particles"</span>,(<span class="number">30</span>,<span class="number">40</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">    cv2.putText(img,<span class="string">"Robot Trajectory(Ground truth)"</span>,(<span class="number">30</span>,<span class="number">60</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    drawLines(img, np.array([[<span class="number">10</span>,<span class="number">55</span>],[<span class="number">25</span>,<span class="number">55</span>]]), <span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="如何安装依赖并运行"><a href="#如何安装依赖并运行" class="headerlink" title="如何安装依赖并运行"></a>如何安装依赖并运行</h2><p>打开anaconda prompt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda create -n Filters python=3</span><br><span class="line">conda activate Filters</span><br><span class="line">conda install -c menpo opencv3</span><br><span class="line">conda install numpy scipy matplotlib sympy</span><br></pre></td></tr></table></figure><p>cd python_code<br>python partical.py<br>python partical_v2.py</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>新生活你要怎么过</title>
    <link href="http://yoursite.com/2019/09/16/%E6%96%B0%E7%94%9F%E6%B4%BB%E4%BD%A0%E8%A6%81%E6%80%8E%E4%B9%88%E8%BF%87/"/>
    <id>http://yoursite.com/2019/09/16/新生活你要怎么过/</id>
    <published>2019-09-16T15:06:07.000Z</published>
    <updated>2019-09-16T15:27:31.657Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1/GLGRsQH5jOux2lZrbsjAWEH2cEGqaxyc=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>你的上限真的很高吗</title>
    <link href="http://yoursite.com/2019/09/14/%E4%BD%A0%E7%9A%84%E4%B8%8A%E9%99%90%E7%9C%9F%E7%9A%84%E5%BE%88%E9%AB%98%E5%90%97/"/>
    <id>http://yoursite.com/2019/09/14/你的上限真的很高吗/</id>
    <published>2019-09-14T15:52:50.000Z</published>
    <updated>2019-09-14T15:52:50.303Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>readme</title>
    <link href="http://yoursite.com/2019/09/14/readme/"/>
    <id>http://yoursite.com/2019/09/14/readme/</id>
    <published>2019-09-14T15:52:50.000Z</published>
    <updated>2019-11-11T04:59:19.890Z</updated>
    
    <content type="html"><![CDATA[<p>hexo文件夹中，git bash here</p><p>hexo new ‘’</p><p>hexo clean</p><p>hexo g</p><p>hexo d</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hexo文件夹中，git bash here&lt;/p&gt;
&lt;p&gt;hexo new ‘’&lt;/p&gt;
&lt;p&gt;hexo clean&lt;/p&gt;
&lt;p&gt;hexo g&lt;/p&gt;
&lt;p&gt;hexo d&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>矛盾论</title>
    <link href="http://yoursite.com/2019/09/13/%E7%9F%9B%E7%9B%BE%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/09/13/矛盾论/</id>
    <published>2019-09-13T07:24:37.000Z</published>
    <updated>2019-09-16T15:32:03.483Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>电脑迁移</title>
    <link href="http://yoursite.com/2019/09/13/%E7%94%B5%E8%84%91%E8%BF%81%E7%A7%BB/"/>
    <id>http://yoursite.com/2019/09/13/电脑迁移/</id>
    <published>2019-09-13T04:51:27.000Z</published>
    <updated>2019-09-13T04:54:40.402Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX18/MzsnS0tvpXyzsrsLFbnQmhANPnLuYbIrTgpx6Wjrhc6Kg/XOMUcPDXPEVdc9zBqsHLwarmvGPxsqq2YojSb3lW/w3rf9LWhZvS/oSBFiAM/ep0f2Fm9UoQEQURHMIqRNHJhEfdzPuQjcBam2CjTSGf60FoBICi01sBqzRZK3/s8xnfLN0pjmQfaIZEydjlRW0qVEqFQID/iZGf55e+Zee923bqUWzMHGh9ccxPjaveH6TDJFXchr7bJnHM9yFxXIvyP8yVpn9ltbr8fgVx849z/ea9/A3r0Ji10ucpfCFtAQSjsW1NgUa7qm0kjR8L+xuikSlnhD7RwcyB7dpo53cpVkmpfXAf7e2H6Vd+7iXRTmVD1rjB2U</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/09/12/hello-world/"/>
    <id>http://yoursite.com/2019/09/12/hello-world/</id>
    <published>2019-09-12T14:27:15.898Z</published>
    <updated>2019-07-03T10:54:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>python yield</title>
    <link href="http://yoursite.com/2019/07/25/python-yield/"/>
    <id>http://yoursite.com/2019/07/25/python-yield/</id>
    <published>2019-07-25T06:59:22.000Z</published>
    <updated>2019-07-25T08:31:30.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">python中yield关键字的用法</blockquote><a id="more"></a><h2 id="迭代-iteration-与可迭代-iterable"><a href="#迭代-iteration-与可迭代-iterable" class="headerlink" title="迭代(iteration)与可迭代(iterable)"></a>迭代(iteration)与可迭代(iterable)</h2><p>使用<strong>容器</strong>时逐个获取元素的过程为<strong>迭代</strong>。</p><h2 id="哪些类型是可迭代的"><a href="#哪些类型是可迭代的" class="headerlink" title="哪些类型是可迭代的"></a>哪些类型是可迭代的</h2><ul><li>python中的顺序类型： <code>list</code>, <code>tuple</code>(元组，列表可修改元组不可修改，列表用中括号元组用小括号), <code>string</code>.</li><li><code>dict</code>, <code>set</code>, <code>file</code>.</li><li>某类对象提供了 <code>__iter__()</code> 或者 <code>__getitem__()</code> 方法.</li></ul><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><p>对迭代器不断调用<code>next()</code>方法，可依次获取下一个元素，迭代器<code>__iter__()</code>方法返回迭代器自身，因此迭代器也是可迭代的。</p><h2 id="迭代器协议-iterator-protocol"><a href="#迭代器协议-iterator-protocol" class="headerlink" title="迭代器协议(iterator protocol)"></a>迭代器协议(iterator protocol)</h2><p>一个容器提供<code>__iter__()</code>方法，该方法能返回一个能逐个访问容器内所有元素的迭代器，则该容器实现了迭代器协议。</p><h3 id="python处理for循环的过程"><a href="#python处理for循环的过程" class="headerlink" title="python处理for循环的过程"></a>python处理for循环的过程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> something:</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><p>处理for循环首先调用内建函数<code>iter(something)</code>,内建函数调用<code>something.__iter__()</code>,返回something对应的迭代器，然后for循环会调用内建函数<code>next()</code>，作用在迭代器上获取迭代器的下一个元素，并赋值给x</p><h2 id="生成器函数-generaor-function-和生成器-generator"><a href="#生成器函数-generaor-function-和生成器-generator" class="headerlink" title="生成器函数(generaor function)和生成器(generator)"></a>生成器函数(generaor function)和生成器(generator)</h2><p>如果一个函数包含 yield 表达式，那么它是一个生成器函数；调用它会返回一个特殊的迭代器，称为生成器。</p><p>生成器函数被调用后，其函数体内的代码并不会立即执行，而是返回一个生成器（generator-iterator）。当返回的生成器调用成员方法时，相应的生成器函数中的代码才会执行。</p><h2 id="“下一个yield表达式”"><a href="#“下一个yield表达式”" class="headerlink" title="“下一个yield表达式”"></a>“下一个yield表达式”</h2><p>调用 generator.next() 时，生成器函数会从当前位置开始执行到下一个 yield 表达式。这里的「下一个」指的是执行逻辑的下一个。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f123</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> f123(): <span class="comment"># 1, 2, and 3, will be printed</span></span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f13</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">False</span>:</span><br><span class="line">        <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> f13(): <span class="comment"># 1 and 3, will be printed</span></span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><h3 id="使用-send-方法与生成器函数通信"><a href="#使用-send-方法与生成器函数通信" class="headerlink" title="使用 send() 方法与生成器函数通信"></a>使用 send() 方法与生成器函数通信</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        y = (<span class="keyword">yield</span> x)</span><br><span class="line">        x += y</span><br><span class="line"></span><br><span class="line">geniter = func()</span><br><span class="line">geniter.next()  <span class="comment"># 1</span></span><br><span class="line">geniter.send(<span class="number">3</span>) <span class="comment"># 4</span></span><br><span class="line">geniter.send(<span class="number">10</span>)<span class="comment"># 14</span></span><br></pre></td></tr></table></figure><p>生成器函数 func 用 yield 表达式，将处理好的 x 发送给生成器的调用者；与此同时，生成器的调用者通过 send 函数，将外部信息作为生成器函数内部的 yield 表达式的值，保存在 y 当中，并参与后续的处理。</p><h2 id="yield的好处"><a href="#yield的好处" class="headerlink" title="yield的好处"></a>yield的好处</h2><p>顺序访问容器内的前五个元素：</p><ul><li>way1:获取所有元素然后取前五</li><li>way2:逐个迭代，至第五个元素</li></ul><p>假设对于一个func(),返回值为列表，调用者对其返回值只有逐个迭代：</p><ul><li>若等函数生成所有元素可能需要很长时间</li><li>使用yield把func()变成一个生成器函数，每次产生一个元素，可以节省开销</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;python中yield关键字的用法
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>又梦</title>
    <link href="http://yoursite.com/2019/07/19/%E5%8F%88%E6%A2%A6/"/>
    <id>http://yoursite.com/2019/07/19/又梦/</id>
    <published>2019-07-19T02:55:49.000Z</published>
    <updated>2019-07-19T03:06:28.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>非极客</title>
    <link href="http://yoursite.com/2019/07/19/%E9%9D%9E%E6%9E%81%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/07/19/非极客/</id>
    <published>2019-07-19T02:26:12.000Z</published>
    <updated>2019-07-19T02:52:30.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19a8ifhSQ3tGi5hTl4sJVyl69ERmaaqpGzCqbqpJnDFROkh7kjdz6padvNYPeXu/v6uQUQI4v41th2HK5SzWO7J2HsLjGaFbAuLMSxTKgp5scqiqP2RIg2h7XLOXaHRE4Ab/jSSBs7tf2ZPbaRBTE3YxQqfYxSfDHuZVrzC+UptQTORpuaEOZCEB0A1jumqHPrHrSyO5jF65Y3Lcuag/2oWNvTZYirgu6pT8XshPoY8d3s4q2voO/SAR613eUH8BfNANzTVtCK1sEYj0q5wJLFhKRoGTp/YOg9jb6syQ6bCFG5IwlorhcDpijohzLTChdIU3NM2PgrN2OyyAZR52lnZgaT0hAq/KMalRSB47vDc1YPRXDBn3sIYUpYvLV+AeVf8qER/UcQ42zDC/Zjop1HAQSAqsXm2wTTipDzMR4Q+U0Uadiq5Vykeg8WuzC5p47qUeQAddCB2le7QbioiJjBT9bDa7l9dwAX8SSUbxETx747wYMgfgTpcsA0ajjKR/GR9Nb/sACsjygcxMTW16TFnd0eVactboKVwaqW4DaPEOihuRbLEXK3MB0prn3V/2bbUrafOeXDnR4YQne8cqPRdwmfX2PJ9HxRVpaEHcT5tcQfIu2mCES4QI9QxhYG6CyTw8H/ZLlwDeHj8wRYo8ACTDNkkk9CwnQAfrvo8/OdIT5wawQRsBrX2o4mp1OhSwQQt7h92ucj+y/ARiY3H3GLwl8/XDey+UcmLFisCq+CnaZVqAcbxJSSoddl0rL/XStv4dbybZ9kUJtwUjn80hlqqkF2lHlN6WjGxtf7fQj7fIIr52gRd6farQoPciOg/PMK+J8F1WXi5kF5evWm2O4G8njdau5YCNYlDRjCH7MBzUVivuGigZ1jTIYbO0wWc84LhHYDJrVQZwnVOQ6jTk7Qq/rVOgPeaDizjC94sfOmn4O12kxy+EMrwnlcLeQ81q5j4km2Ll8gsvNCJRRl04X+hQn8F6xFT+p0jPseeEIK6fYU5Z++0TXMDxl/YgDxOrZ75n5Fq8ZlM+ta3aEk4aBPzrAJaPxBsZ3rTkJLYycZ67PWJM1rqQm1fLiKtPILDvWp0X2QlJ06P/yn5Mq0d7T2DcjNBsPwnm24kw5f+Q7Igoe3rgLRn+q4cxrWiCAePzC4jWmjdrZrhs0r0s7AF7sLKjAcPmn6ZV5MD+qwgu4l9luZBSnmFJuPMiyxWOfd6019n/3b7keoA277NMyMll/YeVp39uKc88b+Nh4WKNz7crn/TeLvVkVoxu2STrj0WgrNnPcXSWYDxtT8A2eEdn2nlq76Glm1cYJGBuNj6pP7PIk+Xf20JNIHERV8VRijS3zRsUKuPrd2n88rAuV01QY8GM2BfEqi8o2I7S3v6qkDzM1+wNu1S9VtiCIy6MFNdHTRD3kd3aGG9RzyMivC3ebeI2ZBWd6m3lfYvnoWqHx2Y8T2k5US7WoXu2qFZm/s1Yl8ZZ27Eer5e7GASpHM5aSIfPi3LGlJbwJNG9SdPg8yUgvih5b1E82sif/QD2IJzW+rBj057KIlRGT2SgXh0ahja/3M4OYQqPYwcCBSXUAYRAVJ3Bwe713gNIOlwXgiSSXvTTK0TQ+u7i+8Ww0J4LYN1dupOHieR+HfV7eaUtQaUrAwa+LQkYSvbcn+fBh2RoA4vdb5ZD4rsI4JeC6HDgHHrPbvFagsevkZO3Yu8R6kFiH/XFzu0nP7JVYLub4IwwqOkMSEQsiAqDLK19ZNSvQR8rwNB7AVm3EnIxYbhER1O+pFWtRBLw8yjzvBnsbOyhFqUWRAz5lWDPNNm0VnoorJt3ACMZ2TUoOH1jdqvtA8E+8RlJqowyp/25WLdEh863IFpa3nhMx8aZDvRyYFJZp83UoplmRrz6CjKi/fXdNKJiSi8YcNltfHPBRsvgwHk+O+KSu2Ho/V4E1fZXunihyen7OuA+2hZ0Ce+VV4oupl5i5byNQXJn5toLnxcxu6JuY630WRTyrUf/3QfnaakslxaxGrLAwZwlBmNbenFbudhAak4JvETALNfY5l9X8d+aIUoBb7ToUhJVBG6m/0naihnr8/+PsBWtSOcic19dck+P1QEZCPMmCriq4TRmZYna5v/c54BdpH0HxnKm2GAXQsoxQ3Lnhyrjhe6hdzY8VNhtLhIXerVsjwBvgFw6S8TrX2rXsle5evFqXanRr2TdkuGy/32LwHIoNwA/iVxfmWoGrOPsK6cz76uHd+k6WOOmdaG80diAaQzo+TBkX/tDPMgp88Hie28IOVHeo7IKwAsKOjVU/tuhL+QS0h3anTPn82e4iTqmorsL8+K91PgIU7pHNufrMUr5x7aikD9bE2JbLfkqDH1yx2LzgLGMhbkn66lVr4Je7KIlTQB5/9P9WufGom6rNtvzteiKFhVdps7+fieDg86YZFi8qFLa8swVi1xpfQupjYb8+BRHcLun2dw8iWATritYQBnQGxNEqFxDp0bFdh4Yn07WnLrNEMwN94kdRbc3aBJKGg6Bbu1cbq3R0ShCSh2PqnAcUibK36A/L4wmPEcqHvoXaeN5F6NrYU33NtElq08n9wmUtS7CyFdotxwKju4A2jKwK1TzD5nb2FHCyjsjph7HZguBqPHRafue/HMSzA1pdgoUdueP6QJXQRs+sm+/ge4gXyviGNje3c/0jrq3zy32xQg+vAFcWY7PApC+GUd1rPm0ztRXOnKCOVjdyTtLIHJ4xeTMRuy0HTClHBwI/Dsz89wCl6DmKm9+kPb9x0iVIUm8oqkToHPoVDkaSfdLbOtD+163n6HqjRt0VM1LblUw7oGF3Y9pPSd4eZ59hfaAhFMhteNl8JAnP+axX0yowdP4oh/t9Em6auxLckqTYB3APuRfdgv8GQeqgwUuh5rtq+HlIlEwIcnXj3Vjp7F+fqUGD0U7a4QblKrt79MkGKVwXxOU2Q4BMZasM2sn9YAbP0Z2deTyupxq4TCBbREslvH5ejLBP64yrdzK1wjdRJyCuib7BOokt1YoscGgtEREqJm75yb3B1UcUr1lH2d5VO6+Xqf2G6qMcODzD1VY/fJ98GzBw5PIvtCctFAKNwvuu7bmgYOs/wnwkDsdqiOcl2f+3bIy/BIsSwq1iouC96NMEVhotItuXuu4NwXV6byL7/XpXlwOgmp/a4e/xbFiIV9pJlRLiHD+riUZlh0/WJJcylSlEQzgHTE1ypRxOf2/yqmBO46kdx3icm74zR5rjzI7pNVcP6AmrFzDg2ILgUdyLDkd60yYWX29isF+DSUuH1llJOOVkjmmXaoN3hZxtl+Qsg+43q/PJmPPGqfYaL4n6c/jxE1z2UbmhS3H9mtnr0bvxltTKDvzFT4LTYeH2nS3TWRceRAP+3tj6sIB+3FKCxiNj/qiX42M8dje/9Y6mthW7plEcZ1MEVQo59EPjlbtnFmUHpKA1kWI7StURMYBAb9CKWUsVrqigRhdqnJmg01Jd8/hOv42huTcGcHcuV2a0dO5O7dAl3v4Rpx1jdhQPY02svlB6KKke1C4wixFVDz3/4gCHSLNKWgHPMwmL/QjGjBRqJUlrixaki00jdPUQD2yns9/9rA1Evxf/A8bacjIcPlK6sXeZZZyt42qhjC4gW6hX9C30NIwxVDN3rq/5hWtA6s3diK95EnwNJNtv9+eaaIj/uYSlLU17RON5fpeAbuVzRfzdsf7nuKXsneiAo1zhA8K4Xwi8iVQdv5bZDDeSeNZwlwPprxhUCdIovstoS95bqIfrSfgLR3xkCnxC+L7sodBTlaY4D1t3ReXK4Qni6Tngvd6sIUE89zFW23XQv0zJw+tXJYs5G6ORj39MP0fVFkrjcCdkIQP/IzhPaA/6RKQGqNY4DNq089YgmhtRfQZcfCC0bvGbiM1bqgKKtkvujDUTOiToa+JREUWWrdMtpu1ufywXBC/lJ7i9AhF6xLeqxg+L7MbyPOJ2KoitTVJ8fub5yeAckGEl5TEoAFT2npthcm7D1l2O22KUF2MomzccmOabMDWtYzgInm75lf/sp3UvMy7LMgjZmUDfqyoBZ/fEYU0SAZbVuCz6y7W418hifBHhu9BOcPQ7K3nhA01/H31hMUBdCpqkXlEW+8hzNJ2mUq3HNz48tIngwvjOlyliaXb/+BwcyvqnqjJ6LwP3yjXLgCGc2jbsRPvDqCPcHm2xSzooY4d5yKoOcxVJ1uy5AB7LN009DaR1Ei5PxIsd4THyeAjbLQMMHkKc75nleDzCZUeMHlrKjYsud63aOBCLO1qJsYLhjVK3u9qzM5BzSLZMalfe5FVN+r1YvSpZkjILO52sCetnQ2NGNdrKyfogajzD1uF3NUAkElCkc0WBsPDcnMqciq5GReVNJgZ7P7IjL62bvFBygU0Mz4Oika+ab3mcJMKqdr1ZZzewWWnIm2uPFXwQeIyz+Fwvi3Ehry7H30OsjUqvq2IKmwdy3nHB35QloF9zAyLIGm+i67wgQ2m5K0Lpc9o+kkRYtmaR4RH/YOYxXrsWFxK786NQfTDrQErbJ7Ij9LuxlAr2DallFlraR+ImBRlriqO6XP58IwG7jAMWtbarAaxZYhecfKffrDRMvO+PBeIJErL4E36y/quqUw81J6oCxYjZX7WGZKWuqV/H4JA0yXXElvpwd8Yoze+SCTgaCiqdkHefo/t0F3ZjKQ3bfF+fZlQwQYuY01kiuK+HqCDjYqZafiHIRNc6Yxfg8euf9e6SXY5i9YiIc0YJCgYzrs1iuevj8NvQxkxXkk25X1jWIU9uguZjo/Qmm4xf+DFu04dKXDT1b+yiL0sy/Zb6NfWS0Fx/8icqhkWS/GnMnLS22fRGyP1RCPwkn9aUEN2FD0m2FhWDx8eKE8KCAu7usolimVElHqGWyRrE19Rvwb8SX76BstDz2grTngPqZuRIT8pgRj</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>复现vifi相关</title>
    <link href="http://yoursite.com/2019/07/18/%E5%A4%8D%E7%8E%B0vifi%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2019/07/18/复现vifi相关/</id>
    <published>2019-07-18T10:35:47.000Z</published>
    <updated>2019-07-19T03:06:48.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">复现vifi过程中涉及的相关知识</blockquote><a id="more"></a>### ]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;复现vifi过程中涉及的相关知识&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Gradle(转载自Bonker)</title>
    <link href="http://yoursite.com/2019/07/18/Gradle/"/>
    <id>http://yoursite.com/2019/07/18/Gradle/</id>
    <published>2019-07-18T08:38:29.000Z</published>
    <updated>2019-07-18T08:53:20.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">关于Android开发中的Gradle</blockquote><a id="more"></a><p>(转载自Bonker）原文链接：<a href="https://www.cnblogs.com/Bonker/p/5619458.html" target="_blank" rel="noopener">https://www.cnblogs.com/Bonker/p/5619458.html</a></p><h2 id="什么是Gradle"><a href="#什么是Gradle" class="headerlink" title="什么是Gradle"></a>什么是Gradle</h2><p>简单的说，Gradle是一个构建工具，它是用来帮助我们构建app的，构建包括编译、打包等过程。我们可以为Gradle指定构建规则，然后它就会根据我们的“命令”自动为我们构建app。Android Studio中默认就使用Gradle来完成应用的构建。有些同学可能会有疑问：”我用AS不记得给Gradle指定过什么构建规则呀，最后不还是能搞出来个apk。“ 实际上，app的构建过程是大同小异的，有一些过程是”通用“的，也就是每个app的构建都要经历一些公共步骤。因此，在我们在创建工程时，Android Studio自动帮我们生成了一些通用构建规则，很多时候我们甚至完全不用修改这些规则就能完成我们app的构建。</p><p>有些时候，我们会有一些个性化的构建需求，比如我们引入了第三方库，或者我们想要在通用构建过程中做一些其他的事情，这时我们就要自己在系统默认构建规则上做一些修改。这时候我们就要自己向Gradle”下命令“了，这时候我们就需要用Gradle能听懂的话了，也就是Groovy。Groovy是一种基于JVM的动态语言，关于它的具体介绍，感兴趣的同学可以文末参考”延伸阅读“部分给出的链接。</p><p>我们在开头处提到“Gradle是一种构建工具”。实际上，当我们想要更灵活的构建过程时，Gradle就成为了一个编程框架——我们可以通过编程让构建过程按我们的意愿进行。也就是说，当我们把Gradle作为构建工具使用时，我们只需要掌握它的配置脚本的基本写法就OK了；而当我们需要对构建流程进行高度定制时，就务必要掌握Groovy等相关知识了。限于篇幅，本文只从构建工具使用者的角度来介绍Gradle的一些最佳实践，在文末“延伸阅读”部分给出了几篇高质量的深入介绍Gradle的文章，其中包含了Groovy等知识的介绍。</p><h2 id="Gradle的基本组分"><a href="#Gradle的基本组分" class="headerlink" title="Gradle的基本组分"></a>Gradle的基本组分</h2><h3 id="Project与Task"><a href="#Project与Task" class="headerlink" title="Project与Task"></a>Project与Task</h3><p>在Gradle中，每一个待构建的工程是一个Project，构建一个Project需要执行一系列Task，比如编译、打包这些构建过程的子过程都对应着一个Task。具体来说，一个apk文件的构建包含以下Task：Java源码编译、资源文件编译、Lint检查、打包以生成最终的apk文件等等。</p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>插件的核心工作有两个：一是定义Task；而是执行Task。也就是说，我们想让Gradle能正常工作，完成整个构建流程中的一系列Task的执行，必须导入合适的插件，这些插件中定义了构建Project中的一系列Task，并且负责执行相应的Task。</p><p>在新建工程的app模块的build.gradle文件的第一行，往往都是如下这句：</p><p>apply plugin: ‘com.android.application’<br>这句话的意思就是应用“com.android.application“这个插件来构建app模块，app模块就是Gradle中的一个Project。也就是说，这个插件负责定义并执行Java源码编译、资源文件编译、打包等一系列Task。实际上”com.android.application”整个插件中定义了如下4个顶级任务：</p><p>assemble: 构建项目的输出（apk）</p><p>check: 进行校验工作</p><p>build: 执行assemble任务与check任务</p><p>clean: 清除项目的输出</p><p>当我们执行一个任务时，会自动执行它所依赖的任务。比如，执行assemble任务会执行assembleDebug任务和assembleRelease任务，这是因为一个Android项目至少要有debug和release这两个版本的输出。</p><h3 id="Gradle配置文件"><a href="#Gradle配置文件" class="headerlink" title="Gradle配置文件"></a>Gradle配置文件</h3><p>我们在Android Studio中新建一个工程，可以得到如下的工程结构图：</p><p>上面我们说过，Android Studio中的一个Module即为Gradle中的一个Project。上图的app目录下，存在一个build.gradle文件，代表了app Module的构建脚本，它定义了应用于本模块的构建规则。我们可以看到，工程根目录下也存在一个build.gradle文件，它代表了整个工程的构建，其中定义了适用于这个工程中所有模块的构建规则。</p><p>接下来我们介绍一下上图中其他几个Gradle配置文件：</p><p>gradle.properties: 从它的名字可以看出，这个文件中定义了一系列“属性”。实际上，这个文件中定义了一系列供build.gradle使用的常量，比如keystore的存储路径、keyalias等等。</p><p>gradlew与gradlew.bat: gradlew为Linux下的shell脚本，gradlew.bat是Windows下的批处理文件。gradlew是gradle wrapper的缩写，也就是说它对gradle的命令进行了包装，比如我们进入到指定Module目录并执行“gradlew.bat assemble”即可完成对当前Module的构建（Windows系统下）。</p><p>local.properties: 从名字就可以看出来，这个文件中定义了一些本地属性，比如SDK的路径。</p><p>settings.gradle: 假如我们的项目包含了不只一个Module时，我们想要一次性构建所有Module以完成整个项目的构建，这时我们需要用到这个文件。比如我们的项目包含了ModuleA和ModuleB这两个模块，则这个文件中会包含这样的语句：include ‘:ModuleA’, ‘:ModuleB’。</p><h3 id="构建脚本"><a href="#构建脚本" class="headerlink" title="构建脚本"></a>构建脚本</h3><p>首先我们来看一下工程目录下的build.gradle，它指定了真个整个项目的构建规则，它的内容如下：</p><figure class="highlight plain"><figcaption><span>&#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    repositories &#123;</span><br><span class="line">        jcenter() //构建脚本中所依赖的库都在jcenter仓库下载</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        //指定了gradle插件的版本</span><br><span class="line">        classpath &apos;com.android.tools.build:gradle:1.5.0&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        //当前项目所有模块所依赖的库都在jcenter仓库下载</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">我们再来简单介绍下app模块的build.gradle的内容：</span><br></pre></td></tr></table></figure><p>//加载用于构建Android项目的插件<br>apply plugin: ‘com.android.application’</p><p>android { //构建Android项目使用的配置<br>    compileSdkVersion 23 //指定编译项目时使用的SDK版本<br>    buildToolsVersion “23.0.1” //指定构建工具的版本</p><pre><code>defaultConfig {    applicationId &quot;com.absfree.debugframwork&quot; //包名    minSdkVersion 15  //指定支持的最小SDK版本    targetSdkVersion 23 //针对的目标SDK版本    versionCode 1     versionName &quot;1.0&quot;}buildTypes { //针对不同的构建版本进行一些设置    release { //对release版本进行的设置        minifyEnabled false //是否开启混淆        proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;  //指定混淆文件的位置    }}</code></pre><p>}</p><p>dependencies { //指定当前模块的依赖<br>    compile fileTree(dir: ‘libs’, include: [‘*.jar’])<br>    testCompile ‘junit:junit:4.12’<br>    compile ‘com.android.support:appcompat-v7:23.1.1’<br>    compile ‘com.android.support:design:23.1.1’<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"></span><br><span class="line">## 常见配置</span><br><span class="line"></span><br><span class="line">整个工程的build.gradle通常不需我们改动，这里我们介绍下一些对模块目录下build.gradle文件的常见配置。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 依赖第三方库</span><br><span class="line"></span><br><span class="line">当我们的项目中用到了了一些第三方库时，我们就需要进行一些配置，以保证能正确导入相关依赖。设置方法很简单，比如我们在app模块中中用到了Fresco，只需要在build.gradle文件中的dependencies块添加如下语句：</span><br></pre></td></tr></table></figure><p>dependencies {<br>    …<br>    compile ‘com.facebook.fresco:fresco:0.11.0’<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这样一来，Gradle会自动从jcenter仓库下载我们所需的第三方库并导入到项目中。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 导入本地jar包</span><br><span class="line"></span><br><span class="line">在使用第三方库时，除了像上面那样从jcenter仓库下载，我们还可以导入本地的jar包。配置方法也很简单，只需要先把jar文件添加到app\libs目录下，然后在相应jar文件上单击右键，选择“Ad As Library”。然后在build.gradle的dependencies块下添加如下语句：</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">compile files(&apos;libs/xxx.jar&apos;)</span><br><span class="line">实际上我们可以看到，系统为我们创建的build.gradle中就已经包含了如下语句：</span><br><span class="line"></span><br><span class="line">compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">这句话的意思是，将libs目录下的所有jar包都导入。所以实际上我们只需要把jar包添加到libs目录下并“Ad As Library&quot;即可。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 依赖其它模块</span><br><span class="line"></span><br><span class="line">假设我们的项目包含了多个模块，并且app模块依赖other模块，那么我们只需app\build.gradle的denpendencies块下添加如下语句：</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">compile project(&apos;:other&apos;)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 构建输出为aar文件</span><br><span class="line"></span><br><span class="line">通常我们构建的输出目标都是apk文件，但如果我们的当前项目时Android Library，我们的目标输出就是aar文件。要想达到这个目的也很容易，只需要把build.gradle的第一句改为如下：</span><br><span class="line"></span><br><span class="line">apply plugin:&apos;com.android.library&apos;</span><br><span class="line">这话表示我们使用的插件不再是构建Android应用的插件，而是构建Android Library的插件，这个插件定义并执行用于构建Android Library的一系列Task。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 自动移除不再使用的资源</span><br><span class="line"></span><br><span class="line">只需进行如下配置：</span><br></pre></td></tr></table></figure><p>android {<br>    …<br>    }<br>    buildTypes {<br>        release {<br>            …<br>            shrinkResources true<br>            …<br>        }<br>    }<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 忽略Lint错误</span><br><span class="line"></span><br><span class="line">在我们构建Android项目的过程中，有时候会由于Lint错误而终止。当这些错误来自第三方库中时，我们往往想要忽略这些错误从而继续构建进程。这时候，我们可以只需进行如下配置：</span><br></pre></td></tr></table></figure><p>android {<br>    …<br>    lintOptions {<br>        abortOnError false<br>    }<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 集成签名配置</span><br><span class="line"></span><br><span class="line">在构建release版本的Android项目时，每次都手动导入签名文件，键入密码、keyalias等信息十分麻烦。通过将签名配置集成到构建脚本中，我们就不必每次构建发行版本时都手动设置了。具体配置如下：</span><br></pre></td></tr></table></figure><p>signingConfigs {<br>    myConfig { //将”xx”替换为自己的签名文件信息<br>        storeFile file(“xx.jks”)<br>        storePassword “xx”<br>        keyAlias “xx”<br>        keyPassword “xx”<br>    }<br>}<br>android {<br>    buildTypes {<br>        release {<br>            signingConfig  signingConfigs.myConfig //在release块中加入这行<br>            …<br>        }<br>    }<br>    …<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">真实开发中，我们不应该把密码等信息直接写到build.gradle中，更好的做法是放在gradle.properties中设置：</span><br></pre></td></tr></table></figure><p>RELEASE_STOREFILE=xxx.jks<br>RELEASE_STORE_PASSWORD = xxx<br>RELEASE_KEY_ALIAS=xxx<br>RELEASE_KEY_PASSWORD=xxx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后在build.gradle中直接引用即可：</span><br></pre></td></tr></table></figure><p>signingConfigs {<br>    myConfig {<br>        storeFilefile(RELEASE_STOREFILE)<br>        storePassword RELEASE_STORE_PASSWORD<br>        keyAlias RELEASE_KEY_ALIAS<br>        keyPassword RELEASE_KEY_PASSWORD<br>    }<br>}</p><p>``` </p><p>关于Gradle的其他配置方法大家可以参考“延伸阅读”部分的“Gradle最佳实践”。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;关于Android开发中的Gradle&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Gradle" scheme="http://yoursite.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://yoursite.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Linux远程登录及服务器配置</title>
    <link href="http://yoursite.com/2019/07/17/Linux%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2019/07/17/Linux远程登录/</id>
    <published>2019-07-17T13:45:43.000Z</published>
    <updated>2019-07-18T08:56:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Linux远程登录及服务器配置</blockquote><a id="more"></a><p>##Linux远程登录原理<br>安装telnet远程客户端登录工具的客户机通过23（默认）端口连接到Linux服务器，通过telnet将远程客户机上命令传到服务器执行并反馈。<br>###telnet软件包安装<br><code>sudo apt-get install inetutils-telnetd</code>(ubuntu没有默认安装Telnet软件包)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Linux远程登录及服务器配置&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="远程登录" scheme="http://yoursite.com/tags/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>usr-key</title>
    <link href="http://yoursite.com/2019/07/17/usr-key/"/>
    <id>http://yoursite.com/2019/07/17/usr-key/</id>
    <published>2019-07-17T07:33:59.000Z</published>
    <updated>2019-07-28T07:00:56.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+m+ySIWjALyKT5p8rkKOk4Gr0xMCqZR/c07TkmuriwLDCAvDpLpD7xTNZURjUetcjTpp+/8dHy+MNW/mSup/cYTW+VipIkh1lVjRyhtlqE77hb4gjjsWjyiUEzC8JUvqokPoETM27dvNyDF+aYjZC1ORZaOzPJcaAR/4g2dxAEM83sxIBu+v3puN+GmFiNNDapxHkyopkCyG9KLlOfBxQZYGCRnvuJrKzi9cNOC0c7P2qwHO8z0qCqA13cYWLQYVfhSFs9xGdGQMOstiBNJJSLA7Lgw49QZuPKPAoXWO1x0jdOJn11B/IEkvYG/JcUsjbUhNX/G65UWmoL3qpz6ZlE/CTXMMA/pIhAKm8C49IYsQ4aLNFF8XISKt1EyQj6UzDldzTHKpR6YqLLeQlGygczWGSHqkLqNAY1yQa2r5F+q6NVkizJ2xyJTnmiEEG9uSmnCX6PlTJqr6vevP8YrbgkCRp/HmhEUyMz9zhvcQr/B6ka4J30wLJe8BovzB7eDI0IgQ9s+mxrNpMmqI5qYFJdrcwh256Z23aRQm8Gyh8d4h9hGzm/NPt0jI6Av/YE5D0c4EzDKaNGehJzkU+bN1XyAbzVAZC8vUJW/i8cO0wD6bOL5VHCz0o5AdMwO4TVXXZeTj3XNhAypa8Eifno6Xt7WpmtA+Q1jBjWML3xnskONr44BEb43i8gHOVJ4lH7lXdapoiplx6YvlR+kQUG3QAfqVt0XGloWyFoi82c+P+9ixZHQcQ2Yeb4qQWiBfANa52l9IAY5iwZpqpAJ6WJN+Fv7dTaqTPlwOQWMMJyl0mL8yjDdRrGnrFE8sl8sJ+l+L2BWk1vD7tcHa4HffEiviEoFkSUgMf8tIoZYFB/YbzKq7ACYARvkAkHgDhakXE9pbwOAB71OMgAO7AV9jMLuWDMgYSXKzgjO4hJojok3/OTe+oXV67aLIZ7AwZr7Jmo9cg6ohOiyhRDPZJhpOE8xvH/c61wdLqmi0XegWLFO1fGTAYmTfZNtOfMqwHQ5k7h3gXniLUi6523J5F4/2bvV99AN2XubmjSbngFomU+XTGr5KD0BbODxSYw0ZwabuvHsb3MRlSQWtdV5cfvRP/VSEil5yDqQMkqqW5IEdhNm6bncePqlpQVDSDyVewNbitw63NKp20vlrMqbbBvzv46Vx0XyOIavz9WosMgCQ/FxPW+DMHSBrJ6OLZ8xs3pSW3/H2a46jlZ3hasKwh0wfi7L7tmiWfpFrV845pfp88h9T0t8KIDthJsuPE0fnM6wCqsOyaO3Z5yTXboIXn1kq3Op3KN3d4ky0sqhdomrmq31mvwawa9F+IRpI0wy7uhyMl+KBSyXcG6WYgNVSE+r9NJWqd4ZoNzW+TjEHXXSt6m/o9p+3lq+lDqPnoeTVpDJNfi4j4yxqsjDR0ttjJAGN5ene4Iacu+7yWdPvq5Yfdv8Bbfv3yc+HYkHS0FFPph/rxqKjAapq6rDzhCicLaxvPIIOpA7IiGsv1UVkBFaomTOhVHJkllFXB3MaVPK/me9tSjEmGUXhcYvHjPM5J696cTjpaG4ru+KhALLCtfVBrhsLqlFuQVSF9PH4rOnemn1Sa7tzY+46L7O1MzaxqIZP6M2ghsrRkbcpgXoE8=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="key" scheme="http://yoursite.com/categories/key/"/>
    
    
  </entry>
  
  <entry>
    <title>light frequency authenticate</title>
    <link href="http://yoursite.com/2019/07/05/light-frequency-authenticate/"/>
    <id>http://yoursite.com/2019/07/05/light-frequency-authenticate/</id>
    <published>2019-07-05T03:09:43.000Z</published>
    <updated>2019-07-09T06:38:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">基于可见光的无线网络认证</blockquote><a id="more"></a><p>2019-07-05</p><h2 id="802-1x认证过程："><a href="#802-1x认证过程：" class="headerlink" title="802.1x认证过程："></a>802.1x认证过程：</h2><ol><li><p>当用户有访问网络需求时打开802.1X客户端程序，输入已经申请、登记过的用户名和密码，发起连接请求（EAPOL-Start报文）。此时，客户端程序将发出请求认证的报文给设备端，开始启动一次认证过程。</p></li><li><p>设备端收到请求认证的数据帧后，将发出一个请求帧（EAP-Request/Identity报文）要求用户的客户端程序发送输入的用户名。</p></li><li><p>客户端程序响应设备端发出的请求，将用户名信息通过数据帧（EAP-Response/Identity报文）发送给设备端。设备端将客户端发送的数据帧经过封包处理后（RADIUS Access-Request报文）送给认证服务器进行处理。</p></li><li><p>RADIUS服务器收到设备端转发的用户名信息后，将该信息与数据库中的用户名表对比，找到该用户名对应的密码信息，用随机生成的一个加密字对它进行加密处理，同时也将此加密字通过RADIUS Access-Challenge报文发送给设备端，由设备端转发给客户端程序。</p></li><li><p>客户端程序收到由设备端传来的加密字（EAP-Request/MD5 Challenge报文）后，用该加密字对密码部分进行加密处理（此种加密算法通常是不可逆的），生成EAP-Response/MD5 Challenge报文，并通过设备端传给认证服务器。</p></li><li><p>RADIUS服务器将收到的已加密的密码信息（RADIUS Access-Request报文）和本地经过加密运算后的密码信息进行对比，如果相同，则认为该用户为合法用户，反馈认证通过的消息（RADIUS Access-Accept报文和EAP-Success报文）。</p></li><li><p>设备收到认证通过消息后将端口改为授权状态，允许用户通过端口访问网络。在此期间，设备端会通过向客户端定期发送握手报文的方法，对用户的在线情况进行监测。缺省情况下，两次握手请求报文都得不到客户端应答，设备端就会让用户下线，防止用户因为异常原因下线而设备无法感知。</p></li><li><p>客户端也可以发送EAPOL-Logoff报文给设备端，主动要求下线。设备端把端口状态从授权状态改变成未授权状态，并向客户端发送EAP-Failure报文。</p></li></ol><h2 id="关于WiFidog："><a href="#关于WiFidog：" class="headerlink" title="关于WiFidog："></a>关于WiFidog：</h2><p>Portal认证，通常也会叫Web认证，未认证用户上网时，设备强制用户登录到特定站点，用户可以免费访问其中的服务。当用户需要使用互联网中的其它信息时，必须在门户网站进行认证，只有认证通过后才可以使用互联网资源。现金很多中国移动CMCC、中国联通、中国电信ChinaNet的WIFI都使用这种认证接入方式。</p><p>在OpenWRT上实现Portal认证，实际上早已有解决方案：</p><ol><li><p>chillispot，但原维护作者停止更新，被chillispot.info接管继续开发；</p></li><li><p>coova-chilli，它是基于chillispot开发拓展的，功能最为强大；可以去官方看一下Coova-chilli；</p></li><li><p><strong>wifidog</strong>，前两个由于原维护作者停止更新，笔者也没有深入研究，重点钻研了wifidog，Wifidog也是OpenWRT和DD-WRT中实现Portal比较出名的。但是，Wifidog只是实现AP认证网关，需要配合外部的Portal服务器才能使用，Portal主要是提供认证所需的WEB页面且实现认证计费等的功能。虽然这也有很多商用解决方案，例如wiwiz、wifiap等，但是这些商业解决方案的目标都是盈利，即使可以免费使用，免费账号的功能和权限都受到了很大的限制，例如不能自定义页面，Web认证页面有广告等等。有条件的人可能打算自己搭建Portal服务器，但是看看Wifidog的官方Wiki，对搭建过程实在是难以理解。后来，笔者发现网络上还有一个 <strong>authpuppy方案</strong> ，官方网站 <strong><a href="http://www.authpuppy.org" target="_blank" rel="noopener">www.authpuppy.org</a></strong> ，是一个已实现好的Wifidog认证服务器，里面包含各种插件供你使用，官方的安装过程也很简单，如果你懂的HTML和面向对象编程的相关知识且拥有一个服务器，可以自行修改认证页面，使用authpuppy也是一个不错的方案。</p></li><li><p>如何 <strong>自行编写一个轻量级的Web Portal认证服务器</strong> ：</p><ul><li><h3 id="Wifidog的工作原理："><a href="#Wifidog的工作原理：" class="headerlink" title="Wifidog的工作原理："></a>Wifidog的工作原理：</h3><ol><li><p>客户端发出初始化请求，比如访问 <a href="http://www.dqrun.com" target="_blank" rel="noopener">www.dqrun.com</a> 。</p></li><li><p>网关的防火墙规则将这个请求重定向到本地网关的端口上。这个端口是Wifidog监听的端口。</p></li><li><p>Wfidog提供一个HTTP重定向回复，重定向到Web认证页面，重定向的Url的Querystring中包含了Gateway的ID，Gateway的FQDN以及其他的信息。</p></li><li><p>用户向认证服务器发出认证请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gw_id=[GatewayID, default: “default”]</span><br><span class="line">gw_address=[GatewayAddress, internal IP of router]</span><br><span class="line">gw_port=[GatewayPort, port that wifidog Gateway is listening on]</span><br><span class="line">url=[user requested url]；</span><br></pre></td></tr></table></figure></li><li><p>网关返回一个（可以是自定义的）splash（也称作“登录”）页面。</p></li><li><p>用户提供他的凭据信息，比如用户名和密码。</p></li><li><p>成功认证的话，客户端将会被重定向到网关的自己的web页面上，并且带有一个认证凭据（一个一次性的token），内容比如：<a href="http://GatewayIP:GatewayPort/wifidog/auth?token=[auth" target="_blank" rel="noopener">http://GatewayIP:GatewayPort/wifidog/auth?token=[auth</a> token]；</p></li><li><p>用户就是用获取到的凭据访问网关。</p></li><li><p>网关去认证服务器询问token的有效性。</p></li><li><p>认证服务器确认token的有效性。</p></li><li><p>网关发送重定向给客户端，以从认证服务器上获取 成功提示页面，重定向到 <a href="http://portal_server:port/portal_script" target="_blank" rel="noopener">http://portal_server:port/portal_script</a> 这个位置。</p></li><li><p>认证服务器通知客户请求成功，可以上网了。</p></li></ol></li></ul></li></ol><h2 id="待完成工作："><a href="#待完成工作：" class="headerlink" title="待完成工作："></a>待完成工作：</h2><p><strong>装wifidog</strong> ，配置:<br>1）监听端口 2)服务器地址 3）5个脚本的地址(login, portal, msg, ping, auth)<br> <strong>配置方法：</strong>远程登陆openwrt: ssh <a href="mailto:root@192.168.1.1" target="_blank" rel="noopener">root@192.168.1.1</a>， 然后修改/etc/wifidog.conf文件。</p><p><strong>将笔记本搭建成服务器</strong></p><p><strong>添加对LED的频率提取功能</strong></p><p><strong>实现动态调节LED频率,将此功能添加至系统</strong></p><hr><p>2019/07/08</p><h2 id="路由器刷openwrt系统"><a href="#路由器刷openwrt系统" class="headerlink" title="路由器刷openwrt系统"></a>路由器刷openwrt系统</h2><p>恢复出厂：断电后，先按住reset再通电。<br><br>登陆192.168.1.1（breed web），先点“恢复出厂”，选择“openwrt”；再点击“更新固件”，选中已下载好的openwrt镜像，进行固件更新。<br></p><h3 id="解决路由器联网问题"><a href="#解决路由器联网问题" class="headerlink" title="解决路由器联网问题"></a>解决路由器联网问题</h3><ol><li>设置密码：点击<code>Go to password configuration...</code>，敲入2遍新的路由器密码，点击页面最下面的 保存执行按钮，密码修改即时生效。 </li><li>设置主机名和时区：<code>System</code>菜单的<code>system</code>进去，主机名改为自己希望的名称，时区设置为<code>Asia/Shanghai</code>，保存。</li><li><strong>联网设置</strong> :点击菜单<code>Network</code>中的第二项，可以选择2G或5G无线网络连接WIFI，按 <code>scan</code>扫描按钮，稍等出现列表中，选择自己(想通过这个路由连接)的WIFI，输入密码，按提交，然后稍等，按保存执行。</li></ol><h2 id="ubuntu16-04编译OpenWrt环境搭建："><a href="#ubuntu16-04编译OpenWrt环境搭建：" class="headerlink" title="ubuntu16.04编译OpenWrt环境搭建："></a>ubuntu16.04编译OpenWrt环境搭建：</h2><ol><li><p>ubuntu下OpenWrt编译环境需要安装很多组件：<br><br><code>sudo apt-get install gcc</code><br><code>sudo apt-get install g++</code><br><code>sudo apt-get install binutils</code><br><code>sudo apt-get install patch</code><br><code>sudo apt-get install bzip2</code><br><code>sudo apt-get install flex</code><br><code>sudo apt-get install bison</code><br><code>sudo apt-get install make</code><br><code>sudo apt-get install autoconf</code><br><code>sudo apt-get install gettext</code><br><code>sudo apt-get install texinfo</code><br><code>sudo apt-get install unzip</code><br><code>sudo apt-get install sharutils</code><br><code>sudo apt-get install subversion</code><br><code>sudo apt-get install libncurses5-dev</code><br><code>sudo apt-get install ncurses-term</code><br><code>sudo apt-get install zlib1g-dev</code><br><code>sudo apt-get install subversion</code><br><code>sudo apt-get install  git-core</code><br><code>sudo apt-get install gawk</code><br><code>sudo apt-get install asciidoc</code><br><code>sudo apt-get install libz-dev</code><br>当然安装之前最好先更新下组件包：<br><code>sudo apt-get update</code><br>逐个安装…</p></li><li><p>新建一个openwrt目录，使用命令：<br><code>mkdir openwrt</code><br><code>sudo chmod 777 openwrt</code><br>接下来的所有命令都在/openwrt目录下运行</p></li><li><p>下载OpenWrt源码:<br><code>git clone git://git.openwrt.org/openwrt/openwrt.git</code></p></li><li><p>添加软件扩展包：<br><code>cd /home/ngmi/openwrt/openwrt/</code><br><code>cp feeds.conf.default feeds.conf</code>(将feeds.conf.default修改为feeds.conf)</p></li><li><p>更新扩展，安装扩展：<br><code>./scripts/feeds update -a</code><br><code>./scripts/feeds install -a</code></p></li><li><p>测试下编译环境，使用命令：<br><code>make defconfig</code></p></li><li><p><code>make menuconfig</code><br>如果一切正常，会出现一个配置菜单，可以选择要编译的固件平台、型号，还能选择固件中要添加的功能和组件，至此编译环境就搭建好了。</p></li></ol><h2 id="在OpenWrt的路由器上安装Wifidog应用程序"><a href="#在OpenWrt的路由器上安装Wifidog应用程序" class="headerlink" title="在OpenWrt的路由器上安装Wifidog应用程序"></a>在OpenWrt的路由器上安装Wifidog应用程序</h2><ol><li>在OpenWrt系统的源码文件下，编辑<code>feeds.conf.default</code>文件<br><br><code>vim feeds.conf.default</code><br>在其中增加一行：<br><code>src-git wifidog https://github.com/wifidog/wifidog-gateway.git</code></li><li>然后更新，再安装：<br><code>./scripts/feeds update -a</code><br><code>./scripts/feeds install -a</code></li><li>终端执行编译命令<br><code>make menuconfig</code></li><li>在<code>Network/captive portals/</code>下选择wifidog 就有选择 WiFiDog 这一项了</li></ol><hr><p>2019/07/09</p><h2 id="配置服务器中遇到的问题"><a href="#配置服务器中遇到的问题" class="headerlink" title="配置服务器中遇到的问题"></a>配置服务器中遇到的问题</h2><p><strong>问题：</strong></p><figure class="highlight plain"><figcaption><span>python3 manage.py runserver 0.0.0.0:8000</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;manage.py&quot;, line 22, in &lt;module&gt;</span><br><span class="line">    execute_from_command_line(sys.argv)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/__init__.py&quot;, line 381, in execute_from_command_line</span><br><span class="line">    utility.execute()</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/__init__.py&quot;, line 375, in execute</span><br><span class="line">    self.fetch_command(subcommand).run_from_argv(self.argv)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/base.py&quot;, line 323, in run_from_argv</span><br><span class="line">    self.execute(*args, **cmd_options)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/commands/runserver.py&quot;, line 60, in execute</span><br><span class="line">    super().execute(*args, **options)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/base.py&quot;, line 364, in execute</span><br><span class="line">    output = self.handle(*args, **options)</span><br><span class="line">  File &quot;/home/ngmi/lightFreq-master/my_wifi_auth_server/django_pdb/management/commands/runserver.py&quot;, line 59, in handle</span><br><span class="line">    and middleware not in settings.MIDDLEWARE_CLASSES):</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/conf/__init__.py&quot;, line 80, in __getattr__</span><br><span class="line">    val = getattr(self._wrapped, name)</span><br><span class="line">AttributeError: &apos;Settings&apos; object has no attribute &apos;MIDDLEWARE_CLASSES&apos;</span><br></pre></td></tr></table></figure><p><strong>解决方法：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">middleware = <span class="string">'django_pdb.middleware.PdbMiddleware'</span></span><br><span class="line">        <span class="keyword">if</span> ((pdb_option <span class="keyword">or</span> settings.DEBUG)</span><br><span class="line">            <span class="keyword">and</span> middleware <span class="keyword">not</span> <span class="keyword">in</span> settings.MIDDLEWARE):</span><br><span class="line">            settings.MIDDLEWARE += (middleware,)</span><br></pre></td></tr></table></figure><p>由于Django版本的问题，需要将（lightFreq-master/my_wifi_auth_server/django_pdb/management/conmands/runserver.py）以上代码中原本的MIDDLEWARE_CLASSES改为MIDDLEWARE。</p><p><strong>问题：</strong></p><figure class="highlight plain"><figcaption><span>HTTP_HOST header: '0.0.0.0:8000'. You may need to add '0.0.0.0' to ALLOWED_HOSTS.</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bad Request: /</span><br><span class="line">[09/Jul/2019 14:14:40] &quot;GET / HTTP/1.1&quot; 400 66219</span><br></pre></td></tr></table></figure><p>进入<a href="http://0.0.0.0:8000页面显示Invalid" target="_blank" rel="noopener">http://0.0.0.0:8000页面显示Invalid</a>…<br><br><strong>解决办法：</strong><br>将lightFreq-master/my_wifi_auth_server/Auth_server/settings.py文件中<code>ALLOWED_HOSTS = [&#39;192.168.1.162&#39;,&#39;127.0.0.1&#39;]</code>修改为<code>ALLOWED_HOSTS = [&#39;*&#39;]</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;基于可见光的无线网络认证&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="light-frequency-authenticate" scheme="http://yoursite.com/categories/light-frequency-authenticate/"/>
    
    
      <category term="lightFre" scheme="http://yoursite.com/tags/lightFre/"/>
    
  </entry>
  
  <entry>
    <title>perfect-quare-number</title>
    <link href="http://yoursite.com/2019/07/04/perfect-quare-number/"/>
    <id>http://yoursite.com/2019/07/04/perfect-quare-number/</id>
    <published>2019-07-04T09:48:04.000Z</published>
    <updated>2019-07-04T10:05:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">求一个数，加100和加268都是完全平方数<br>解决:unindent does not match any outer indentation level问题</blockquote><a id="more"></a><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000</span>):</span><br><span class="line">x = int(math.sqrt(i + <span class="number">100</span>))</span><br><span class="line">y = int(math.sqrt(i + <span class="number">268</span>))</span><br><span class="line"><span class="keyword">if</span> (x * x == i + <span class="number">100</span>) <span class="keyword">and</span> (y * y == i + <span class="number">268</span>):</span><br><span class="line"><span class="keyword">print</span> (i)</span><br></pre></td></tr></table></figure><h2 id="error"><a href="#error" class="headerlink" title="error"></a>error</h2><p>unindent does not match any outer indentation level：Tab换行对齐和四个空格的对齐不能混用，混用会这样报错。</p><p>print i：正确应为 print (i)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;求一个数，加100和加268都是完全平方数&lt;br&gt;解决:unindent does not match any outer indentation level问题
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="python-100-practices" scheme="http://yoursite.com/categories/python-100-practices/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>四年又三年</title>
    <link href="http://yoursite.com/2019/07/03/%E5%9B%9B%E5%B9%B4%E5%8F%88%E4%B8%89%E5%B9%B4/"/>
    <id>http://yoursite.com/2019/07/03/四年又三年/</id>
    <published>2019-07-03T13:02:40.000Z</published>
    <updated>2019-07-03T14:16:44.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>十六岁不太友好的reminder</title>
    <link href="http://yoursite.com/2019/07/03/%E6%B5%AE%E7%94%9F%E8%8B%A5%E6%A2%A6/"/>
    <id>http://yoursite.com/2019/07/03/浮生若梦/</id>
    <published>2019-07-03T11:57:29.000Z</published>
    <updated>2019-07-03T14:25:30.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
</feed>
