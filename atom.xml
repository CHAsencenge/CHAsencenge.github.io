<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>解字</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-20T15:29:00.664Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>CHAsencenge</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>push-to-git</title>
    <link href="http://yoursite.com/2019/11/20/push-to-git/"/>
    <id>http://yoursite.com/2019/11/20/push-to-git/</id>
    <published>2019-11-20T15:02:36.000Z</published>
    <updated>2019-11-20T15:29:00.664Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">push update to github repo</blockquote><h3 id="for-first-use"><a href="#for-first-use" class="headerlink" title="for first use"></a>for first use</h3><figure class="highlight plain"><figcaption><span>init ```  [^init .git]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">``` git status ```  [^check files to be added to the local repository]</span><br><span class="line"></span><br><span class="line">``` git add xxx ``` [^add files to repo]</span><br><span class="line"></span><br><span class="line">``` git commit -m &quot;commit description&quot; ``` [^commit to repo]</span><br><span class="line"></span><br><span class="line">``` git remote add origin git@github.com:mobinets/hyblora.git ``` [^link local repo to github]</span><br><span class="line"></span><br><span class="line">``` git pull --rebase origin master ``` [^pull = fetch + merge]</span><br><span class="line"></span><br><span class="line">``` git push -u origin master ``` [^upload]</span><br><span class="line"></span><br><span class="line">### not first use repo</span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line">git add xxx</span><br><span class="line">git commit -m &quot;commit discription&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote class=&quot;blockquote-center&quot;&gt;push update to github repo
&lt;/blockquote&gt;

&lt;h3 id=&quot;for-first-use&quot;&gt;&lt;a href=&quot;#for-first-use&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="command" scheme="http://yoursite.com/categories/command/"/>
    
    
  </entry>
  
  <entry>
    <title>双十一有一说一</title>
    <link href="http://yoursite.com/2019/11/11/%E5%8F%8C%E5%8D%81%E4%B8%80%E6%9C%89%E4%B8%80%E8%AF%B4%E4%B8%80/"/>
    <id>http://yoursite.com/2019/11/11/双十一有一说一/</id>
    <published>2019-11-11T04:16:55.000Z</published>
    <updated>2019-11-11T04:46:14.441Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX180YFskUutXyc37ctY/cYJWKjCJDgDSkKSmP8cPbNEuvK+qTLQkir47qPcV3bB9AH+yMKHW9L73CO5kuQpGM09uJjmq94xARmTPqU4Tde5L4j8s+y/et0jekm3mTNABdekp6aR/JRtjw0qysG8UEuy1FK0c9ye1Fa7IZq1NbaDG3G9B7OM1mSVWcMjK732mVyOilMSu6+VOQt3jYh6CmalCzPmu7w/qbli+g7yQioc6Z7CtnfbD+3ZHnWWRAFamknDZkL4BR+3I8/e1OnrA4vnqBEcPGk9hxXUpDXnF03KmlEoFze9X6HOYJ3ZB/Q1l0g/2kvHWlLO8xWjzRKw6dMK1ks9vEK8zLikUgQPPmR8MlriMKe/aE1gQ0IlSbtK4zJtJQO5lhcsHK40c0aGytSikv9uKNJu0Mik+9O7TT8unlONzb7XL+MbnEhA2VZ8/uqSbxiCjbn++qVLnhLY5vvv8836nfsgP3u9zCkt0VKXuFRjCUADEJbFN355cWTRJmb3e8dM+6+rG1GElks3h5HTVlT/vKHMNzeZd1SB0VwKHzilM8PxR9hwlVSO9bglniwE9oaPirczdAycihN12q83LXYSbBGoGepw5fCLuGhjwPnkzmg6tIE+/Bl2tvLWJ3jXCguP2TtL+IU2BcgwOgzGeY04rSECMqSG0KSIpr/BaRoVZKkbBWe7MwJD3ibH610krua0yPmB0Ye04H9bIkJoVfEVDu40FFxxaiz5vR5SOQY+DxYPh79eG78f+52yM3cMn4Mkv6yFlRX0TuttS8+HGMvsbZpf/RO83FSgeHY+GDrgeIVOJrHfeispetn79aC7kUkdd8B/tyExAlkglUaP2CNtYPb1QCDzgnusKTPUUpccHWoRK/pPJ1xCYcW2hAHVzFMwiE1sJnF/cV5mPOsLMIzk2YLqD0VEJzfMQtvQ/BP5+DG/Wi4kxBJkfb0SFUG8kOEayJGQ5TYlU4/Dxw+/rH75kQ22pqf7CVW9sRRFH0ohfS6vRDcjgi1UU2steAinVsf7J9wAbkeJ0IxCQQW3aEYKLSBUkYSg71dmizWIYYusJusJ6VGYdHlTYO4Li/TfCMoWnTJqo+ATz2Jj/gHtwlVE5RahW1PoeNR0CoA41I9iX+5hjLWT5VSA8agT1DZdeG/ifgYLiioD5T2h4lHL8947e/nYtM0lHhuZnCAvxiETmKOBsoCbLM27UtNxo63RdQmqaVtkc1kWS1xmL8A0F7slL/6EPgwwO5iIyLnAgoXkiBC+tgPHhfufPJtYhS6LgskKX2IgE61rH27keQSNH7beUcG/JA2h3Urg+z9xjBqMTmzHsspR+TgMUkZPGYxnd2qq/1JP0qins0KZb4SonvDHVCNJ6+z+aBCOY/omFeUnUsacz2i/iq49hFU3F3P7C0Q3e5XY6Cj5goFcBtWOkptJ6nL37DgxK06byal/eexwOkgsa6RPItoRfb/jlJC7m3PUxMOM6OOMwLae1fmr2b9vg8bHiU+gGk97/mdl8qRJaBEllmG15hfOrk5zfUhLk6G/unDN7W2JCbV1rEKl+okh0QODXbapyHrr61B+RCIzorqu+vKodXtK5JQVwqHT6KbjOOdBrTJKroOCaP7ebiXIuTb5UvPRqG53YWiRVCbwFRW9UaqOppBa4R6YL67sU3E5GXslNOHiz4ga6qIGOO55hbntuYhj6OqpbJQVEPILlJYQZY7T6ykLiIkHmiGmXOiI9fg/jtWdUIBdfdxIpSzwnl77nLEw4F4VoYxG93Cdtn8uBKSZfy37qftw4BZQ+5TJqhuaVXlpeC71/gIJjduTEhI6wh5ZvPZzPF9f1AGeXDxVwh+zDiCFEpEvvApDjzwXMVz3TGPIyukggIdRjXs+ywAiREnYeK5wCLePWO3NV5SR7skgvUKf4CI4mB+915ZRaJBTosoRkbwAeJQ+aD0Nl2UqZS685ZIlLMpYGpsxPbVa3Rkr93mSGVJsRw5ukCUGm/jXcXK//wdXpZMeLwjRLhUlQB73Ml2VwsE19SoBxG08rHdvlusymLFiD6pG1FwS18fgflg8URrk3k+IqSMikWbS6EQ3jeKQnqzu8LFUsRuOC+PyEImxgc8u/AeVNkJR1mUdnoL+bB2rBPWOPLQHAVPe9cgJY0/wbe9Fl1zZtJuQpXcjVq+MMHGb0RR2wFBfTOx+wRe+/YBFIKTCQDerOewDmsV59qxvgEO6sAm8SDIhkRbJdW13gkg+iMJMaMgmgCQ4R+RfKGmyWLLrPZrJ482HxEl9wmMmrE+y3HFaVbpwDxevcuZ4HqfICWMeI4KjkkU2NzysGWNgHu6yvsP919W7LrRQoQomEYR9TEAcZ5VpNU9musPd97O4SOG/FJcQTT3XaLN0b+dRIU72mEX3u8ZEmXpfTofQq3giuEYuv8o/ozvonvhpukM/z3VyyBCZRQ+4oQJgxgjU+0fUo5CPxl4UE15kFbAawTNukL82u3csEUlH+rJqIb36OuH/+qN84UNWcmPzJZfxLrJ3Wdvs1YcLBIDFtP7ywBgOI+Y2hivXCo7WlB6Ay9RmOAYAPOZSXR34cpUpUIxi8LOOIzDrORLKZYzA2bRnzPv5mNNpg+PO4r7/ReYHEW1vC0ZKnlJLOfdoXE9YHBCBW7RmPU4tnF2sENOyPTNOG9NoXbrix499SzYQyi8FIEKMVBgvxV34bfWIih9gG8A8WkBuBLea/y52qICyHkLlrzp4f9K1pOi/xR+RwQr9r3dNTeMRfK3h4enOaK799BGaUeP5O2UevyxYqz+RbNsrCN0IdTBI+P1ZIXKPNrueWlq956RtUk/YDnQG//HCNHokpIUfi1eLyvht3C1s8Cv5xZOsKzIlcS8uPyiVlu8PDJQRPgvfwk4dSBTy6PULHLxUjAn72II8emkRF2h5yjIyyFN7u77ejc9fmBPskztYunoyL/PmqCrBkeAATB/k5EYvaNz1rGNs2t/Dw7X37ksdlup4L+LH8iayX7a+n1EYK9uts7YpoZDJiq1dx3fuVPGWI+YDBMVzptpkCn0LbPq2rm7Nx6DGPltZ3+35Vu0fW2rh+sGwCsKoMAaqj0FZJGfyw/fGbLtHjcfr4+asIQEcvOjLsZvTVnLGJY3eRZGZYeRWmymWCVuPatT+FgOVTMgVO8224tH24E4OPPTpc2c42hQz3Rkf5Xn7Rd+i/YD+su3wPrWr2GbtBY3JNHVScjIivpCB9LkRZTJqsiGuU26EuqZn6OCBdGze8YcAJXY9Vw68oLUPdjJxn5s0g3SIO7Kv6J8vAXe56R2LqkJMk85MORbVQMMPXt0Ml4FeZJfO/FG+jEJa6MOFaj69DgulB+fEuQgmB4Xtk5ghMxkP28Vj0vvOxjTfsOpzpA4NqNaP7/I1RU6MvG9hh9BTxJMU4NnKH8sJpwbVzhFEW/WT6YVSrgLBgtkWfRtdJ47TNaPKO/v7ONq2OoqCJ3AvB2faZN2biHRJvnlh7uJxStVpMwegAHDo4uah1tclrWvZXyg8U33NLaarzyz3Z5d5dJR70kkm1/Bnc5JY0/WIxirEf4h4NbOzUdy9aaRHzexc/XvuyXBfNIL5JsIwiFAKniQm4+8Y7eZc+hy3vyX9O3z3TJ7f8gK88iQ9f5zmIIdkCJigjzUkmUM1OTy4n+jRrhJvjZ0gFYRcJt0VHULg2sGYyDDaMtartl3lu2SB/5rGc24ZMxozfktsczw9+0tNY+uaPun48y2Q1KQb6nslazETp8OzoY4nn5RWoWSAW424EN+a9864R+ifCq7+bVXsShrrDGurwDlQAw8jTCsBC3HUyjqy2kMuscUeH+SeUmSBsKASMVN6mRYch1HUleudYqYofqWRbMkcR0TteI9rIZLVAq9P2OZFFoGurlPS1ASlmUlC3PfuXQoTbyuaQYooeQzz/lvqfCm2RNe3fh1NcumoXtvMxjmdi5Hhvtt/oP0rMkFuDCu5o9GqmX7TiNMtwXKNUdb4tnj2iGHNX4lcNJ8uMCTfFrsj9+jB7Fq1xTddrLenxmagjKkxfgN3dTFxeMjOYZ8YnvG/YjY9eoegyopON58ucJmgQc+DgxUFyOa7X3sjzuXfvC9pgSJqBEI3uc36jU6WCmOL4Ao5rlTzEQv1t57R4AAUsmsXlzgudWohjjK+PjYs0eCe08OYYLSfbDFSuee2MGjBz6l8twZRaDIw8xdToiB+3AXfZojNWY5Fm8co/slM/KVFoppxjdRkehmnb78YOFGfIdXHsc25rF/d1ZTorQGlIqfg3E5l7a/R20GE3X8FFsOZWcnP91NT3KoPEqz5PdjC4SsCh1Hwp3/cRv+33h1A21Q9vaMWxSVa3kYCBTzpbBhpo0s7wi8dKiHhJbK6G+OpkJHoDO+HN32BZHstv4DcqsR/p1aKnHqrEU8OEzYziXMg2eFpk4AWHp37ChPhdO1GtcQNEzhVfY8zY8IoYHngOi39GzV+ud5u6DHhLF2j45PA0Q3H5bzNjXJ4tJrhU98GGycbvdBeHQ5XwRx2sW8+pjgDw4PPVRu3ZMuq543n3DzqrKMZHwzzyu3ItFiVRfQiHnTNAHAGdkpFmsMZtmn9eFrjdmZRUGTjG/sJXAmXGab9cFOJdjZQCWTjm4ZMlMU/2tv1SoV9bcL0jYIen50ut4FUkobq8/ktOKSPEmkX+oUXvl6L7yY1/3Yg0ZxryFLYhaVEfCr91RHWFWBS6hIJLplN18m4ZrHJ8ULtf46LWE4puGMxSrrdYqoDcfIbCx049XjAFXrPNZgealgPirq/T8TTsTbP+76BNrPUvSYkhJ6lEjYKjkTS1UvdGnaTdp0AXxiZu3ekviAnLFtlL1ShgZfeVapYp/xnErjzbzIGgl5O5SKFarLFg0Ho9dClaoIxhrmY0NxHhHUJlAbU6S4T8YrEYvoiOKmcjt6o4TYKmAhPdsKqoN6X26bX2kAZ/CgdbdC0iTF1a1g+lpfxhOVfZrcubOlAUOH4aZ3i2LmxDi/YIzNae0wnVt6OOt7DXSsaYGU/0oTAOS5R5/qyovhUpd+YBRKQsvuw6jYUlO5Q/1j7VhiW5r67AAh9zD8LJvvzUDHQDc1x5nBbIMhE+c5lWbn/OKwXghTtz2Z+fdv9V/DUCACUBlHGc8T9ECKX5XEPpcwX/6cuJB8GTLIFJFus5zTiaxZY34dejt3Y5imS7hXNvHYM76Yy7N1vetdEV8k+24i8sjkfT+ZmKoep687fiA42oibhuUKajSLM2Skw3yByg58aJH0v+AZ5kDQsFgMbRG8XxWX/gwoMsUbIRTKxOGsIqFR1JD7CtmKGS5fPpsA2KZeQx7y6sAfXc3CHwZJkJbWRVZRkr+M1+F/hNw6oI58kxOtQO7RFqGi1oYVbbSLcEgYOvIe3kJTOCbbwTm9nlOGwGtKZZ0OfvBt5KWN/0lnpnJwRzpbFW9wAeJ/qEO+l4Wo0Qd53YIAuVRX6WxLlTqpBefqFGxkpZr4K1QYm2FFOecwF2pVx+B3ePCSlZ/b8U+gmnzDEpvQEXC52fvwnLpBHSG6WFOc434D22OFz19i8RtG7tBnjYIOk25IF3r/rO7MkxpdycOJJS/MV0mOsILVUnI59+l7DvdKTiQOfl6V4XEGf1b5S3HMook6oMTVGQfbRTBl6GmBUb2swzdVUUqJ5n7PYPgvcGlRN8gCw8QqyHPKULJcjbkmTQHaEwQjljqq5JKzs/Gk+Vqay4jmt/DrmrqEjqaAoZQj6PI3RVmKaFY49SVbwYvaTJl/6owtDUgFaAfK2RhJGL6wCzfoXHTkgNId1AbrE15n8PWCWaoHBFO4nMr+duf1Hk8fyVtftm9ZdZEHkWyzxGKqQcEEtIRRxg3djyT9aVUgiBaT3kBxxZuP26FupivQ04S4XnXM+b54iR2TubrRPlcHg0ePFIz+PIMq0U9QhHop4qMwHtkVSYkkcVVS0tjOJGxPnHsf2ml2hEukylE648C8Z8B6McZ4RLqjcE0HTslVSmayeR8g8l1qrtKvnbzHmS8dYr8yQCrcTetLAVeiigAA5foJN9/JLdlNlfJBqwYGFkYMyP8nejln/s4Cw/DlaBx2/MIHQ9ZioXcWjLhNVae6TkUmzedeh8jXOehCpRGQb7yi4IqtddyBI1Yag5JvER6ZabTkXkCSn2tuJz+sbc+5et/DElh5pU/DenOGdZTaeuoYptKNzMIv/G4ijtlRGE6skIrQQP26PvOZMXVuEOSCiY/glvEB0+Kgy22TsMz/2N3lyqyFGU4z25EOlVCyJdf0ab9SX1ElL/hzoNQJH6R29sjJlBYeSKvwXN+qrm06rcryj9UtdhYvwqLn0Cu3Dky8UgN+7650sZAZxCpblkeRNR7O+ncOt1fg2788rJLJmvUQ+a+L5aEqP2/6nN3LQ52a9la68ayDCekDjJCQ7XXjLi8Ye8OJQK0/AS6tB+YAt2IAbj6lWHEm9d9/syfLtaBHB/FdZTjoWdU99+hyXee8QNSRx4YTrYw4UmtlWFWME7N93A9hXxi1HKItQdw4HG1Ykt9Ji7tpGRB3Ve5fjrisy0WmzwwTos7SCrhy6ybSIsOh/XzF43M8+zbHhmP5XVrAES+ty11t5PtFff/pzSDSlt1fUZjIt+9JqB35fQaLXxfJ4yFUsV+8uCXWWfCaRisSDpQg9ubKxhuGhAWp2fYcAQxfr7Z2b9UfmX/TPQMwnkgIsxxwtWee3gTeJUmeVeOw3N2bgSZIS3DQeO1EnwaYxNnk1eGazcF8MkKb0w8kX+yppWU+MtZGmLQ3osPEs0pe2j32ils3yaNXAZXp5Q6CkZPeHiF4oLBeLyDauR7nbyWdovqh0EDboZ/EkO4g4bK7s42+3pUe+9VjM8sxf2GRL7Cgd1kvN678DfkklIv6lBGf1xxwWCIuQDaWXUePHDeof7i2RIsxb1Ky9SzCQT/Jzm3BHixHwYTeEa/X4190lXNCremwGBwMx739FTLCPmHtfUTEvjtv91CBaBQd4FIL0Ke4YvLSe/WK+wmbSJroavzaC9RluQw/vrlwHBI0nLuOAUhb25coBK/d3VxbfqrOkZ+bLjEZh3SxYJqrPrAIHjx1RLorwfjRorzin+Mbu/ywDR/gZohgeQt98Pj86al5eEkw90crqvVwiSBSNG95TSJgAq2LYGQisxd4XSAwqb2U/yj8Vcqlfo8SZfkXOtu3n2cydwDXAHcoLRsmLfLTT4mYxSrNsIMs+6UQXZtxHJ1foObHyov4l3eeugnR3dkJQYCn0BcOiUo4Id/FQKGuNGLinhLmIef+yF9c+dKBKEO767Sy5r2sRMNrWrvDrgYHqxVNvgSRcgDFnDmoTzCeouFBRb1QsdkJTGDEmKWFobODYrySxAyxWUrQ2MMqpV60UhhRX2X1WnZN5ZcI55grGBP6ueeq95n+luf8+EJt/ySG/NmMUTUBwc8DoSlnHZjqp45WPZg6JkDVZe6mZdkVtuVKfRlRGZyyOfiH2QX7RB9WJoJGQXHeWRsaUC+HaEQ1Lq6456otgMqTbtIP6nXh0ooEA2jvUxGaLDlpnY9nkwXFuZOtJmpRUjOtwmgUKIxcwEk+R+ljpM5il8p2LqkIo7kyPTmjY5ZyxhMAFxE/X1sFrOT1prfSBjKWl+/ne5AePMtkhlTmSpEgIJzCdBEyjYuW5KcBqkD9aMCkb7d5uE3QWAA+rCPSqP/Unzu3lqaRil113SpSUzNoGUHHLoL1+Kxdci5e+Q/39H3PSsFGxbqlJPWnW8IqFPSKVKs0lxeZpcseM0rREWdMAeaaD2dHydQ0N36UGI2LROUErGzFMIjWK6Sh6rxA8g7MRYQ5bVMdTuST5J3IaP5qWiWBAlzr12dndoE9gyS4cohHSPdKC876dG59OgEbqDHuBWweWWw/iOzSRbYqJlq3IZQ2hBnyNg3BM2xryOzLqeRHrHNtawaCrXquciIh9gEnKDwV82sxP+wfEeM8lddDAmw5C3byfmEA1rIBdjlcoQe8JE</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>partical filter</title>
    <link href="http://yoursite.com/2019/09/23/partical-filter/"/>
    <id>http://yoursite.com/2019/09/23/partical-filter/</id>
    <published>2019-09-23T05:36:58.000Z</published>
    <updated>2019-10-23T12:36:37.284Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> scipy <span class="keyword">as</span> scipy</span><br><span class="line"><span class="keyword">from</span> numpy.random <span class="keyword">import</span> uniform</span><br><span class="line"><span class="keyword">import</span> scipy.stats</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">np.set_printoptions(threshold=<span class="number">3</span>)</span><br><span class="line">np.set_printoptions(suppress=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawLines</span><span class="params">(img, points, r, g, b)</span>:</span></span><br><span class="line">    cv2.polylines(img, [np.int32(points)], isClosed=<span class="literal">False</span>, color=(r, g, b))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">drawCross</span><span class="params">(img, center, r, g, b)</span>:</span></span><br><span class="line">    d = <span class="number">5</span></span><br><span class="line">    t = <span class="number">2</span></span><br><span class="line">    LINE_AA = cv2.LINE_AA <span class="keyword">if</span> cv2.__version__[<span class="number">0</span>] == <span class="string">'3'</span> <span class="keyword">else</span> cv2.CV_AA</span><br><span class="line">    color = (r, g, b)</span><br><span class="line">    ctrx = center[<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    ctry = center[<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">    cv2.line(img, (ctrx - d, ctry - d), (ctrx + d, ctry + d), color, t, LINE_AA)</span><br><span class="line">    cv2.line(img, (ctrx + d, ctry - d), (ctrx - d, ctry + d), color, t, LINE_AA)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mouseCallback</span><span class="params">(event, x, y, flags,null)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> center</span><br><span class="line">    <span class="keyword">global</span> trajectory</span><br><span class="line">    <span class="keyword">global</span> previous_x</span><br><span class="line">    <span class="keyword">global</span> previous_y</span><br><span class="line">    <span class="keyword">global</span> zs</span><br><span class="line">    </span><br><span class="line">    center=np.array([[x,y]])</span><br><span class="line">    trajectory=np.vstack((trajectory,np.array([x,y])))</span><br><span class="line">    <span class="comment">#noise=sensorSigma * np.random.randn(1,2) + sensorMu</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> previous_x &gt;<span class="number">0</span>:</span><br><span class="line">        heading=np.arctan2(np.array([y-previous_y]), np.array([previous_x-x ]))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> heading&gt;<span class="number">0</span>:</span><br><span class="line">            heading=-(heading-np.pi)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            heading=-(np.pi+heading)</span><br><span class="line">            </span><br><span class="line">        distance=np.linalg.norm(np.array([[previous_x,previous_y]])-np.array([[x,y]]) ,axis=<span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        std=np.array([<span class="number">2</span>,<span class="number">4</span>])</span><br><span class="line">        u=np.array([heading,distance])</span><br><span class="line">        predict(particles, u, std, dt=<span class="number">1.</span>)</span><br><span class="line">        zs = (np.linalg.norm(landmarks - center, axis=<span class="number">1</span>) + (np.random.randn(NL) * sensor_std_err))</span><br><span class="line">        update(particles, weights, z=zs, R=<span class="number">50</span>, landmarks=landmarks)</span><br><span class="line">        </span><br><span class="line">        indexes = systematic_resample(weights)</span><br><span class="line">        resample_from_index(particles, weights, indexes)</span><br><span class="line"></span><br><span class="line">    previous_x=x</span><br><span class="line">    previous_y=y</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WIDTH=<span class="number">800</span></span><br><span class="line">HEIGHT=<span class="number">600</span></span><br><span class="line">WINDOW_NAME=<span class="string">"Particle Filter"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sensorMu=0</span></span><br><span class="line"><span class="comment">#sensorSigma=3</span></span><br><span class="line"></span><br><span class="line">sensor_std_err=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_uniform_particles</span><span class="params">(x_range, y_range, N)</span>:</span></span><br><span class="line">    particles = np.empty((N, <span class="number">2</span>))</span><br><span class="line">    particles[:, <span class="number">0</span>] = uniform(x_range[<span class="number">0</span>], x_range[<span class="number">1</span>], size=N)</span><br><span class="line">    particles[:, <span class="number">1</span>] = uniform(y_range[<span class="number">0</span>], y_range[<span class="number">1</span>], size=N)</span><br><span class="line">    <span class="keyword">return</span> particles</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(particles, u, std, dt=<span class="number">1.</span>)</span>:</span></span><br><span class="line">    N = len(particles)</span><br><span class="line">    dist = (u[<span class="number">1</span>] * dt) + (np.random.randn(N) * std[<span class="number">1</span>])</span><br><span class="line">    particles[:, <span class="number">0</span>] += np.cos(u[<span class="number">0</span>]) * dist</span><br><span class="line">    particles[:, <span class="number">1</span>] += np.sin(u[<span class="number">0</span>]) * dist</span><br><span class="line">   </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(particles, weights, z, R, landmarks)</span>:</span></span><br><span class="line">    weights.fill(<span class="number">1.</span>)</span><br><span class="line">    <span class="keyword">for</span> i, landmark <span class="keyword">in</span> enumerate(landmarks):</span><br><span class="line">       </span><br><span class="line">        distance=np.power((particles[:,<span class="number">0</span>] - landmark[<span class="number">0</span>])**<span class="number">2</span> +(particles[:,<span class="number">1</span>] - landmark[<span class="number">1</span>])**<span class="number">2</span>,<span class="number">0.5</span>)</span><br><span class="line">        weights *= scipy.stats.norm(distance, R).pdf(z[i])</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    weights += <span class="number">1.e-300</span> <span class="comment"># avoid round-off to zero</span></span><br><span class="line">    weights /= sum(weights)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">neff</span><span class="params">(weights)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1.</span> / np.sum(np.square(weights))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">systematic_resample</span><span class="params">(weights)</span>:</span></span><br><span class="line">    N = len(weights)</span><br><span class="line">    positions = (np.arange(N) + np.random.random()) / N</span><br><span class="line"></span><br><span class="line">    indexes = np.zeros(N, <span class="string">'i'</span>)</span><br><span class="line">    cumulative_sum = np.cumsum(weights)</span><br><span class="line">    i, j = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; N <span class="keyword">and</span> j&lt;N:</span><br><span class="line">        <span class="keyword">if</span> positions[i] &lt; cumulative_sum[j]:</span><br><span class="line">            indexes[i] = j</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> indexes</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate</span><span class="params">(particles, weights)</span>:</span></span><br><span class="line">    pos = particles[:, <span class="number">0</span>:<span class="number">1</span>]</span><br><span class="line">    mean = np.average(pos, weights=weights, axis=<span class="number">0</span>)</span><br><span class="line">    var = np.average((pos - mean)**<span class="number">2</span>, weights=weights, axis=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> mean, var</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resample_from_index</span><span class="params">(particles, weights, indexes)</span>:</span></span><br><span class="line">    particles[:] = particles[indexes]</span><br><span class="line">    weights[:] = weights[indexes]</span><br><span class="line">    weights /= np.sum(weights)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">x_range=np.array([<span class="number">0</span>,<span class="number">800</span>])</span><br><span class="line">y_range=np.array([<span class="number">0</span>,<span class="number">600</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#Number of partciles</span></span><br><span class="line">N=<span class="number">400</span></span><br><span class="line"></span><br><span class="line">landmarks=np.array([ [<span class="number">144</span>,<span class="number">73</span>], [<span class="number">410</span>,<span class="number">13</span>], [<span class="number">336</span>,<span class="number">175</span>], [<span class="number">718</span>,<span class="number">159</span>], [<span class="number">178</span>,<span class="number">484</span>], [<span class="number">665</span>,<span class="number">464</span>]  ])</span><br><span class="line">NL = len(landmarks)</span><br><span class="line">particles=create_uniform_particles(x_range, y_range, N)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">weights = np.array([<span class="number">1.0</span>]*N)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a black image, a window and bind the function to window</span></span><br><span class="line">img = np.zeros((HEIGHT,WIDTH,<span class="number">3</span>), np.uint8)</span><br><span class="line">cv2.namedWindow(WINDOW_NAME)</span><br><span class="line">cv2.setMouseCallback(WINDOW_NAME,mouseCallback)</span><br><span class="line"></span><br><span class="line">center=np.array([[<span class="number">-10</span>,<span class="number">-10</span>]])</span><br><span class="line"></span><br><span class="line">trajectory=np.zeros(shape=(<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line">robot_pos=np.zeros(shape=(<span class="number">0</span>,<span class="number">2</span>))</span><br><span class="line">previous_x=<span class="number">-1</span></span><br><span class="line">previous_y=<span class="number">-1</span></span><br><span class="line">DELAY_MSEC=<span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line"></span><br><span class="line">    cv2.imshow(WINDOW_NAME,img)</span><br><span class="line">    img = np.zeros((HEIGHT,WIDTH,<span class="number">3</span>), np.uint8)</span><br><span class="line">    drawLines(img, trajectory,   <span class="number">0</span>,   <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">    drawCross(img, center, r=<span class="number">255</span>, g=<span class="number">0</span>, b=<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#landmarks</span></span><br><span class="line">    <span class="keyword">for</span> landmark <span class="keyword">in</span> landmarks:</span><br><span class="line">        cv2.circle(img,tuple(landmark),<span class="number">10</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">-1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#draw_particles:</span></span><br><span class="line">    <span class="keyword">for</span> particle <span class="keyword">in</span> particles:</span><br><span class="line">        cv2.circle(img,tuple((int(particle[<span class="number">0</span>]),int(particle[<span class="number">1</span>]))),<span class="number">1</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> cv2.waitKey(DELAY_MSEC) &amp; <span class="number">0xFF</span> == <span class="number">27</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    </span><br><span class="line">    cv2.circle(img,(<span class="number">10</span>,<span class="number">10</span>),<span class="number">10</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>),<span class="number">-1</span>)</span><br><span class="line">    cv2.circle(img,(<span class="number">10</span>,<span class="number">30</span>),<span class="number">3</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),<span class="number">-1</span>)</span><br><span class="line">    cv2.putText(img,<span class="string">"Landmarks"</span>,(<span class="number">30</span>,<span class="number">20</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    cv2.putText(img,<span class="string">"Particles"</span>,(<span class="number">30</span>,<span class="number">40</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">    cv2.putText(img,<span class="string">"Robot Trajectory(Ground truth)"</span>,(<span class="number">30</span>,<span class="number">60</span>),<span class="number">1</span>,<span class="number">1.0</span>,(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    drawLines(img, np.array([[<span class="number">10</span>,<span class="number">55</span>],[<span class="number">25</span>,<span class="number">55</span>]]), <span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><h2 id="如何安装依赖并运行"><a href="#如何安装依赖并运行" class="headerlink" title="如何安装依赖并运行"></a>如何安装依赖并运行</h2><p>打开anaconda prompt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">conda create -n Filters python=3</span><br><span class="line">conda activate Filters</span><br><span class="line">conda install -c menpo opencv3</span><br><span class="line">conda install numpy scipy matplotlib sympy</span><br></pre></td></tr></table></figure><p>cd python_code<br>python partical.py<br>python partical_v2.py</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>新生活你要怎么过</title>
    <link href="http://yoursite.com/2019/09/16/%E6%96%B0%E7%94%9F%E6%B4%BB%E4%BD%A0%E8%A6%81%E6%80%8E%E4%B9%88%E8%BF%87/"/>
    <id>http://yoursite.com/2019/09/16/新生活你要怎么过/</id>
    <published>2019-09-16T15:06:07.000Z</published>
    <updated>2019-09-16T15:27:31.657Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19JWStrVLQjXM73+ieG9xoyj5E3bu5aDnI=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>readme</title>
    <link href="http://yoursite.com/2019/09/14/readme/"/>
    <id>http://yoursite.com/2019/09/14/readme/</id>
    <published>2019-09-14T15:52:50.000Z</published>
    <updated>2019-11-11T04:59:19.890Z</updated>
    
    <content type="html"><![CDATA[<p>hexo文件夹中，git bash here</p><p>hexo new ‘’</p><p>hexo clean</p><p>hexo g</p><p>hexo d</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hexo文件夹中，git bash here&lt;/p&gt;
&lt;p&gt;hexo new ‘’&lt;/p&gt;
&lt;p&gt;hexo clean&lt;/p&gt;
&lt;p&gt;hexo g&lt;/p&gt;
&lt;p&gt;hexo d&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>你的上限真的很高吗</title>
    <link href="http://yoursite.com/2019/09/14/%E4%BD%A0%E7%9A%84%E4%B8%8A%E9%99%90%E7%9C%9F%E7%9A%84%E5%BE%88%E9%AB%98%E5%90%97/"/>
    <id>http://yoursite.com/2019/09/14/你的上限真的很高吗/</id>
    <published>2019-09-14T15:52:50.000Z</published>
    <updated>2019-09-14T15:52:50.303Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>矛盾论</title>
    <link href="http://yoursite.com/2019/09/13/%E7%9F%9B%E7%9B%BE%E8%AE%BA/"/>
    <id>http://yoursite.com/2019/09/13/矛盾论/</id>
    <published>2019-09-13T07:24:37.000Z</published>
    <updated>2019-09-16T15:32:03.483Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>电脑迁移</title>
    <link href="http://yoursite.com/2019/09/13/%E7%94%B5%E8%84%91%E8%BF%81%E7%A7%BB/"/>
    <id>http://yoursite.com/2019/09/13/电脑迁移/</id>
    <published>2019-09-13T04:51:27.000Z</published>
    <updated>2019-09-13T04:54:40.402Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX19f7eebaMQ70MPn6B8eeAG4KWOziRBMNwjwsjZoW0R2LBUFpJWPW+XGk+AA330ET7ZFF6DcEnc/Uzqbzu+AaqFJdDtEQrWKSZtAXHWOoev9nFb1f9ixyDmVGDjoqG6FvKrPEzZRi14ljhVO49KXuzgBl7J9gcfMeO1npZnpjGHP/LdQWnDAaers22EdijXJ0EnpklagjUXxa+0HCtYwW5mipchdJY9AQ35ZCSbrb8o2GwqqA8GtsRifDWgKbkghPDxmNiop4pkCYgImVHI3K67jcOG9YanR3f/sEokghHBnX8krBgjTOKYEQtcMx+wWtnvwSq9qVJazlOifqGBHeGN6WQ7rItdOSRbdIf0NU3ltIIJ/sETTwl5o</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/09/12/hello-world/"/>
    <id>http://yoursite.com/2019/09/12/hello-world/</id>
    <published>2019-09-12T14:27:15.898Z</published>
    <updated>2019-07-03T10:54:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>python yield</title>
    <link href="http://yoursite.com/2019/07/25/python-yield/"/>
    <id>http://yoursite.com/2019/07/25/python-yield/</id>
    <published>2019-07-25T06:59:22.000Z</published>
    <updated>2019-07-25T08:31:30.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">python中yield关键字的用法</blockquote><a id="more"></a><h2 id="迭代-iteration-与可迭代-iterable"><a href="#迭代-iteration-与可迭代-iterable" class="headerlink" title="迭代(iteration)与可迭代(iterable)"></a>迭代(iteration)与可迭代(iterable)</h2><p>使用<strong>容器</strong>时逐个获取元素的过程为<strong>迭代</strong>。</p><h2 id="哪些类型是可迭代的"><a href="#哪些类型是可迭代的" class="headerlink" title="哪些类型是可迭代的"></a>哪些类型是可迭代的</h2><ul><li>python中的顺序类型： <code>list</code>, <code>tuple</code>(元组，列表可修改元组不可修改，列表用中括号元组用小括号), <code>string</code>.</li><li><code>dict</code>, <code>set</code>, <code>file</code>.</li><li>某类对象提供了 <code>__iter__()</code> 或者 <code>__getitem__()</code> 方法.</li></ul><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><p>对迭代器不断调用<code>next()</code>方法，可依次获取下一个元素，迭代器<code>__iter__()</code>方法返回迭代器自身，因此迭代器也是可迭代的。</p><h2 id="迭代器协议-iterator-protocol"><a href="#迭代器协议-iterator-protocol" class="headerlink" title="迭代器协议(iterator protocol)"></a>迭代器协议(iterator protocol)</h2><p>一个容器提供<code>__iter__()</code>方法，该方法能返回一个能逐个访问容器内所有元素的迭代器，则该容器实现了迭代器协议。</p><h3 id="python处理for循环的过程"><a href="#python处理for循环的过程" class="headerlink" title="python处理for循环的过程"></a>python处理for循环的过程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> something:</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><p>处理for循环首先调用内建函数<code>iter(something)</code>,内建函数调用<code>something.__iter__()</code>,返回something对应的迭代器，然后for循环会调用内建函数<code>next()</code>，作用在迭代器上获取迭代器的下一个元素，并赋值给x</p><h2 id="生成器函数-generaor-function-和生成器-generator"><a href="#生成器函数-generaor-function-和生成器-generator" class="headerlink" title="生成器函数(generaor function)和生成器(generator)"></a>生成器函数(generaor function)和生成器(generator)</h2><p>如果一个函数包含 yield 表达式，那么它是一个生成器函数；调用它会返回一个特殊的迭代器，称为生成器。</p><p>生成器函数被调用后，其函数体内的代码并不会立即执行，而是返回一个生成器（generator-iterator）。当返回的生成器调用成员方法时，相应的生成器函数中的代码才会执行。</p><h2 id="“下一个yield表达式”"><a href="#“下一个yield表达式”" class="headerlink" title="“下一个yield表达式”"></a>“下一个yield表达式”</h2><p>调用 generator.next() 时，生成器函数会从当前位置开始执行到下一个 yield 表达式。这里的「下一个」指的是执行逻辑的下一个。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f123</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> f123(): <span class="comment"># 1, 2, and 3, will be printed</span></span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f13</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">False</span>:</span><br><span class="line">        <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> f13(): <span class="comment"># 1 and 3, will be printed</span></span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><h3 id="使用-send-方法与生成器函数通信"><a href="#使用-send-方法与生成器函数通信" class="headerlink" title="使用 send() 方法与生成器函数通信"></a>使用 send() 方法与生成器函数通信</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    x = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        y = (<span class="keyword">yield</span> x)</span><br><span class="line">        x += y</span><br><span class="line"></span><br><span class="line">geniter = func()</span><br><span class="line">geniter.next()  <span class="comment"># 1</span></span><br><span class="line">geniter.send(<span class="number">3</span>) <span class="comment"># 4</span></span><br><span class="line">geniter.send(<span class="number">10</span>)<span class="comment"># 14</span></span><br></pre></td></tr></table></figure><p>生成器函数 func 用 yield 表达式，将处理好的 x 发送给生成器的调用者；与此同时，生成器的调用者通过 send 函数，将外部信息作为生成器函数内部的 yield 表达式的值，保存在 y 当中，并参与后续的处理。</p><h2 id="yield的好处"><a href="#yield的好处" class="headerlink" title="yield的好处"></a>yield的好处</h2><p>顺序访问容器内的前五个元素：</p><ul><li>way1:获取所有元素然后取前五</li><li>way2:逐个迭代，至第五个元素</li></ul><p>假设对于一个func(),返回值为列表，调用者对其返回值只有逐个迭代：</p><ul><li>若等函数生成所有元素可能需要很长时间</li><li>使用yield把func()变成一个生成器函数，每次产生一个元素，可以节省开销</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;python中yield关键字的用法
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>又梦</title>
    <link href="http://yoursite.com/2019/07/19/%E5%8F%88%E6%A2%A6/"/>
    <id>http://yoursite.com/2019/07/19/又梦/</id>
    <published>2019-07-19T02:55:49.000Z</published>
    <updated>2019-07-19T03:06:28.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>非极客</title>
    <link href="http://yoursite.com/2019/07/19/%E9%9D%9E%E6%9E%81%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/07/19/非极客/</id>
    <published>2019-07-19T02:26:12.000Z</published>
    <updated>2019-07-19T02:52:30.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>复现vifi相关</title>
    <link href="http://yoursite.com/2019/07/18/%E5%A4%8D%E7%8E%B0vifi%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2019/07/18/复现vifi相关/</id>
    <published>2019-07-18T10:35:47.000Z</published>
    <updated>2019-07-19T03:06:48.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">复现vifi过程中涉及的相关知识</blockquote><a id="more"></a>### ]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;复现vifi过程中涉及的相关知识&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Gradle(转载自Bonker)</title>
    <link href="http://yoursite.com/2019/07/18/Gradle/"/>
    <id>http://yoursite.com/2019/07/18/Gradle/</id>
    <published>2019-07-18T08:38:29.000Z</published>
    <updated>2019-07-18T08:53:20.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">关于Android开发中的Gradle</blockquote><a id="more"></a><p>(转载自Bonker）原文链接：<a href="https://www.cnblogs.com/Bonker/p/5619458.html" target="_blank" rel="noopener">https://www.cnblogs.com/Bonker/p/5619458.html</a></p><h2 id="什么是Gradle"><a href="#什么是Gradle" class="headerlink" title="什么是Gradle"></a>什么是Gradle</h2><p>简单的说，Gradle是一个构建工具，它是用来帮助我们构建app的，构建包括编译、打包等过程。我们可以为Gradle指定构建规则，然后它就会根据我们的“命令”自动为我们构建app。Android Studio中默认就使用Gradle来完成应用的构建。有些同学可能会有疑问：”我用AS不记得给Gradle指定过什么构建规则呀，最后不还是能搞出来个apk。“ 实际上，app的构建过程是大同小异的，有一些过程是”通用“的，也就是每个app的构建都要经历一些公共步骤。因此，在我们在创建工程时，Android Studio自动帮我们生成了一些通用构建规则，很多时候我们甚至完全不用修改这些规则就能完成我们app的构建。</p><p>有些时候，我们会有一些个性化的构建需求，比如我们引入了第三方库，或者我们想要在通用构建过程中做一些其他的事情，这时我们就要自己在系统默认构建规则上做一些修改。这时候我们就要自己向Gradle”下命令“了，这时候我们就需要用Gradle能听懂的话了，也就是Groovy。Groovy是一种基于JVM的动态语言，关于它的具体介绍，感兴趣的同学可以文末参考”延伸阅读“部分给出的链接。</p><p>我们在开头处提到“Gradle是一种构建工具”。实际上，当我们想要更灵活的构建过程时，Gradle就成为了一个编程框架——我们可以通过编程让构建过程按我们的意愿进行。也就是说，当我们把Gradle作为构建工具使用时，我们只需要掌握它的配置脚本的基本写法就OK了；而当我们需要对构建流程进行高度定制时，就务必要掌握Groovy等相关知识了。限于篇幅，本文只从构建工具使用者的角度来介绍Gradle的一些最佳实践，在文末“延伸阅读”部分给出了几篇高质量的深入介绍Gradle的文章，其中包含了Groovy等知识的介绍。</p><h2 id="Gradle的基本组分"><a href="#Gradle的基本组分" class="headerlink" title="Gradle的基本组分"></a>Gradle的基本组分</h2><h3 id="Project与Task"><a href="#Project与Task" class="headerlink" title="Project与Task"></a>Project与Task</h3><p>在Gradle中，每一个待构建的工程是一个Project，构建一个Project需要执行一系列Task，比如编译、打包这些构建过程的子过程都对应着一个Task。具体来说，一个apk文件的构建包含以下Task：Java源码编译、资源文件编译、Lint检查、打包以生成最终的apk文件等等。</p><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>插件的核心工作有两个：一是定义Task；而是执行Task。也就是说，我们想让Gradle能正常工作，完成整个构建流程中的一系列Task的执行，必须导入合适的插件，这些插件中定义了构建Project中的一系列Task，并且负责执行相应的Task。</p><p>在新建工程的app模块的build.gradle文件的第一行，往往都是如下这句：</p><p>apply plugin: ‘com.android.application’<br>这句话的意思就是应用“com.android.application“这个插件来构建app模块，app模块就是Gradle中的一个Project。也就是说，这个插件负责定义并执行Java源码编译、资源文件编译、打包等一系列Task。实际上”com.android.application”整个插件中定义了如下4个顶级任务：</p><p>assemble: 构建项目的输出（apk）</p><p>check: 进行校验工作</p><p>build: 执行assemble任务与check任务</p><p>clean: 清除项目的输出</p><p>当我们执行一个任务时，会自动执行它所依赖的任务。比如，执行assemble任务会执行assembleDebug任务和assembleRelease任务，这是因为一个Android项目至少要有debug和release这两个版本的输出。</p><h3 id="Gradle配置文件"><a href="#Gradle配置文件" class="headerlink" title="Gradle配置文件"></a>Gradle配置文件</h3><p>我们在Android Studio中新建一个工程，可以得到如下的工程结构图：</p><p>上面我们说过，Android Studio中的一个Module即为Gradle中的一个Project。上图的app目录下，存在一个build.gradle文件，代表了app Module的构建脚本，它定义了应用于本模块的构建规则。我们可以看到，工程根目录下也存在一个build.gradle文件，它代表了整个工程的构建，其中定义了适用于这个工程中所有模块的构建规则。</p><p>接下来我们介绍一下上图中其他几个Gradle配置文件：</p><p>gradle.properties: 从它的名字可以看出，这个文件中定义了一系列“属性”。实际上，这个文件中定义了一系列供build.gradle使用的常量，比如keystore的存储路径、keyalias等等。</p><p>gradlew与gradlew.bat: gradlew为Linux下的shell脚本，gradlew.bat是Windows下的批处理文件。gradlew是gradle wrapper的缩写，也就是说它对gradle的命令进行了包装，比如我们进入到指定Module目录并执行“gradlew.bat assemble”即可完成对当前Module的构建（Windows系统下）。</p><p>local.properties: 从名字就可以看出来，这个文件中定义了一些本地属性，比如SDK的路径。</p><p>settings.gradle: 假如我们的项目包含了不只一个Module时，我们想要一次性构建所有Module以完成整个项目的构建，这时我们需要用到这个文件。比如我们的项目包含了ModuleA和ModuleB这两个模块，则这个文件中会包含这样的语句：include ‘:ModuleA’, ‘:ModuleB’。</p><h3 id="构建脚本"><a href="#构建脚本" class="headerlink" title="构建脚本"></a>构建脚本</h3><p>首先我们来看一下工程目录下的build.gradle，它指定了真个整个项目的构建规则，它的内容如下：</p><figure class="highlight plain"><figcaption><span>&#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    repositories &#123;</span><br><span class="line">        jcenter() //构建脚本中所依赖的库都在jcenter仓库下载</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        //指定了gradle插件的版本</span><br><span class="line">        classpath &apos;com.android.tools.build:gradle:1.5.0&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        //当前项目所有模块所依赖的库都在jcenter仓库下载</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">我们再来简单介绍下app模块的build.gradle的内容：</span><br></pre></td></tr></table></figure><p>//加载用于构建Android项目的插件<br>apply plugin: ‘com.android.application’</p><p>android { //构建Android项目使用的配置<br>    compileSdkVersion 23 //指定编译项目时使用的SDK版本<br>    buildToolsVersion “23.0.1” //指定构建工具的版本</p><pre><code>defaultConfig {    applicationId &quot;com.absfree.debugframwork&quot; //包名    minSdkVersion 15  //指定支持的最小SDK版本    targetSdkVersion 23 //针对的目标SDK版本    versionCode 1     versionName &quot;1.0&quot;}buildTypes { //针对不同的构建版本进行一些设置    release { //对release版本进行的设置        minifyEnabled false //是否开启混淆        proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;  //指定混淆文件的位置    }}</code></pre><p>}</p><p>dependencies { //指定当前模块的依赖<br>    compile fileTree(dir: ‘libs’, include: [‘*.jar’])<br>    testCompile ‘junit:junit:4.12’<br>    compile ‘com.android.support:appcompat-v7:23.1.1’<br>    compile ‘com.android.support:design:23.1.1’<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"></span><br><span class="line">## 常见配置</span><br><span class="line"></span><br><span class="line">整个工程的build.gradle通常不需我们改动，这里我们介绍下一些对模块目录下build.gradle文件的常见配置。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 依赖第三方库</span><br><span class="line"></span><br><span class="line">当我们的项目中用到了了一些第三方库时，我们就需要进行一些配置，以保证能正确导入相关依赖。设置方法很简单，比如我们在app模块中中用到了Fresco，只需要在build.gradle文件中的dependencies块添加如下语句：</span><br></pre></td></tr></table></figure><p>dependencies {<br>    …<br>    compile ‘com.facebook.fresco:fresco:0.11.0’<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">这样一来，Gradle会自动从jcenter仓库下载我们所需的第三方库并导入到项目中。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 导入本地jar包</span><br><span class="line"></span><br><span class="line">在使用第三方库时，除了像上面那样从jcenter仓库下载，我们还可以导入本地的jar包。配置方法也很简单，只需要先把jar文件添加到app\libs目录下，然后在相应jar文件上单击右键，选择“Ad As Library”。然后在build.gradle的dependencies块下添加如下语句：</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">compile files(&apos;libs/xxx.jar&apos;)</span><br><span class="line">实际上我们可以看到，系统为我们创建的build.gradle中就已经包含了如下语句：</span><br><span class="line"></span><br><span class="line">compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">这句话的意思是，将libs目录下的所有jar包都导入。所以实际上我们只需要把jar包添加到libs目录下并“Ad As Library&quot;即可。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 依赖其它模块</span><br><span class="line"></span><br><span class="line">假设我们的项目包含了多个模块，并且app模块依赖other模块，那么我们只需app\build.gradle的denpendencies块下添加如下语句：</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">compile project(&apos;:other&apos;)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 构建输出为aar文件</span><br><span class="line"></span><br><span class="line">通常我们构建的输出目标都是apk文件，但如果我们的当前项目时Android Library，我们的目标输出就是aar文件。要想达到这个目的也很容易，只需要把build.gradle的第一句改为如下：</span><br><span class="line"></span><br><span class="line">apply plugin:&apos;com.android.library&apos;</span><br><span class="line">这话表示我们使用的插件不再是构建Android应用的插件，而是构建Android Library的插件，这个插件定义并执行用于构建Android Library的一系列Task。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">### 自动移除不再使用的资源</span><br><span class="line"></span><br><span class="line">只需进行如下配置：</span><br></pre></td></tr></table></figure><p>android {<br>    …<br>    }<br>    buildTypes {<br>        release {<br>            …<br>            shrinkResources true<br>            …<br>        }<br>    }<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 忽略Lint错误</span><br><span class="line"></span><br><span class="line">在我们构建Android项目的过程中，有时候会由于Lint错误而终止。当这些错误来自第三方库中时，我们往往想要忽略这些错误从而继续构建进程。这时候，我们可以只需进行如下配置：</span><br></pre></td></tr></table></figure><p>android {<br>    …<br>    lintOptions {<br>        abortOnError false<br>    }<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 集成签名配置</span><br><span class="line"></span><br><span class="line">在构建release版本的Android项目时，每次都手动导入签名文件，键入密码、keyalias等信息十分麻烦。通过将签名配置集成到构建脚本中，我们就不必每次构建发行版本时都手动设置了。具体配置如下：</span><br></pre></td></tr></table></figure><p>signingConfigs {<br>    myConfig { //将”xx”替换为自己的签名文件信息<br>        storeFile file(“xx.jks”)<br>        storePassword “xx”<br>        keyAlias “xx”<br>        keyPassword “xx”<br>    }<br>}<br>android {<br>    buildTypes {<br>        release {<br>            signingConfig  signingConfigs.myConfig //在release块中加入这行<br>            …<br>        }<br>    }<br>    …<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">真实开发中，我们不应该把密码等信息直接写到build.gradle中，更好的做法是放在gradle.properties中设置：</span><br></pre></td></tr></table></figure><p>RELEASE_STOREFILE=xxx.jks<br>RELEASE_STORE_PASSWORD = xxx<br>RELEASE_KEY_ALIAS=xxx<br>RELEASE_KEY_PASSWORD=xxx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后在build.gradle中直接引用即可：</span><br></pre></td></tr></table></figure><p>signingConfigs {<br>    myConfig {<br>        storeFilefile(RELEASE_STOREFILE)<br>        storePassword RELEASE_STORE_PASSWORD<br>        keyAlias RELEASE_KEY_ALIAS<br>        keyPassword RELEASE_KEY_PASSWORD<br>    }<br>}</p><p>``` </p><p>关于Gradle的其他配置方法大家可以参考“延伸阅读”部分的“Gradle最佳实践”。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;关于Android开发中的Gradle&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Gradle" scheme="http://yoursite.com/categories/Gradle/"/>
    
    
      <category term="Gradle" scheme="http://yoursite.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>Linux远程登录及服务器配置</title>
    <link href="http://yoursite.com/2019/07/17/Linux%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    <id>http://yoursite.com/2019/07/17/Linux远程登录/</id>
    <published>2019-07-17T13:45:43.000Z</published>
    <updated>2019-07-18T08:56:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Linux远程登录及服务器配置</blockquote><a id="more"></a><p>##Linux远程登录原理<br>安装telnet远程客户端登录工具的客户机通过23（默认）端口连接到Linux服务器，通过telnet将远程客户机上命令传到服务器执行并反馈。<br>###telnet软件包安装<br><code>sudo apt-get install inetutils-telnetd</code>(ubuntu没有默认安装Telnet软件包)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;Linux远程登录及服务器配置&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="远程登录" scheme="http://yoursite.com/tags/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>usr-key</title>
    <link href="http://yoursite.com/2019/07/17/usr-key/"/>
    <id>http://yoursite.com/2019/07/17/usr-key/</id>
    <published>2019-07-17T07:33:59.000Z</published>
    <updated>2019-07-28T07:00:56.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1++N/zGT3141S8+l8W5HUEn8esL+6xaeEK4/YQF+AYRznq9LktRnSJQHmBIQhYeaVCnXHoEekyDk5nmAej1iyT3UtCGcUHCYhddl8jOsVJLrQaOMhDv48RQMCVVAUvJCZu1R13FuV8njh9Sl6FCLc/iOgf/Im41Hg2xdtnM+CQZNDN5VDo7hOhLysaJh0gmg7eTOV3Jz21apksVcF5jRFFYZqjG1yZQbn/qh93dxG8ACzqMnI7XWrPF630mzTq32l88N85YwDD3y9p6pUeA1P5pLRCZmlvC7MgwKCAy3FYZCPJ19aPB+jQVKQxGAJr/xm7uI9QKzzc1gcdsLmIiLMRffH9SDb2EB3ALMjQcfIrPWECa/XsRLeW1UkN98taciYaiJsiouQI45JMcsyK2EUJQbHTukFt/mBYDmiAuE7YALeFuJsBLqpUiZDKRnPANVgkCOPIwYJ/c/Ozjgt4wvTx3kevSbVB7XFVrtG6fiTZYoyEB3EZsFFTFJAzNfyioyduRXXzMlJaRo3GLdQBibHc2gI5BFGaVia9VSCFfhUS+KgBlfaUhdh9n2SgkKhnBEbOwEH/dLZT9onf8aeW85V/dKZUWtS9/Dmnt5aenlmtRtGOprf8dyu7oU/dJLwJBgD98WOdP3blExhicfipRh50cFhaO0jkUaZ+Ris8LqMQoeCxrKPe4LRL6lWI+MJ6ml2RmVqcg2a8hAVRKJzteKB1HesSuRSAvVlrHuyI3LUw4UuMbRnp9OERKM3G8myVadVZKv3DPxtfACMozUXE0mp+sIWJUmZb2+4lVMj3nngJVjByAfbLQuzLPzDsTLpg5nsUpFUKBPazUhIRsYHOpofIzpF9htfCqnrvuBG+oo1ioPNoFZj9QZFI07dpVnUsgHOo9rlx4vJwUUerX8v4NMFKPqDvVNY0oP9QN6lfT0DIipq/AH7Tuj9SgOKs+FkTsTjWOXlHBn1S7jG4zF6eu2w9fBxOa1tQi2oGK+KqQ2AGGlc1iTPMXnzXw2o3TyofRpjn1n2iNy3UrGzZ/+g3IsXu5IjYmI4grYYTUTWsSzYTvsG4NLUMQkyHWfxWmk1B96pBJoNCY6vGz8tjeOQSf0ltNEqRcrJ/X1XIKIF6oncQGqTzDWO9U872OALCxf6naGNsfL6VL/zVcOEDEC4Gh3ktxwrKio1/eCUz7VK+l5J98nD7Xbcqr+bxMYjCzs++YWuJHxNDlRJndNge4m6Fx+rx5ROY68//xtRZ3N5HstL94zUsqYhgDAA8xIDhLkIV3eX/1V+DniEztJv6+HDzLCe19pO2FfMrpu3CopFsb69LIuDBUyi3mOD+e56B8p/OA3ilaswMCeFEaqHrd3EWeF1R6o/DhE/gIEWM+H5ldvvLXnjXtQ0u4XuWi7SNFQE9FEJtMy0ZQUs+DatWS9vcunGv8JdLSr2ykp7TuJU2U3m4uxcYaKlN8MXeJN6KcvzWPtRSWmlJGQ/kwmTbShPGXA4KWh6EhqCsSQcsSMYLamw9u9Uoz6mntM7+kPNcjIMqGdrPXtpq+AwuvITcP7L1UOONF2fxaDOI4SokwHghemRfru1R4ZPjI18Mp0yVaWamRvht67csJtB2sVwrlv56ZC9Q2d5HkEixfcrU=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="key" scheme="http://yoursite.com/categories/key/"/>
    
    
  </entry>
  
  <entry>
    <title>light frequency authenticate</title>
    <link href="http://yoursite.com/2019/07/05/light-frequency-authenticate/"/>
    <id>http://yoursite.com/2019/07/05/light-frequency-authenticate/</id>
    <published>2019-07-05T03:09:43.000Z</published>
    <updated>2019-07-09T06:38:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">基于可见光的无线网络认证</blockquote><a id="more"></a><p>2019-07-05</p><h2 id="802-1x认证过程："><a href="#802-1x认证过程：" class="headerlink" title="802.1x认证过程："></a>802.1x认证过程：</h2><ol><li><p>当用户有访问网络需求时打开802.1X客户端程序，输入已经申请、登记过的用户名和密码，发起连接请求（EAPOL-Start报文）。此时，客户端程序将发出请求认证的报文给设备端，开始启动一次认证过程。</p></li><li><p>设备端收到请求认证的数据帧后，将发出一个请求帧（EAP-Request/Identity报文）要求用户的客户端程序发送输入的用户名。</p></li><li><p>客户端程序响应设备端发出的请求，将用户名信息通过数据帧（EAP-Response/Identity报文）发送给设备端。设备端将客户端发送的数据帧经过封包处理后（RADIUS Access-Request报文）送给认证服务器进行处理。</p></li><li><p>RADIUS服务器收到设备端转发的用户名信息后，将该信息与数据库中的用户名表对比，找到该用户名对应的密码信息，用随机生成的一个加密字对它进行加密处理，同时也将此加密字通过RADIUS Access-Challenge报文发送给设备端，由设备端转发给客户端程序。</p></li><li><p>客户端程序收到由设备端传来的加密字（EAP-Request/MD5 Challenge报文）后，用该加密字对密码部分进行加密处理（此种加密算法通常是不可逆的），生成EAP-Response/MD5 Challenge报文，并通过设备端传给认证服务器。</p></li><li><p>RADIUS服务器将收到的已加密的密码信息（RADIUS Access-Request报文）和本地经过加密运算后的密码信息进行对比，如果相同，则认为该用户为合法用户，反馈认证通过的消息（RADIUS Access-Accept报文和EAP-Success报文）。</p></li><li><p>设备收到认证通过消息后将端口改为授权状态，允许用户通过端口访问网络。在此期间，设备端会通过向客户端定期发送握手报文的方法，对用户的在线情况进行监测。缺省情况下，两次握手请求报文都得不到客户端应答，设备端就会让用户下线，防止用户因为异常原因下线而设备无法感知。</p></li><li><p>客户端也可以发送EAPOL-Logoff报文给设备端，主动要求下线。设备端把端口状态从授权状态改变成未授权状态，并向客户端发送EAP-Failure报文。</p></li></ol><h2 id="关于WiFidog："><a href="#关于WiFidog：" class="headerlink" title="关于WiFidog："></a>关于WiFidog：</h2><p>Portal认证，通常也会叫Web认证，未认证用户上网时，设备强制用户登录到特定站点，用户可以免费访问其中的服务。当用户需要使用互联网中的其它信息时，必须在门户网站进行认证，只有认证通过后才可以使用互联网资源。现金很多中国移动CMCC、中国联通、中国电信ChinaNet的WIFI都使用这种认证接入方式。</p><p>在OpenWRT上实现Portal认证，实际上早已有解决方案：</p><ol><li><p>chillispot，但原维护作者停止更新，被chillispot.info接管继续开发；</p></li><li><p>coova-chilli，它是基于chillispot开发拓展的，功能最为强大；可以去官方看一下Coova-chilli；</p></li><li><p><strong>wifidog</strong>，前两个由于原维护作者停止更新，笔者也没有深入研究，重点钻研了wifidog，Wifidog也是OpenWRT和DD-WRT中实现Portal比较出名的。但是，Wifidog只是实现AP认证网关，需要配合外部的Portal服务器才能使用，Portal主要是提供认证所需的WEB页面且实现认证计费等的功能。虽然这也有很多商用解决方案，例如wiwiz、wifiap等，但是这些商业解决方案的目标都是盈利，即使可以免费使用，免费账号的功能和权限都受到了很大的限制，例如不能自定义页面，Web认证页面有广告等等。有条件的人可能打算自己搭建Portal服务器，但是看看Wifidog的官方Wiki，对搭建过程实在是难以理解。后来，笔者发现网络上还有一个 <strong>authpuppy方案</strong> ，官方网站 <strong><a href="http://www.authpuppy.org" target="_blank" rel="noopener">www.authpuppy.org</a></strong> ，是一个已实现好的Wifidog认证服务器，里面包含各种插件供你使用，官方的安装过程也很简单，如果你懂的HTML和面向对象编程的相关知识且拥有一个服务器，可以自行修改认证页面，使用authpuppy也是一个不错的方案。</p></li><li><p>如何 <strong>自行编写一个轻量级的Web Portal认证服务器</strong> ：</p><ul><li><h3 id="Wifidog的工作原理："><a href="#Wifidog的工作原理：" class="headerlink" title="Wifidog的工作原理："></a>Wifidog的工作原理：</h3><ol><li><p>客户端发出初始化请求，比如访问 <a href="http://www.dqrun.com" target="_blank" rel="noopener">www.dqrun.com</a> 。</p></li><li><p>网关的防火墙规则将这个请求重定向到本地网关的端口上。这个端口是Wifidog监听的端口。</p></li><li><p>Wfidog提供一个HTTP重定向回复，重定向到Web认证页面，重定向的Url的Querystring中包含了Gateway的ID，Gateway的FQDN以及其他的信息。</p></li><li><p>用户向认证服务器发出认证请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gw_id=[GatewayID, default: “default”]</span><br><span class="line">gw_address=[GatewayAddress, internal IP of router]</span><br><span class="line">gw_port=[GatewayPort, port that wifidog Gateway is listening on]</span><br><span class="line">url=[user requested url]；</span><br></pre></td></tr></table></figure></li><li><p>网关返回一个（可以是自定义的）splash（也称作“登录”）页面。</p></li><li><p>用户提供他的凭据信息，比如用户名和密码。</p></li><li><p>成功认证的话，客户端将会被重定向到网关的自己的web页面上，并且带有一个认证凭据（一个一次性的token），内容比如：<a href="http://GatewayIP:GatewayPort/wifidog/auth?token=[auth" target="_blank" rel="noopener">http://GatewayIP:GatewayPort/wifidog/auth?token=[auth</a> token]；</p></li><li><p>用户就是用获取到的凭据访问网关。</p></li><li><p>网关去认证服务器询问token的有效性。</p></li><li><p>认证服务器确认token的有效性。</p></li><li><p>网关发送重定向给客户端，以从认证服务器上获取 成功提示页面，重定向到 <a href="http://portal_server:port/portal_script" target="_blank" rel="noopener">http://portal_server:port/portal_script</a> 这个位置。</p></li><li><p>认证服务器通知客户请求成功，可以上网了。</p></li></ol></li></ul></li></ol><h2 id="待完成工作："><a href="#待完成工作：" class="headerlink" title="待完成工作："></a>待完成工作：</h2><p><strong>装wifidog</strong> ，配置:<br>1）监听端口 2)服务器地址 3）5个脚本的地址(login, portal, msg, ping, auth)<br> <strong>配置方法：</strong>远程登陆openwrt: ssh <a href="mailto:root@192.168.1.1" target="_blank" rel="noopener">root@192.168.1.1</a>， 然后修改/etc/wifidog.conf文件。</p><p><strong>将笔记本搭建成服务器</strong></p><p><strong>添加对LED的频率提取功能</strong></p><p><strong>实现动态调节LED频率,将此功能添加至系统</strong></p><hr><p>2019/07/08</p><h2 id="路由器刷openwrt系统"><a href="#路由器刷openwrt系统" class="headerlink" title="路由器刷openwrt系统"></a>路由器刷openwrt系统</h2><p>恢复出厂：断电后，先按住reset再通电。<br><br>登陆192.168.1.1（breed web），先点“恢复出厂”，选择“openwrt”；再点击“更新固件”，选中已下载好的openwrt镜像，进行固件更新。<br></p><h3 id="解决路由器联网问题"><a href="#解决路由器联网问题" class="headerlink" title="解决路由器联网问题"></a>解决路由器联网问题</h3><ol><li>设置密码：点击<code>Go to password configuration...</code>，敲入2遍新的路由器密码，点击页面最下面的 保存执行按钮，密码修改即时生效。 </li><li>设置主机名和时区：<code>System</code>菜单的<code>system</code>进去，主机名改为自己希望的名称，时区设置为<code>Asia/Shanghai</code>，保存。</li><li><strong>联网设置</strong> :点击菜单<code>Network</code>中的第二项，可以选择2G或5G无线网络连接WIFI，按 <code>scan</code>扫描按钮，稍等出现列表中，选择自己(想通过这个路由连接)的WIFI，输入密码，按提交，然后稍等，按保存执行。</li></ol><h2 id="ubuntu16-04编译OpenWrt环境搭建："><a href="#ubuntu16-04编译OpenWrt环境搭建：" class="headerlink" title="ubuntu16.04编译OpenWrt环境搭建："></a>ubuntu16.04编译OpenWrt环境搭建：</h2><ol><li><p>ubuntu下OpenWrt编译环境需要安装很多组件：<br><br><code>sudo apt-get install gcc</code><br><code>sudo apt-get install g++</code><br><code>sudo apt-get install binutils</code><br><code>sudo apt-get install patch</code><br><code>sudo apt-get install bzip2</code><br><code>sudo apt-get install flex</code><br><code>sudo apt-get install bison</code><br><code>sudo apt-get install make</code><br><code>sudo apt-get install autoconf</code><br><code>sudo apt-get install gettext</code><br><code>sudo apt-get install texinfo</code><br><code>sudo apt-get install unzip</code><br><code>sudo apt-get install sharutils</code><br><code>sudo apt-get install subversion</code><br><code>sudo apt-get install libncurses5-dev</code><br><code>sudo apt-get install ncurses-term</code><br><code>sudo apt-get install zlib1g-dev</code><br><code>sudo apt-get install subversion</code><br><code>sudo apt-get install  git-core</code><br><code>sudo apt-get install gawk</code><br><code>sudo apt-get install asciidoc</code><br><code>sudo apt-get install libz-dev</code><br>当然安装之前最好先更新下组件包：<br><code>sudo apt-get update</code><br>逐个安装…</p></li><li><p>新建一个openwrt目录，使用命令：<br><code>mkdir openwrt</code><br><code>sudo chmod 777 openwrt</code><br>接下来的所有命令都在/openwrt目录下运行</p></li><li><p>下载OpenWrt源码:<br><code>git clone git://git.openwrt.org/openwrt/openwrt.git</code></p></li><li><p>添加软件扩展包：<br><code>cd /home/ngmi/openwrt/openwrt/</code><br><code>cp feeds.conf.default feeds.conf</code>(将feeds.conf.default修改为feeds.conf)</p></li><li><p>更新扩展，安装扩展：<br><code>./scripts/feeds update -a</code><br><code>./scripts/feeds install -a</code></p></li><li><p>测试下编译环境，使用命令：<br><code>make defconfig</code></p></li><li><p><code>make menuconfig</code><br>如果一切正常，会出现一个配置菜单，可以选择要编译的固件平台、型号，还能选择固件中要添加的功能和组件，至此编译环境就搭建好了。</p></li></ol><h2 id="在OpenWrt的路由器上安装Wifidog应用程序"><a href="#在OpenWrt的路由器上安装Wifidog应用程序" class="headerlink" title="在OpenWrt的路由器上安装Wifidog应用程序"></a>在OpenWrt的路由器上安装Wifidog应用程序</h2><ol><li>在OpenWrt系统的源码文件下，编辑<code>feeds.conf.default</code>文件<br><br><code>vim feeds.conf.default</code><br>在其中增加一行：<br><code>src-git wifidog https://github.com/wifidog/wifidog-gateway.git</code></li><li>然后更新，再安装：<br><code>./scripts/feeds update -a</code><br><code>./scripts/feeds install -a</code></li><li>终端执行编译命令<br><code>make menuconfig</code></li><li>在<code>Network/captive portals/</code>下选择wifidog 就有选择 WiFiDog 这一项了</li></ol><hr><p>2019/07/09</p><h2 id="配置服务器中遇到的问题"><a href="#配置服务器中遇到的问题" class="headerlink" title="配置服务器中遇到的问题"></a>配置服务器中遇到的问题</h2><p><strong>问题：</strong></p><figure class="highlight plain"><figcaption><span>python3 manage.py runserver 0.0.0.0:8000</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;manage.py&quot;, line 22, in &lt;module&gt;</span><br><span class="line">    execute_from_command_line(sys.argv)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/__init__.py&quot;, line 381, in execute_from_command_line</span><br><span class="line">    utility.execute()</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/__init__.py&quot;, line 375, in execute</span><br><span class="line">    self.fetch_command(subcommand).run_from_argv(self.argv)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/base.py&quot;, line 323, in run_from_argv</span><br><span class="line">    self.execute(*args, **cmd_options)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/commands/runserver.py&quot;, line 60, in execute</span><br><span class="line">    super().execute(*args, **options)</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/core/management/base.py&quot;, line 364, in execute</span><br><span class="line">    output = self.handle(*args, **options)</span><br><span class="line">  File &quot;/home/ngmi/lightFreq-master/my_wifi_auth_server/django_pdb/management/commands/runserver.py&quot;, line 59, in handle</span><br><span class="line">    and middleware not in settings.MIDDLEWARE_CLASSES):</span><br><span class="line">  File &quot;/usr/local/lib/python3.5/dist-packages/django/conf/__init__.py&quot;, line 80, in __getattr__</span><br><span class="line">    val = getattr(self._wrapped, name)</span><br><span class="line">AttributeError: &apos;Settings&apos; object has no attribute &apos;MIDDLEWARE_CLASSES&apos;</span><br></pre></td></tr></table></figure><p><strong>解决方法：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">middleware = <span class="string">'django_pdb.middleware.PdbMiddleware'</span></span><br><span class="line">        <span class="keyword">if</span> ((pdb_option <span class="keyword">or</span> settings.DEBUG)</span><br><span class="line">            <span class="keyword">and</span> middleware <span class="keyword">not</span> <span class="keyword">in</span> settings.MIDDLEWARE):</span><br><span class="line">            settings.MIDDLEWARE += (middleware,)</span><br></pre></td></tr></table></figure><p>由于Django版本的问题，需要将（lightFreq-master/my_wifi_auth_server/django_pdb/management/conmands/runserver.py）以上代码中原本的MIDDLEWARE_CLASSES改为MIDDLEWARE。</p><p><strong>问题：</strong></p><figure class="highlight plain"><figcaption><span>HTTP_HOST header: '0.0.0.0:8000'. You may need to add '0.0.0.0' to ALLOWED_HOSTS.</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bad Request: /</span><br><span class="line">[09/Jul/2019 14:14:40] &quot;GET / HTTP/1.1&quot; 400 66219</span><br></pre></td></tr></table></figure><p>进入<a href="http://0.0.0.0:8000页面显示Invalid" target="_blank" rel="noopener">http://0.0.0.0:8000页面显示Invalid</a>…<br><br><strong>解决办法：</strong><br>将lightFreq-master/my_wifi_auth_server/Auth_server/settings.py文件中<code>ALLOWED_HOSTS = [&#39;192.168.1.162&#39;,&#39;127.0.0.1&#39;]</code>修改为<code>ALLOWED_HOSTS = [&#39;*&#39;]</code></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;基于可见光的无线网络认证&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="light-frequency-authenticate" scheme="http://yoursite.com/categories/light-frequency-authenticate/"/>
    
    
      <category term="lightFre" scheme="http://yoursite.com/tags/lightFre/"/>
    
  </entry>
  
  <entry>
    <title>perfect-quare-number</title>
    <link href="http://yoursite.com/2019/07/04/perfect-quare-number/"/>
    <id>http://yoursite.com/2019/07/04/perfect-quare-number/</id>
    <published>2019-07-04T09:48:04.000Z</published>
    <updated>2019-07-04T10:05:02.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">求一个数，加100和加268都是完全平方数<br>解决:unindent does not match any outer indentation level问题</blockquote><a id="more"></a><h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100000</span>):</span><br><span class="line">x = int(math.sqrt(i + <span class="number">100</span>))</span><br><span class="line">y = int(math.sqrt(i + <span class="number">268</span>))</span><br><span class="line"><span class="keyword">if</span> (x * x == i + <span class="number">100</span>) <span class="keyword">and</span> (y * y == i + <span class="number">268</span>):</span><br><span class="line"><span class="keyword">print</span> (i)</span><br></pre></td></tr></table></figure><h2 id="error"><a href="#error" class="headerlink" title="error"></a>error</h2><p>unindent does not match any outer indentation level：Tab换行对齐和四个空格的对齐不能混用，混用会这样报错。</p><p>print i：正确应为 print (i)</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;求一个数，加100和加268都是完全平方数&lt;br&gt;解决:unindent does not match any outer indentation level问题
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="python-100-practices" scheme="http://yoursite.com/categories/python-100-practices/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>四年又三年</title>
    <link href="http://yoursite.com/2019/07/03/%E5%9B%9B%E5%B9%B4%E5%8F%88%E4%B8%89%E5%B9%B4/"/>
    <id>http://yoursite.com/2019/07/03/四年又三年/</id>
    <published>2019-07-03T13:02:40.000Z</published>
    <updated>2019-07-03T14:16:44.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
  <entry>
    <title>十六岁不太友好的reminder</title>
    <link href="http://yoursite.com/2019/07/03/%E6%B5%AE%E7%94%9F%E8%8B%A5%E6%A2%A6/"/>
    <id>http://yoursite.com/2019/07/03/浮生若梦/</id>
    <published>2019-07-03T11:57:29.000Z</published>
    <updated>2019-07-03T14:25:30.000Z</updated>
    
    <content type="html"><![CDATA[<div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />    <label for="pass">Please enter the password to read the blog.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      The article has been encrypted, please enter your password to view.&lt;br&gt;
    
    </summary>
    
    
      <category term="writing" scheme="http://yoursite.com/categories/writing/"/>
    
    
  </entry>
  
</feed>
